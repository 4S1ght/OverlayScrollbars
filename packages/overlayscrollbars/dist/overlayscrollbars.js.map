{"version":3,"file":"overlayscrollbars.js","sources":["../src/support/cache/cache.ts","../src/support/utils/types.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/attribute.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/dom/class.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/utils/equal.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/offset.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/support/options/validation.ts","../src/support/options/transformation.ts","../src/classnames.ts","../src/environment/environment.ts","../src/setups/structureSetup.ts","../src/lifecycles/trinsicLifecycle.ts","../src/lifecycles/paddingLifecycle.ts","../src/lifecycles/overflowLifecycle.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/lifecycles/lifecycleHub.ts","../src/options/options.ts","../src/overlayscrollbars/overlayscrollbars.ts","../src/index.ts"],"sourcesContent":["export interface CacheValues<T> {\r\n  readonly _value?: T;\r\n  readonly _previous?: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport interface CacheOptions<T> {\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<T>;\r\n  // Initial value for _value\r\n  _initialValue?: T;\r\n  // If true updates always _value and _previous, otherwise they update only when changed\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport interface Cache<T, C = undefined> {\r\n  _current: (force?: boolean) => CacheValues<T>;\r\n  _update: CacheUpdate<T, C>;\r\n}\r\n\r\nexport type CacheUpdate<T, C> = undefined extends C\r\n  ? (force?: boolean | 0, context?: C) => CacheValues<T>\r\n  : (force: boolean | 0, context: C) => CacheValues<T>;\r\n\r\nexport type UpdateCachePropFunction<T, C> = undefined extends C\r\n  ? (context?: C, current?: T, previous?: T) => T\r\n  : C extends T\r\n  ? ((context: C, current?: T, previous?: T) => T) | 0\r\n  : (context: C, current?: T, previous?: T) => T;\r\n\r\nexport type EqualCachePropFunction<T> = (currentVal?: T, newVal?: T) => boolean;\r\n\r\nexport const createCache = <T, C = undefined>(update: UpdateCachePropFunction<T, C>, options?: CacheOptions<T>): Cache<T, C> => {\r\n  const { _equal, _initialValue, _alwaysUpdateValues } = options || {};\r\n  let _value: T | undefined = _initialValue;\r\n  let _previous: T | undefined;\r\n\r\n  const cacheUpdate = ((force?: boolean | 0, context?: C) => {\r\n    const curr = _value;\r\n    // @ts-ignore\r\n    // update can only not be a function if C extends T as described in \"UpdateCachePropFunction\" type definition\r\n    // if C extends T the cast (context as T) is perfectly valid\r\n    const newVal = update ? update(context, _value, _previous) : (context as T);\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return {\r\n      _value,\r\n      _previous,\r\n      _changed: changed,\r\n    };\r\n  }) as CacheUpdate<T, C>;\r\n\r\n  return {\r\n    _update: cacheUpdate,\r\n    _current: (force?: boolean) => ({\r\n      _value,\r\n      _previous,\r\n      _changed: !!force,\r\n    }),\r\n  };\r\n};\r\n","import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) => {\r\n  return isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n};\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: Array<unknown>) => unknown {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat) ? (length > 0 && isObject(obj) ? length - 1 in obj : true) : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(obj: PlainObject, callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: Array<T>, item: T, fromIndex?: number): number => arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: Array<T>, items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): Array<T> => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items) ? Array.prototype.push.apply(array, items as Array<T>) : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr: ArrayLike<T>) => {\r\n  if (Array.from) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: Array<T> = [];\r\n\r\n  each(arr, (elm) => {\r\n    push(result, elm);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: Array<any> | null | undefined) => array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, p1?: unknown): void => {\r\n  const runFn = (fn: RunEachItem) => fn && fn(p1);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value?: string): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> => (elm ? from(elm.childNodes) : []);\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (elm: InputElementType, highBoundarySelector: string, deepBoundarySelector: string): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (parentElm: Node | null | undefined, preferredAnchor: Node | null | undefined, insertedElms: NodeCollection): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = ['WebKit', 'Moz', 'O', 'MS', 'webkit', 'moz', 'o', 'ms'];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without, or undefined if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string | undefined => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n    result = resultPossibilities.find((resultPossibility: string) => elmStyle[resultPossibility] !== undefined);\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported wuthout, or undefined if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string | undefined => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>('IntersectionObserver');\r\nexport const ResizeObserverConstructor: any | undefined = jsAPI('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | null | undefined,\r\n  className: string,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | null | undefined, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n */\r\nexport const addClass = (elm: Element | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n};\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (classNameA: string | null | undefined, classNameB: string | null | undefined) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","export interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean => !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null | undefined): boolean => (elm ? elementHasDimensions(elm as HTMLElement) : false);\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(target: EventTarget, eventNames: string, listener: (event: T) => any, capture?: boolean): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event) => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event) => evt.preventDefault();\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(\r\n  a: T | undefined,\r\n  b: T | undefined,\r\n  props: Array<keyof T>,\r\n  propMutation?: ((value: any) => any) | null | false\r\n): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      const compareA = propMutation ? propMutation(a[prop]) : a[prop];\r\n      const compareB = propMutation ? propMutation(b[prop]) : b[prop];\r\n      if (compareA !== compareB) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = (a?: WH, b?: WH) => equal<WH>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = (a?: XY, b?: XY) => equal<XY>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n\r\n/**\r\n * Compares two DOM Rects for their equality of their width and height properties\r\n * Also returns false if one of the DOM Rects is undefined or null.\r\n * @param a DOM Rect a.\r\n * @param b DOM Rect b.\r\n * @param round Whether the values should be rounded.\r\n */\r\nexport const equalBCRWH = (a?: DOMRect, b?: DOMRect, round?: boolean) =>\r\n  equal<DOMRect>(a, b, ['width', 'height'], round && ((value) => Math.round(value)));\r\n","import { isNumber } from 'support/utils/types';\r\nimport { cAF, rAF } from 'support/compatibility/apis';\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param timeout The timeout for debouncing. If 0 or lower animation frame is used for debouncing, a timeout otherwise.\r\n * @param maxWait A maximum amount of ms. before the function will be called even with debounce.\r\n */\r\nexport const debounce = (functionToDebounce: (...args: any) => any, timeout?: number, maxWait?: number) => {\r\n  let timeoutId: number | void;\r\n  let lastCallTime: number;\r\n  const hasTimeout = isNumber(timeout) && timeout > 0;\r\n  const hasMaxWait = isNumber(maxWait) && maxWait > 0;\r\n  const cancel = hasTimeout ? window.clearTimeout : cAF!;\r\n  const set = hasTimeout ? window.setTimeout : rAF!;\r\n  const setFn = function (args: IArguments) {\r\n    lastCallTime = hasMaxWait ? performance.now() : 0;\r\n    timeoutId && cancel(timeoutId);\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  return function () {\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const boundSetFn = setFn.bind(this, arguments); // eslint-disable-line\r\n    const forceCall = hasMaxWait ? performance.now() - lastCallTime >= maxWait! : false;\r\n\r\n    timeoutId && cancel(timeoutId);\r\n    timeoutId = forceCall ? boundSetFn() : (set(boundSetFn, timeout!) as number);\r\n  };\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray, isUndefined } from 'support/utils/types';\r\nimport { PlainObject, StyleObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\nconst cssNumber = {\r\n  animationiterationcount: 1,\r\n  columncount: 1,\r\n  fillopacity: 1,\r\n  flexgrow: 1,\r\n  flexshrink: 1,\r\n  fontweight: 1,\r\n  lineheight: 1,\r\n  opacity: 1,\r\n  order: 1,\r\n  orphans: 1,\r\n  widows: 1,\r\n  zindex: 1,\r\n  zoom: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number => (!cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val);\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null ? computedStyle[prop] || computedStyle.getPropertyValue(prop) : elm.style[prop];\r\nconst setCSSVal = (elm: HTMLElement | null | undefined, prop: string, val: string | number): void => {\r\n  try {\r\n    if (elm) {\r\n      const { style } = elm;\r\n      if (!isUndefined(style[prop])) {\r\n        style[prop] = adaptCSSVal(prop, val);\r\n      } else {\r\n        style.setProperty(prop, val as string);\r\n      }\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style<CustomCssProps>(elm: HTMLElement | null | undefined, styles: StyleObject<CustomCssProps>): void;\r\nexport function style<CustomCssProps>(elm: HTMLElement | null | undefined, styles: string): string;\r\nexport function style<CustomCssProps>(elm: HTMLElement | null | undefined, styles: Array<string> | string): { [key: string]: string };\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | null | undefined,\r\n  styles: StyleObject<CustomCssProps> | Array<string> | string\r\n): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | null): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns a top\r\n * @param elm\r\n * @param property\r\n */\r\nexport const topRightBottomLeft = (elm: HTMLElement | null | undefined, propertyPrefix?: string, propertySuffix?: string): TRBL => {\r\n  const finalPrefix = propertyPrefix ? `${propertyPrefix}-` : '';\r\n  const finalSuffix = propertySuffix ? `-${propertySuffix}` : '';\r\n  const top = `${finalPrefix}top${finalSuffix}`;\r\n  const right = `${finalPrefix}right${finalSuffix}`;\r\n  const bottom = `${finalPrefix}bottom${finalSuffix}`;\r\n  const left = `${finalPrefix}left${finalSuffix}`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { OptionsTemplate, OptionsTemplateTypes, OptionsTemplateType, Func, OptionsValidationResult, OptionsValidated } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\n\r\nconst { stringify } = JSON;\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = ['boolean', 'number', 'string', 'array', 'object', 'function', 'null'].reduce(\r\n  (result, item) => {\r\n    result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n    return result;\r\n  },\r\n  {} as OptionsTemplateTypesDictionary\r\n);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff: T,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: OptionsValidated<T> = {};\r\n  const optionsCopy: T = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsDiffValue: any = isUndefined(optionsDiff[prop]) ? {} : optionsDiff[prop];\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> = template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const validatedResult = validateRecursive(optionsValue, templateValue as PlainObject, optionsDiffValue, doWriteErrors, propPrefix + prop);\r\n      validatedOptions[prop] = validatedResult._validated as any;\r\n      optionsCopy[prop] = validatedResult._foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        const doStringifyComparison = isArray(optionsValue) || isPlainObject(optionsValue);\r\n        if (doStringifyComparison ? stringify(optionsValue) !== stringify(optionsDiffValue) : optionsValue !== optionsDiffValue) {\r\n          validatedOptions[prop] = optionsValue;\r\n        }\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${errorEnumStrings.length > 0 ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].` : ''}`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    _foreign: optionsCopy,\r\n    _validated: validatedOptions,\r\n  };\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff?: T | null,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => {\r\n  /*\r\n    if (!isEmptyObject(foreign) && doWriteErrors)\r\n        console.warn(`The following options are discarded due to invalidity:\\r\\n ${window.JSON.stringify(foreign, null, 2)}`);\r\n\r\n    //add values, which aren't specified in the template, to the finished validated object to prevent them from being discarded\r\n    if (keepForeignProps) {\r\n        Object.assign(result.validated, foreign);\r\n    }\r\n    */\r\n  return validateRecursive<T>(options, template, optionsDiff || ({} as T), doWriteErrors || false);\r\n};\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<Record<string, unknown>>;\r\n  readonly function: OptionsTemplateType<Func>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n","import { OptionsTemplate, OptionsWithOptionsTemplate, OptionsTemplateTypes } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\nimport { isArray } from 'support/utils/types';\r\nimport { each, keys } from 'support/utils';\r\n\r\nexport interface OptionsWithOptionsTemplateTransformation<T extends Required<T>> {\r\n  _template: OptionsTemplate<T>;\r\n  _options: T;\r\n}\r\n\r\n/**\r\n * Transforms the given OptionsWithOptionsTemplate<T> object to its corresponding generic (T) Object or its corresponding Template object.\r\n * @param optionsWithOptionsTemplate The OptionsWithOptionsTemplate<T> object which shall be converted.\r\n * @param toTemplate True if the given OptionsWithOptionsTemplate<T> shall be converted to its corresponding Template object.\r\n */\r\nexport function transformOptions<T extends Required<T>>(\r\n  optionsWithOptionsTemplate: OptionsWithOptionsTemplate<T>\r\n): OptionsWithOptionsTemplateTransformation<T> {\r\n  const result: any = {\r\n    _template: {},\r\n    _options: {},\r\n  };\r\n\r\n  each(keys(optionsWithOptionsTemplate), (key: Extract<keyof T, string>) => {\r\n    const val: PlainObject | OptionsTemplateTypes | Array<OptionsTemplateTypes> = optionsWithOptionsTemplate[key];\r\n\r\n    if (isArray(val)) {\r\n      result._template[key] = val[1];\r\n      result._options[key] = val[0];\r\n    } else {\r\n      //  if (isObject(val))\r\n      const tmpResult = transformOptions(val as OptionsWithOptionsTemplate<typeof val>);\r\n      result._template[key] = tmpResult._template;\r\n      result._options[key] = tmpResult._options;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameViewportArrange = `${classNameViewport}-arrange`;\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalBCRWH,\r\n  getBoundingClientRect,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  _autoUpdateLoop: boolean;\r\n  _nativeScrollbarSize: XY;\r\n  _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  _nativeScrollbarStyling: boolean;\r\n  _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  _flexboxGlue: boolean;\r\n  _cssCustomProperties: boolean;\r\n  _addListener(listener: OnEnvironmentChanged): void;\r\n  _removeListener(listener: OnEnvironmentChanged): void;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst getNativeScrollbarSize = (body: HTMLElement, measureElm: HTMLElement): XY => {\r\n  appendChildren(body, measureElm);\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h,\r\n    y: oSize.w - cSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, 'scrollbar-width') === 'none' || window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n  } catch (ex) {}\r\n\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (parentElm: HTMLElement, childElm: HTMLElement): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const minOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMin = equalBCRWH(minOffsetsize, minOffsetsizeParent, true);\r\n\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const maxOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMax = equalBCRWH(maxOffsetsize, maxOffsetsizeParent, true);\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const nativeScrollbarSize = getNativeScrollbarSize(body, envElm);\r\n  const nativeScrollbarStyling = false; //getNativeScrollbarStyling(envElm); //TODO: Re - enable;\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n\r\n  const env: Environment = {\r\n    _autoUpdateLoop: false,\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _cssCustomProperties: style(envElm, 'zIndex') === '-1',\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.add(listener);\r\n    },\r\n    _removeListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.delete(listener);\r\n    },\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n    let scrollbarSize = nativeScrollbarSize;\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const newScrollbarSize = (environmentInstance._nativeScrollbarSize = getNativeScrollbarSize(body, envElm));\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSize.x !== newScrollbarSize.x || scrollbarSize.y !== newScrollbarSize.y) {\r\n            runEach(onChangedListener);\r\n          }\r\n\r\n          scrollbarSize = newScrollbarSize;\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  isUndefined,\r\n  removeElements,\r\n  removeClass,\r\n  push,\r\n  runEach,\r\n  insertBefore,\r\n  attr,\r\n} from 'support';\r\nimport {\r\n  classNameHost,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameViewportArrange,\r\n  classNameContent,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { getEnvironment } from 'environment';\r\nimport { OSTarget, OSTargetObject, InternalVersionOf, OSTargetElement } from 'typings';\r\n\r\nexport interface OSTargetContext {\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: HTMLDocument;\r\n}\r\n\r\nexport interface PreparedOSTargetObject extends Required<InternalVersionOf<OSTargetObject>> {\r\n  _host: HTMLElement;\r\n  _viewportArrange: HTMLStyleElement | null;\r\n}\r\n\r\nexport interface StructureSetup {\r\n  _targetObj: PreparedOSTargetObject;\r\n  _targetCtx: OSTargetContext;\r\n  _destroy: () => void;\r\n}\r\n\r\nconst unwrap = (elm: HTMLElement | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nlet contentArrangeCounter = 0;\r\nconst createUniqueViewportArrangeElement = () => {\r\n  const elm = document.createElement('style');\r\n\r\n  attr(elm, 'id', `${classNameViewportArrange}-${contentArrangeCounter}`);\r\n  contentArrangeCounter++;\r\n\r\n  return elm;\r\n};\r\n\r\nexport const createStructureSetup = (target: OSTarget | OSTargetObject): StructureSetup => {\r\n  const targetIsElm = isHTMLElement(target);\r\n  const osTargetObj: InternalVersionOf<OSTargetObject> = targetIsElm\r\n    ? ({} as InternalVersionOf<OSTargetObject>)\r\n    : {\r\n        _host: (target as OSTargetObject).host,\r\n        _target: (target as OSTargetObject).target,\r\n        _padding: (target as OSTargetObject).padding,\r\n        _viewport: (target as OSTargetObject).viewport,\r\n        _content: (target as OSTargetObject).content,\r\n      };\r\n\r\n  if (targetIsElm) {\r\n    const padding = createDiv(classNamePadding);\r\n    const viewport = createDiv(classNameViewport);\r\n    const content = createDiv(classNameContent);\r\n\r\n    appendChildren(padding, viewport);\r\n    appendChildren(viewport, content);\r\n\r\n    osTargetObj._target = target as OSTargetElement;\r\n    osTargetObj._padding = padding;\r\n    osTargetObj._viewport = viewport;\r\n    osTargetObj._content = content;\r\n  }\r\n\r\n  let { _target, _padding, _viewport, _content } = osTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextarea = is(_target, 'textarea');\r\n  const isBody = !isTextarea && is(_target, 'body');\r\n  const _host = (isTextarea ? osTargetObj._host || createDiv() : _target) as HTMLElement;\r\n  const getTargetContents = (contentSlot: HTMLElement) => (isTextarea ? (_target as HTMLTextAreaElement) : contents(contentSlot as HTMLElement));\r\n  const isTextareaHostGenerated = isTextarea && _host !== osTargetObj._host;\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  if (targetIsElm) {\r\n    appendChildren(_content!, getTargetContents(_target));\r\n    appendChildren(_host, _padding);\r\n\r\n    push(destroyFns, () => {\r\n      appendChildren(_host, contents(_content));\r\n      removeElements(_padding);\r\n      removeClass(_host, classNameHost);\r\n    });\r\n  } else {\r\n    const contentContainingElm = _content || _viewport || _padding || _host;\r\n    const createPadding = isUndefined(_padding);\r\n    const createViewport = isUndefined(_viewport);\r\n    const createContent = isUndefined(_content);\r\n    const targetContents = getTargetContents(contentContainingElm);\r\n\r\n    _padding = osTargetObj._padding = createPadding ? createDiv() : _padding;\r\n    _viewport = osTargetObj._viewport = createViewport ? createDiv() : _viewport;\r\n    _content = osTargetObj._content = createContent ? createDiv() : _content;\r\n\r\n    appendChildren(_host, _padding);\r\n    appendChildren(_padding || _host, _viewport);\r\n    appendChildren(_viewport, _content);\r\n\r\n    const contentSlot = _content || _viewport;\r\n    appendChildren(contentSlot, targetContents);\r\n\r\n    push(destroyFns, () => {\r\n      if (createContent) {\r\n        unwrap(_content);\r\n      }\r\n      if (createViewport) {\r\n        unwrap(_viewport);\r\n      }\r\n      if (createPadding) {\r\n        unwrap(_padding);\r\n      }\r\n      removeClass(_host, classNameHost);\r\n      removeClass(_padding, classNamePadding);\r\n      removeClass(_viewport, classNameViewport);\r\n      removeClass(_content, classNameContent);\r\n    });\r\n  }\r\n\r\n  addClass(_host, classNameHost);\r\n  addClass(_padding, classNamePadding);\r\n  addClass(_viewport, classNameViewport);\r\n  addClass(_content, classNameContent);\r\n\r\n  const ownerDocument: HTMLDocument = _target.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const ctx: OSTargetContext = {\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n  };\r\n  // @ts-ignore\r\n  const obj: PreparedOSTargetObject = {\r\n    ...osTargetObj,\r\n    _host,\r\n  };\r\n\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _cssCustomProperties } = getEnvironment();\r\n  if (_nativeScrollbarStyling) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  } else if (!_cssCustomProperties && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y)) {\r\n    const viewportArrangeElm = createUniqueViewportArrangeElement();\r\n\r\n    insertBefore(_viewport, viewportArrangeElm);\r\n    push(destroyFns, removeElements.bind(0, viewportArrangeElm));\r\n\r\n    obj._viewportArrange = viewportArrangeElm;\r\n  }\r\n\r\n  return {\r\n    _targetObj: obj,\r\n    _targetCtx: ctx,\r\n    _destroy: () => {\r\n      runEach(destroyFns);\r\n    },\r\n  };\r\n};\r\n","import { style } from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the trinsic behavior of the content element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createTrinsicLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup } = lifecycleHub;\r\n  const { _content } = _structureSetup._targetObj;\r\n\r\n  return (updateHints) => {\r\n    const { _heightIntrinsic } = updateHints;\r\n    const { _value: heightIntrinsic, _changed: heightIntrinsicChanged } = _heightIntrinsic;\r\n\r\n    if (heightIntrinsicChanged) {\r\n      style(_content, {\r\n        height: heightIntrinsic ? 'auto' : '100%',\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { createCache, topRightBottomLeft, equalTRBL, style } from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\nimport { StyleObject } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the padding styling of the padding and viewport element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createPaddingLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _setPaddingInfo, _setViewportPaddingStyle, _structureSetup } = lifecycleHub;\r\n  const { _host, _padding, _viewport } = _structureSetup._targetObj;\r\n  const { _update: updatePaddingCache, _current: currentPaddingCache } = createCache(() => topRightBottomLeft(_host, 'padding'), {\r\n    _equal: equalTRBL,\r\n  });\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    let { _value: padding, _changed: paddingChanged } = currentPaddingCache(force);\r\n    const { _nativeScrollbarStyling } = getEnvironment();\r\n    const { _sizeChanged, _directionIsRTL } = updateHints;\r\n    const { _value: directionIsRTL, _changed: directionChanged } = _directionIsRTL;\r\n    const { _value: paddingAbsolute, _changed: paddingAbsoluteChanged } = checkOption('paddingAbsolute');\r\n\r\n    if (_sizeChanged || paddingChanged) {\r\n      ({ _value: padding, _changed: paddingChanged } = updatePaddingCache(force));\r\n    }\r\n\r\n    const paddingStyleChanged = paddingAbsoluteChanged || directionChanged || paddingChanged;\r\n\r\n    if (paddingStyleChanged) {\r\n      const { _value: padding } = updatePaddingCache(force);\r\n      // if there is no padding element and no scrollbar styling padding absolute isn't supported\r\n      const paddingRelative = !paddingAbsolute || (!_padding && !_nativeScrollbarStyling);\r\n      const paddingHorizontal = padding!.r + padding!.l;\r\n      const paddingVertical = padding!.t + padding!.b;\r\n\r\n      const paddingStyle: StyleObject = {\r\n        marginTop: 0,\r\n        marginRight: 0,\r\n        marginBottom: paddingRelative ? -paddingVertical : 0,\r\n        marginLeft: 0,\r\n        top: paddingRelative ? -padding!.t : 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        maxWidth: paddingRelative ? `calc(100% + ${paddingHorizontal}px)` : '',\r\n      };\r\n      const viewportStyle: StyleObject = {\r\n        paddingTop: paddingRelative ? padding!.t : 0,\r\n        paddingRight: paddingRelative ? padding!.r : 0,\r\n        paddingBottom: paddingRelative ? padding!.b : 0,\r\n        paddingLeft: paddingRelative ? padding!.l : 0,\r\n      };\r\n\r\n      if (paddingRelative) {\r\n        const horizontalPositionKey: keyof StyleObject = directionIsRTL ? 'right' : 'left';\r\n        const horizontalMarginKey: keyof StyleObject = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n        const horizontalPositionValue = directionIsRTL ? padding!.r : padding!.l;\r\n\r\n        paddingStyle[horizontalPositionKey] = -horizontalPositionValue;\r\n        paddingStyle[horizontalMarginKey] = -paddingHorizontal;\r\n      }\r\n\r\n      // if there is no padding element apply the style to the viewport element instead\r\n      style(_padding || _viewport, paddingStyle);\r\n      style(_viewport, viewportStyle);\r\n\r\n      _setPaddingInfo({\r\n        _absolute: !paddingRelative,\r\n        _padding: padding!,\r\n      });\r\n      _setViewportPaddingStyle(\r\n        _padding\r\n          ? viewportStyle\r\n          : {\r\n              ...paddingStyle,\r\n              ...viewportStyle,\r\n            }\r\n      );\r\n    }\r\n\r\n    return {\r\n      _paddingStyleChanged: paddingStyleChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  keys,\r\n  attr,\r\n  WH,\r\n  XY,\r\n  equalXY,\r\n  style,\r\n  scrollSize,\r\n  CacheValues,\r\n  equalWH,\r\n  addClass,\r\n  removeClass,\r\n  clientSize,\r\n  offsetSize,\r\n  getBoundingClientRect,\r\n  noop,\r\n  each,\r\n} from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverflowBehavior } from 'options';\r\nimport { StyleObject } from 'typings';\r\nimport { classNameViewportArrange, classNameViewportScrollbarStyling } from 'classnames';\r\n\r\ninterface ContentScrollSizeCacheContext {\r\n  _viewportRect: DOMRect;\r\n  _viewportOffsetSize: WH<number>;\r\n  _viewportScrollSize: WH<number>;\r\n}\r\n\r\ninterface OverflowAmountCacheContext {\r\n  _contentScrollSize: WH<number>;\r\n  _viewportSize: WH<number>;\r\n}\r\n\r\ninterface ViewportOverflowState {\r\n  _scrollbarsHideOffset: XY<number>;\r\n  _scrollbarsHideOffsetArrange: XY<boolean>;\r\n  _overflowScroll: XY<boolean>;\r\n}\r\n\r\ninterface UndoViewportArrangeResult {\r\n  _redoViewportArrange: () => void;\r\n  _viewportOverflowState?: ViewportOverflowState;\r\n}\r\n\r\ninterface OverflowOption {\r\n  x: OverflowBehavior;\r\n  y: OverflowBehavior;\r\n}\r\n\r\nconst overlaidScrollbarsHideOffset = 42;\r\n\r\n/**\r\n * Lifecycle with the responsibility to set the correct overflow and scrollbar hiding styles of the viewport element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createOverflowLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup, _doViewportArrange, _getViewportPaddingStyle, _getPaddingInfo, _setViewportOverflowScroll } = lifecycleHub;\r\n  const { _host, _padding, _viewport, _viewportArrange } = _structureSetup._targetObj;\r\n  const { _update: updateContentScrollSizeCache, _current: getCurrentContentScrollSizeCache } = createCache<\r\n    WH<number>,\r\n    ContentScrollSizeCacheContext\r\n  >((ctx) => fixScrollSizeRounding(ctx._viewportScrollSize, ctx._viewportOffsetSize, ctx._viewportRect), { _equal: equalWH });\r\n  const { _update: updateOverflowAmountCache, _current: getCurrentOverflowAmountCache } = createCache<XY<number>, OverflowAmountCacheContext>(\r\n    (ctx) => ({\r\n      x: Math.max(0, ctx._contentScrollSize.w - ctx._viewportSize.w),\r\n      y: Math.max(0, ctx._contentScrollSize.h - ctx._viewportSize.h),\r\n    }),\r\n    { _equal: equalXY, _initialValue: { x: 0, y: 0 } }\r\n  );\r\n\r\n  /**\r\n   * Fixes incorrect roundng of scroll size.\r\n   * @param viewportScrollSize The potential incorrect viewport scroll size.\r\n   * @param viewportOffsetSize The viewport offset size.\r\n   * @param viewportRect The viewport bounding client rect.\r\n   * @returns The passed scroll size without rounding errors.\r\n   */\r\n  const fixScrollSizeRounding = (viewportScrollSize: WH<number>, viewportOffsetSize: WH<number>, viewportRect: DOMRect): WH<number> => ({\r\n    w: viewportScrollSize.w - Math.round(Math.max(0, viewportRect.width - viewportOffsetSize.w)),\r\n    h: viewportScrollSize.h - Math.round(Math.max(0, viewportRect.height - viewportOffsetSize.h)),\r\n  });\r\n\r\n  /**\r\n   * Applies a fixed height to the viewport so it can't overflow or underflow the host element.\r\n   * @param viewportOverflowState The current overflow state.\r\n   * @param heightIntrinsic Whether the host height is intrinsic or not.\r\n   */\r\n  const fixFlexboxGlue = (viewportOverflowState: ViewportOverflowState, heightIntrinsic: boolean) => {\r\n    style(_viewport, {\r\n      height: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      const { _absolute: paddingAbsolute, _padding: padding } = _getPaddingInfo();\r\n      const { _overflowScroll, _scrollbarsHideOffset } = viewportOverflowState;\r\n      const hostBCR = getBoundingClientRect(_host);\r\n      const hostOffsetSize = offsetSize(_host);\r\n      const hostClientSize = clientSize(_host);\r\n      const paddingAbsoluteVertical = paddingAbsolute ? padding.b + padding.t : 0;\r\n      const clientSizeWithoutRounding = hostClientSize.h + (hostBCR.height - hostOffsetSize.h);\r\n\r\n      style(_viewport, {\r\n        height: clientSizeWithoutRounding + (_overflowScroll.x ? _scrollbarsHideOffset.x : 0) - paddingAbsoluteVertical,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the current overflow state of the viewport.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param viewportStyleObj The viewport style object where the overflow scroll property can be read of, or undefined if shall be determined.\r\n   * @returns A object which contains informations about the current overflow state.\r\n   */\r\n  const getViewportOverflowState = (showNativeOverlaidScrollbars: boolean, viewportStyleObj?: StyleObject): ViewportOverflowState => {\r\n    const { _nativeScrollbarSize, _nativeScrollbarIsOverlaid, _nativeScrollbarStyling } = getEnvironment();\r\n    const { x: overlaidX, y: overlaidY } = _nativeScrollbarIsOverlaid;\r\n    const determineOverflow = !viewportStyleObj;\r\n    const arrangeHideOffset = !_nativeScrollbarStyling && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const styleObj = determineOverflow ? style(_viewport, ['overflowX', 'overflowY']) : viewportStyleObj;\r\n    const scroll = {\r\n      x: styleObj!.overflowX === 'scroll',\r\n      y: styleObj!.overflowY === 'scroll',\r\n    };\r\n    const scrollbarsHideOffset = {\r\n      x: scroll.x && !_nativeScrollbarStyling ? (overlaidX ? arrangeHideOffset : _nativeScrollbarSize.x) : 0,\r\n      y: scroll.y && !_nativeScrollbarStyling ? (overlaidY ? arrangeHideOffset : _nativeScrollbarSize.y) : 0,\r\n    };\r\n\r\n    return {\r\n      _overflowScroll: scroll,\r\n      _scrollbarsHideOffsetArrange: {\r\n        x: overlaidX && !!arrangeHideOffset,\r\n        y: overlaidY && !!arrangeHideOffset,\r\n      },\r\n      _scrollbarsHideOffset: scrollbarsHideOffset,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Sets the overflow property of the viewport and calculates the a overflow state according to the new parameters.\r\n   * @param showNativeOverlaidScrollbars Whether to show natively overlaid scrollbars.\r\n   * @param overflowAmount The overflow amount.\r\n   * @param overflow The overflow behavior according to the options.\r\n   * @param viewportStyleObj The viewport style object to which the overflow style shall be applied.\r\n   * @returns A object which represents the newly set overflow state.\r\n   */\r\n  const setViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    overflowAmount: XY<number>,\r\n    overflow: OverflowOption,\r\n    viewportStyleObj: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const setPartialStylePerAxis = (horizontal: boolean, overflowAmount: number, behavior: OverflowBehavior, styleObj: StyleObject) => {\r\n      const overflowKey: keyof StyleObject = horizontal ? 'overflowX' : 'overflowY';\r\n      const behaviorIsScroll = behavior === 'scroll';\r\n      const behaviorIsVisibleScroll = behavior === 'visible-scroll';\r\n      const hideOverflow = behaviorIsScroll || behavior === 'hidden';\r\n      const applyStyle = overflowAmount > 0 && hideOverflow;\r\n\r\n      if (applyStyle) {\r\n        styleObj[overflowKey] = behavior;\r\n      }\r\n\r\n      return {\r\n        _visible: !applyStyle,\r\n        _behavior: behaviorIsVisibleScroll ? 'scroll' : 'hidden',\r\n      };\r\n    };\r\n    const { _visible: xVisible, _behavior: xVisibleBehavior } = setPartialStylePerAxis(true, overflowAmount!.x, overflow.x, viewportStyleObj);\r\n    const { _visible: yVisible, _behavior: yVisibleBehavior } = setPartialStylePerAxis(false, overflowAmount!.y, overflow.y, viewportStyleObj);\r\n\r\n    if (xVisible && !yVisible) {\r\n      viewportStyleObj.overflowX = xVisibleBehavior;\r\n    }\r\n    if (yVisible && !xVisible) {\r\n      viewportStyleObj.overflowY = yVisibleBehavior;\r\n    }\r\n\r\n    return getViewportOverflowState(showNativeOverlaidScrollbars, viewportStyleObj);\r\n  };\r\n\r\n  /**\r\n   * Sets the styles of the viewport arrange element.\r\n   * @param viewportOverflowState The viewport overflow state according to which the scrollbars shall be hidden.\r\n   * @param contentScrollSize The content scroll size.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @returns A boolean which indicates whether the viewport arrange element was adjusted.\r\n   */\r\n  const arrangeViewport = (viewportOverflowState: ViewportOverflowState, contentScrollSize: WH<number>, directionIsRTL: boolean) => {\r\n    if (_doViewportArrange) {\r\n      const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n      const viewportPaddingStyle = _getViewportPaddingStyle();\r\n      const viewportArrangeHorizontalPaddingKey: keyof StyleObject = directionIsRTL ? 'paddingRight' : 'paddingLeft';\r\n      const viewportArrangeHorizontalPaddingValue = viewportPaddingStyle[viewportArrangeHorizontalPaddingKey] as number;\r\n      const viewportArrangeVerticalPaddingValue = viewportPaddingStyle.paddingTop as number;\r\n      const arrangeSize = {\r\n        w: hideOffsetY && arrangeY ? `${hideOffsetY + contentScrollSize.w - viewportArrangeHorizontalPaddingValue}px` : '',\r\n        h: hideOffsetX && arrangeX ? `${hideOffsetX + contentScrollSize.h - viewportArrangeVerticalPaddingValue}px` : '',\r\n      };\r\n\r\n      // adjust content arrange / before element\r\n      if (_viewportArrange) {\r\n        const { sheet } = _viewportArrange;\r\n        if (sheet) {\r\n          const { cssRules } = sheet;\r\n          if (cssRules) {\r\n            if (!cssRules.length) {\r\n              sheet.insertRule(`#${attr(_viewportArrange, 'id')} + .${classNameViewportArrange}::before {}`, 0);\r\n            }\r\n\r\n            // @ts-ignore\r\n            const ruleStyle = cssRules[0].style;\r\n\r\n            ruleStyle.width = arrangeSize.w;\r\n            ruleStyle.height = arrangeSize.h;\r\n          }\r\n        }\r\n      } else {\r\n        style<'--viewport-arrange-width' | '--viewport-arrange-height'>(_viewport, {\r\n          '--viewport-arrange-width': arrangeSize.w,\r\n          '--viewport-arrange-height': arrangeSize.h,\r\n        });\r\n      }\r\n    }\r\n\r\n    return _doViewportArrange;\r\n  };\r\n\r\n  /**\r\n   * Hides the native scrollbars according to the passed parameters.\r\n   * @param viewportOverflowState The viewport overflow state.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportArrange Whether special styles related to the viewport arrange strategy shall be applied.\r\n   * @param viewportStyleObj The viewport style object to which the needed styles shall be applied.\r\n   */\r\n  const hideNativeScrollbars = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    directionIsRTL: boolean,\r\n    viewportArrange: boolean,\r\n    viewportStyleObj: StyleObject\r\n  ) => {\r\n    const { _nativeScrollbarStyling } = getEnvironment();\r\n    const { _overflowScroll, _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n    const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n    const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n    const { x: scrollX, y: scrollY } = _overflowScroll;\r\n    const paddingStyle = _getViewportPaddingStyle();\r\n    const horizontalMarginKey: keyof StyleObject = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const viewportHorizontalPaddingKey: keyof StyleObject = directionIsRTL ? 'paddingLeft' : 'paddingRight';\r\n    const horizontalMarginValue = paddingStyle[horizontalMarginKey] as number;\r\n    const verticalMarginValue = paddingStyle.marginBottom as number;\r\n    const horizontalPaddingValue = paddingStyle[viewportHorizontalPaddingKey] as number;\r\n    const verticalPaddingValue = paddingStyle.paddingBottom as number;\r\n\r\n    // horizontal\r\n    viewportStyleObj.maxWidth = `calc(100% + ${hideOffsetY + horizontalMarginValue * -1}px)`;\r\n    viewportStyleObj[horizontalMarginKey] = -hideOffsetY + horizontalMarginValue;\r\n\r\n    // vertical\r\n    viewportStyleObj.marginBottom = -hideOffsetX + verticalMarginValue;\r\n\r\n    // viewport arrange additional styles\r\n    if (viewportArrange) {\r\n      viewportStyleObj[viewportHorizontalPaddingKey] = horizontalPaddingValue + (arrangeY ? hideOffsetY : 0);\r\n      viewportStyleObj.paddingBottom = verticalPaddingValue + (arrangeX ? hideOffsetX : 0);\r\n    }\r\n\r\n    // hide overflowing scrollbars if there are any\r\n    if (!_nativeScrollbarStyling) {\r\n      style(_padding || _host, {\r\n        overflow: scrollX || scrollY ? 'hidden' : '',\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes all styles applied because of the viewport arrange strategy.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param viewportOverflowState The currentviewport overflow state or undefined if it has to be determined.\r\n   * @returns A object with a function which applies all the removed styles and the determined viewport vverflow state.\r\n   */\r\n  const undoViewportArrange = (showNativeOverlaidScrollbars: boolean, viewportOverflowState?: ViewportOverflowState): UndoViewportArrangeResult => {\r\n    if (_doViewportArrange) {\r\n      const finalViewportOverflowState = viewportOverflowState || getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      const paddingStyle = _getViewportPaddingStyle();\r\n      const { _flexboxGlue } = getEnvironment();\r\n      const { _scrollbarsHideOffsetArrange } = finalViewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const finalPaddingStyle: StyleObject = {};\r\n      const assignProps = (props: string) =>\r\n        each(props.split(' '), (prop) => {\r\n          finalPaddingStyle[prop] = paddingStyle[prop];\r\n        });\r\n\r\n      if (!_flexboxGlue) {\r\n        finalPaddingStyle.height = '';\r\n      }\r\n\r\n      if (arrangeX) {\r\n        assignProps('marginTop marginBottom paddingTop paddingBottom');\r\n      }\r\n\r\n      if (arrangeY) {\r\n        assignProps('marginLeft marginRight paddingLeft paddingRight');\r\n      }\r\n\r\n      const prevStyle = style(_viewport, keys(finalPaddingStyle));\r\n      removeClass(_viewport, classNameViewportArrange);\r\n      style(_viewport, finalPaddingStyle);\r\n\r\n      return {\r\n        _redoViewportArrange: () => {\r\n          style(_viewport, prevStyle);\r\n          addClass(_viewport, classNameViewportArrange);\r\n        },\r\n        _viewportOverflowState: finalViewportOverflowState,\r\n      };\r\n    }\r\n    return {\r\n      _redoViewportArrange: noop,\r\n    };\r\n  };\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    const { _directionIsRTL, _heightIntrinsic, _sizeChanged, _hostMutation, _contentMutation, _paddingStyleChanged } = updateHints;\r\n    const { _flexboxGlue, _nativeScrollbarStyling, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n    const { _value: heightIntrinsic, _changed: heightIntrinsicChanged } = _heightIntrinsic;\r\n    const { _value: directionIsRTL, _changed: directionChanged } = _directionIsRTL;\r\n    const { _value: showNativeOverlaidScrollbarsOption, _changed: showNativeOverlaidScrollbarsChanged } = checkOption<boolean>(\r\n      'nativeScrollbarsOverlaid.show'\r\n    );\r\n    const showNativeOverlaidScrollbars = showNativeOverlaidScrollbarsOption && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\r\n    const adjustFlexboxGlue =\r\n      !_flexboxGlue && (_sizeChanged || _contentMutation || _hostMutation || showNativeOverlaidScrollbarsChanged || heightIntrinsicChanged);\r\n    let overflowAmuntCache: CacheValues<XY<number>> = getCurrentOverflowAmountCache(force);\r\n    let contentScrollSizeCache: CacheValues<WH<number>> = getCurrentContentScrollSizeCache(force);\r\n    let preMeasureViewportOverflowState: ViewportOverflowState | undefined;\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      if (showNativeOverlaidScrollbars) {\r\n        removeClass(_viewport, classNameViewportScrollbarStyling);\r\n      } else {\r\n        addClass(_viewport, classNameViewportScrollbarStyling);\r\n      }\r\n    }\r\n\r\n    if (adjustFlexboxGlue) {\r\n      preMeasureViewportOverflowState = getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      fixFlexboxGlue(preMeasureViewportOverflowState, !!heightIntrinsic);\r\n    }\r\n\r\n    if (_sizeChanged || _paddingStyleChanged || _contentMutation || showNativeOverlaidScrollbarsChanged || directionChanged) {\r\n      const { _redoViewportArrange, _viewportOverflowState: undoViewportArrangeOverflowState } = undoViewportArrange(\r\n        showNativeOverlaidScrollbars,\r\n        preMeasureViewportOverflowState\r\n      );\r\n      const contentSize = clientSize(_viewport);\r\n      const viewportRect = getBoundingClientRect(_viewport);\r\n      const viewportOffsetSize = offsetSize(_viewport);\r\n      let viewportScrollSize = scrollSize(_viewport);\r\n      let viewportClientSize = contentSize;\r\n      const { _value: contentScrollSize, _changed: contentScrollSizeChanged } = (contentScrollSizeCache = updateContentScrollSizeCache(force, {\r\n        _viewportRect: viewportRect,\r\n        _viewportOffsetSize: viewportOffsetSize,\r\n        _viewportScrollSize: viewportScrollSize,\r\n      }));\r\n\r\n      _redoViewportArrange();\r\n\r\n      // if re measure is required (only required if content arrange strategy is used)\r\n      if (\r\n        (contentScrollSizeChanged || showNativeOverlaidScrollbarsChanged) &&\r\n        undoViewportArrangeOverflowState &&\r\n        !showNativeOverlaidScrollbars &&\r\n        arrangeViewport(undoViewportArrangeOverflowState, contentScrollSize!, directionIsRTL!)\r\n      ) {\r\n        viewportClientSize = clientSize(_viewport);\r\n        viewportScrollSize = fixScrollSizeRounding(scrollSize(_viewport), offsetSize(_viewport), getBoundingClientRect(_viewport));\r\n      }\r\n\r\n      overflowAmuntCache = updateOverflowAmountCache(force, {\r\n        _contentScrollSize: {\r\n          w: Math.max(contentScrollSize!.w, viewportScrollSize.w),\r\n          h: Math.max(contentScrollSize!.h, viewportScrollSize.h),\r\n        },\r\n        _viewportSize: {\r\n          w: viewportClientSize.w + Math.max(0, contentSize.w - contentScrollSize!.w),\r\n          h: viewportClientSize.h + Math.max(0, contentSize.h - contentScrollSize!.h),\r\n        },\r\n      });\r\n    }\r\n\r\n    const { _value: overflow, _changed: overflowChanged } = checkOption<OverflowOption>('overflow');\r\n    const { _value: contentScrollSize, _changed: contentScrollSizeChanged } = contentScrollSizeCache;\r\n    const { _value: overflowAmount, _changed: overflowAmountChanged } = overflowAmuntCache;\r\n\r\n    if (\r\n      _paddingStyleChanged ||\r\n      contentScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      directionChanged ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: StyleObject = {\r\n        marginTop: 0,\r\n        marginRight: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n        maxWidth: '',\r\n        overflowY: '',\r\n        overflowX: '',\r\n      };\r\n\r\n      const viewportOverflowState = setViewportOverflowState(showNativeOverlaidScrollbars, overflowAmount!, overflow, viewportStyle);\r\n      const viewportArranged = arrangeViewport(viewportOverflowState, contentScrollSize!, directionIsRTL!);\r\n      hideNativeScrollbars(viewportOverflowState, directionIsRTL!, viewportArranged, viewportStyle);\r\n\r\n      if (adjustFlexboxGlue) {\r\n        fixFlexboxGlue(viewportOverflowState, !!heightIntrinsic);\r\n      }\r\n\r\n      // TODO: enlargen viewport if div too small for firefox scrollbar hiding behavior\r\n      // TODO: hide host overflow if scroll x or y and no padding element there\r\n      // TODO: Test without content\r\n      // TODO: Test without padding\r\n\r\n      style(_viewport, viewportStyle);\r\n\r\n      _setViewportOverflowScroll(viewportOverflowState._overflowScroll);\r\n    }\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  preventDefault,\r\n  stopPropagation,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  indexOf,\r\n  each,\r\n  isBoolean,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\ninterface SizeObserverEntry {\r\n  contentRect: DOMRectReadOnly;\r\n}\r\n\r\nexport type SizeObserverOptions = { _direction?: boolean; _appear?: boolean };\r\n\r\nexport interface SizeObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _directionIsRTL: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst directionIsRTLMap = {\r\n  direction: ['rtl'],\r\n  // 'writing-mode': ['sideways-rl', 'tb', 'tb-rl', 'vertical-rl'],\r\n};\r\nconst directionIsRTL = (elm: HTMLElement): boolean => {\r\n  let isRTL = false;\r\n  const styles = style(elm, ['direction' /* , 'writing-mode' */]);\r\n  each(styles, (value, key) => {\r\n    isRTL = isRTL || indexOf(directionIsRTLMap[key], value) > -1;\r\n  });\r\n  return isRTL;\r\n};\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (directionIsRTLCache?: CacheValues<boolean>) => any,\r\n  options?: SizeObserverOptions\r\n): SizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } = options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(`<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`);\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const { _update: updateResizeObserverContentRectCache } = createCache<DOMRectReadOnly, DOMRectReadOnly>(0, {\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (sizeChangedContext?: CacheValues<boolean> | SizeObserverEntry[] | Event) => {\r\n    const hasDirectionCache = sizeChangedContext && isBoolean((sizeChangedContext as CacheValues<boolean>)._value);\r\n\r\n    let skip = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isArray(sizeChangedContext) && sizeChangedContext.length > 0) {\r\n      const { _previous, _value, _changed } = updateResizeObserverContentRectCache(0, sizeChangedContext.pop()!.contentRect);\r\n      skip = !_previous || !domRectHasDimensions(_value); // skip on initial RO. call or if display is none\r\n      doDirectionScroll = !skip && _changed; // direction scroll when not skipping and changing from display: none to block, false otherwise\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      doDirectionScroll = (sizeChangedContext as CacheValues<boolean>)._changed; // direction scroll when DirectionCache changed, false toherwise\r\n    }\r\n\r\n    if (observeDirectionChange) {\r\n      const rtl = hasDirectionCache ? (sizeChangedContext as CacheValues<boolean>)._value : directionIsRTL(sizeObserver);\r\n      scrollLeft(sizeObserver, rtl ? (rtlScrollBehavior.n ? -scrollAmount : rtlScrollBehavior.i ? 0 : scrollAmount) : scrollAmount);\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback(hasDirectionCache ? (sizeChangedContext as CacheValues<boolean>) : undefined);\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange ? onSizeChangedCallbackProxy : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => resizeObserverInstance.disconnect());\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(listenerElement);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = () => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy();\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event) => {\r\n      currSize = offsetSize(listenerElement);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent && isDirty && !rAFId) {\r\n        cAF!(rAFId);\r\n        rAFId = rAF!(onResized);\r\n      } else if (!scrollEvent) {\r\n        onResized();\r\n      }\r\n\r\n      reset();\r\n\r\n      if (scrollEvent) {\r\n        preventDefault(scrollEvent);\r\n        stopPropagation(scrollEvent);\r\n      }\r\n      return false;\r\n    };\r\n\r\n    push(offListeners, [on(expandElement, scrollEventName, onScroll), on(shrinkElement, scrollEventName, onScroll)]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n    reset();\r\n    appearCallback = observeAppearChange ? () => onScroll() : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(() => directionIsRTL(sizeObserver));\r\n    const { _update: updateDirectionIsRTLCache } = directionIsRTLCache;\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        const { _value, _changed } = directionIsRTLCacheValues;\r\n        if (_changed) {\r\n          if (_value) {\r\n            style(listenerElement, { left: 'auto', right: 0 });\r\n          } else {\r\n            style(listenerElement, { left: 0, right: 'auto' });\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        preventDefault(event);\r\n        stopPropagation(event);\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(sizeObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _directionIsRTL: directionIsRTLCache\r\n          ? directionIsRTLCache._current(force)\r\n          : {\r\n              _value: false,\r\n              _previous: false,\r\n              _changed: false,\r\n            },\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDOM,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport interface TrinsicObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _heightIntrinsic: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): TrinsicObserver => {\r\n  const trinsicObserver = createDOM(`<div class=\"${classNameTrinsicObserver}\"></div>`)[0] as HTMLElement;\r\n  const offListeners: (() => void)[] = [];\r\n  const { _update: updateHeightIntrinsicCache, _current: getCurrentHeightIntrinsicCache } = createCache<\r\n    boolean,\r\n    IntersectionObserverEntry | WH<number>\r\n  >(\r\n    (ioEntryOrSize: IntersectionObserverEntry | WH<number>) =>\r\n      (ioEntryOrSize! as WH<number>).h === 0 ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).isIntersecting ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).intersectionRatio > 0,\r\n    {\r\n      _initialValue: false,\r\n    }\r\n  );\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          const last = entries.pop();\r\n          if (last) {\r\n            const heightIntrinsic = updateHeightIntrinsicCache(0, last);\r\n\r\n            if (heightIntrinsic._changed) {\r\n              onTrinsicChangedCallback(heightIntrinsic);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => intersectionObserverInstance.disconnect());\r\n  } else {\r\n    const onSizeChanged = () => {\r\n      const newSize = offsetSize(trinsicObserver);\r\n      const heightIntrinsicCache = updateHeightIntrinsicCache(0, newSize);\r\n      if (heightIntrinsicCache._changed) {\r\n        onTrinsicChangedCallback(heightIntrinsicCache);\r\n      }\r\n    };\r\n    push(offListeners, createSizeObserver(trinsicObserver, onSizeChanged)._destroy);\r\n    onSizeChanged();\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(trinsicObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _heightIntrinsic: getCurrentHeightIntrinsicCache(force),\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  off,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n  isUndefined,\r\n  isFunction,\r\n} from 'support';\r\n\r\ntype StringNullUndefined = string | null | undefined;\r\nexport type DOMObserverEventContentChange =\r\n  | Array<[StringNullUndefined, ((elms: Node[]) => string) | StringNullUndefined] | null | undefined>\r\n  | false\r\n  | null\r\n  | undefined;\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions: DOMObserverOptions | undefined\r\n) => boolean;\r\nexport type DOMObserverIgnoreTargetAttrChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\nexport interface DOMObserverOptions {\r\n  _observeContent?: boolean; // do observe children and trigger content change\r\n  _attributes?: string[]; // observed attributes\r\n  _styleChangingAttributes?: string[]; // list of attributes that trigger a contentChange or a targetStyleChange if changed\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname]\r\n  _nestedTargetSelector?: string;\r\n  _ignoreTargetAttrChange?: DOMObserverIgnoreTargetAttrChange;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange;\r\n}\r\nexport interface DOMObserver {\r\n  _disconnect: () => void;\r\n  _updateEventContentChange: (newEventContentChange?: DOMObserverEventContentChange) => void;\r\n  _update: () => void;\r\n}\r\n\r\n// const styleChangingAttributes = ['id', 'class', 'style', 'open'];\r\n// const mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n\r\nconst createEventContentChange = (\r\n  target: Element,\r\n  eventContentChange: DOMObserverEventContentChange,\r\n  map: Map<Node, string>,\r\n  callback: (...args: any) => any\r\n) => {\r\n  let eventContentChangeRef: DOMObserverEventContentChange;\r\n  const addEvent = (elm: Node, eventName: string) => {\r\n    const entry = map.get(elm);\r\n    const newEntry = isUndefined(entry);\r\n    const registerEvent = () => {\r\n      map.set(elm, eventName);\r\n      on(elm, eventName, callback);\r\n    };\r\n\r\n    if (!newEntry && eventName !== entry) {\r\n      off(elm, entry!, callback);\r\n      registerEvent();\r\n    } else if (newEntry) {\r\n      registerEvent();\r\n    }\r\n  };\r\n  const _destroy = () => {\r\n    map.forEach((eventName: string, elm: Node) => {\r\n      off(elm, eventName, callback);\r\n    });\r\n    map.clear();\r\n  };\r\n  const _updateElements = (getElements?: (selector: string) => Node[]) => {\r\n    if (eventContentChangeRef) {\r\n      const eventElmList = eventContentChangeRef.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventName = item[1];\r\n          const elements = eventName && selector && (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements) {\r\n            push(arr, [elements, isFunction(eventName) ? eventName(elements) : eventName!], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) => {\r\n        const elements = item[0];\r\n        const eventName = item[1];\r\n\r\n        each(elements, (elm) => {\r\n          addEvent(elm, eventName);\r\n        });\r\n      });\r\n    }\r\n  };\r\n  const _update = (newEventContentChange: DOMObserverEventContentChange) => {\r\n    eventContentChangeRef = newEventContentChange;\r\n    _destroy();\r\n    _updateElements();\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    _update(eventContentChange);\r\n  }\r\n\r\n  return {\r\n    _destroy,\r\n    _updateElements,\r\n    _update,\r\n  };\r\n};\r\n\r\nexport const createDOMObserver = (\r\n  target: HTMLElement,\r\n  callback: (targetChangedAttrs: string[], targetStyleChanged: boolean, contentChanged: boolean) => any,\r\n  options?: DOMObserverOptions\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _observeContent,\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetAttrChange: _ignoreTargetChange,\r\n    _ignoreContentChange,\r\n  } = options || {};\r\n  const {\r\n    _updateElements: updateEventContentChangeElements,\r\n    _destroy: destroyEventContentChange,\r\n    _update: updateEventContentChange,\r\n  } = createEventContentChange(\r\n    target,\r\n    _observeContent && _eventContentChange,\r\n    new Map<Node, string>(),\r\n    debounce(() => {\r\n      if (isConnected) {\r\n        callback([], false, true);\r\n      }\r\n    }, 84)\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes); // TODO: observer textarea attrs if textarea\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange = _ignoreTargetChange || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue = isAttributesType && isString(attributeName) ? attr(mutationTarget as HTMLElement, attributeName!) : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const targetAttrChanged =\r\n        attributeChanged &&\r\n        targetIsMutationTarget &&\r\n        !_observeContent &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null);\r\n      const styleChangingAttrChanged = indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      if (targetAttrChanged) {\r\n        push(targetChangedAttrs, attributeName!);\r\n      }\r\n      if (_observeContent) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged && !targetIsMutationTarget;\r\n        const isNestedTarget = contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged = baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      targetStyleChanged = targetStyleChanged || (targetAttrChanged && styleChangingAttrChanged);\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n    if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged || contentChanged) {\r\n      callback(targetChangedAttrs, targetStyleChanged, contentChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: _observeContent,\r\n    childList: _observeContent,\r\n    characterData: _observeContent,\r\n  });\r\n  isConnected = true;\r\n\r\n  return {\r\n    _disconnect: () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    _updateEventContentChange: (newEventContentChange?: DOMObserverEventContentChange) => {\r\n      updateEventContentChange(isConnected && _observeContent && newEventContentChange);\r\n    },\r\n    _update: () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  };\r\n};\r\n","import { XY, TRBL, CacheValues, each, push, keys, OptionsValidated, hasOwnProperty, isNumber, scrollLeft, scrollTop } from 'support';\r\nimport { Options } from 'options';\r\nimport { getEnvironment } from 'environment';\r\nimport { StructureSetup } from 'setups/structureSetup';\r\nimport { createTrinsicLifecycle } from 'lifecycles/trinsicLifecycle';\r\nimport { createPaddingLifecycle } from 'lifecycles/paddingLifecycle';\r\nimport { createOverflowLifecycle } from 'lifecycles/overflowLifecycle';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver } from 'observers/domObserver';\r\nimport { StyleObject } from 'typings';\r\n\r\nexport type LifecycleCheckOption = <T>(path: string) => LifecycleOptionInfo<T>;\r\n\r\nexport interface PaddingInfo {\r\n  _absolute: boolean;\r\n  _padding: TRBL;\r\n}\r\n\r\nexport interface LifecycleOptionInfo<T> {\r\n  readonly _value: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport interface LifecycleAdaptiveUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n  _paddingStyleChanged: boolean;\r\n}\r\n\r\nexport interface LifecycleUpdateHints extends LifecycleAdaptiveUpdateHints {\r\n  _directionIsRTL: CacheValues<boolean>;\r\n  _heightIntrinsic: CacheValues<boolean>;\r\n}\r\n\r\nexport type Lifecycle = (\r\n  updateHints: LifecycleUpdateHints,\r\n  checkOption: LifecycleCheckOption,\r\n  force: boolean\r\n) => Partial<LifecycleAdaptiveUpdateHints> | void;\r\n\r\nexport interface LifecycleHubInstance {\r\n  _update(changedOptions?: OptionsValidated<Options> | null, force?: boolean): void;\r\n  _destroy(): void;\r\n}\r\n\r\nexport interface LifecycleHub {\r\n  _options: Options;\r\n  _structureSetup: StructureSetup;\r\n  // whether the \"viewport arrange\" strategy must be used (true if no native scrollbar hiding and scrollbars are overlaid)\r\n  _doViewportArrange: boolean;\r\n  _getPaddingInfo(): PaddingInfo;\r\n  _setPaddingInfo(newPadding?: PaddingInfo | null): void;\r\n  // padding related styles applied to the viewport element\r\n  _getViewportPaddingStyle(): StyleObject;\r\n  _setViewportPaddingStyle(newPaddingStlye?: StyleObject | null): void;\r\n  _getViewportOverflowScroll(): XY<boolean>;\r\n  _setViewportOverflowScroll(newViewportOverflowScroll: XY<boolean>): void;\r\n}\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj && path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj);\r\n\r\nconst emptyStylePropsToZero = (stlyeObj: StyleObject, baseStyle?: StyleObject) =>\r\n  keys(stlyeObj).reduce(\r\n    (obj, key) => {\r\n      const value = stlyeObj[key];\r\n      obj[key] = value === '' ? 0 : value;\r\n      return obj;\r\n    },\r\n    { ...baseStyle }\r\n  );\r\n\r\n// TODO: tabindex, open etc.\r\nconst attrs = ['id', 'class', 'style', 'open'];\r\nconst paddingInfoFallback: PaddingInfo = {\r\n  _absolute: false,\r\n  _padding: {\r\n    t: 0,\r\n    r: 0,\r\n    b: 0,\r\n    l: 0,\r\n  },\r\n};\r\nconst viewportPaddingStyleFallback: StyleObject = {\r\n  marginTop: 0,\r\n  marginRight: 0,\r\n  marginBottom: 0,\r\n  marginLeft: 0,\r\n  paddingTop: 0,\r\n  paddingRight: 0,\r\n  paddingBottom: 0,\r\n  paddingLeft: 0,\r\n};\r\nconst viewportOverflowScrollFallback: XY<boolean> = {\r\n  x: false,\r\n  y: false,\r\n};\r\nconst directionIsRTLCacheValuesFallback: CacheValues<boolean> = {\r\n  _value: false,\r\n  _previous: false,\r\n  _changed: false,\r\n};\r\nconst heightIntrinsicCacheValuesFallback: CacheValues<boolean> = {\r\n  _value: false,\r\n  _previous: false,\r\n  _changed: false,\r\n};\r\n\r\nexport const createLifecycleHub = (options: Options, structureSetup: StructureSetup): LifecycleHubInstance => {\r\n  let paddingInfo = paddingInfoFallback;\r\n  let viewportPaddingStyle = viewportPaddingStyleFallback;\r\n  let viewportOverflowScroll = viewportOverflowScrollFallback;\r\n  const { _host, _viewport, _content } = structureSetup._targetObj;\r\n  const {\r\n    _nativeScrollbarStyling,\r\n    _nativeScrollbarIsOverlaid,\r\n    _flexboxGlue,\r\n    _addListener: addEnvironmentListener,\r\n    _removeListener: removeEnvironmentListener,\r\n  } = getEnvironment();\r\n  const doViewportArrange = !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const lifecycles: Lifecycle[] = [];\r\n  const instance: LifecycleHub = {\r\n    _options: options,\r\n    _structureSetup: structureSetup,\r\n    _doViewportArrange: doViewportArrange,\r\n    _getPaddingInfo: () => paddingInfo,\r\n    _setPaddingInfo(newPaddingInfo) {\r\n      paddingInfo = newPaddingInfo || paddingInfoFallback;\r\n    },\r\n    _getViewportPaddingStyle: () => viewportPaddingStyle,\r\n    _setViewportPaddingStyle(newPaddingStlye) {\r\n      viewportPaddingStyle = newPaddingStlye ? emptyStylePropsToZero(newPaddingStlye, viewportPaddingStyleFallback) : viewportPaddingStyleFallback;\r\n    },\r\n    _getViewportOverflowScroll: () => viewportOverflowScroll,\r\n    _setViewportOverflowScroll(newViewportOverflowScroll) {\r\n      viewportOverflowScroll = newViewportOverflowScroll || viewportOverflowScrollFallback;\r\n    },\r\n  };\r\n\r\n  push(lifecycles, createTrinsicLifecycle(instance));\r\n  push(lifecycles, createPaddingLifecycle(instance));\r\n  push(lifecycles, createOverflowLifecycle(instance));\r\n\r\n  const updateLifecycles = (\r\n    updateHints?: Partial<LifecycleUpdateHints> | null,\r\n    changedOptions?: OptionsValidated<Options> | null,\r\n    force?: boolean\r\n  ) => {\r\n    let {\r\n      _directionIsRTL,\r\n      _heightIntrinsic,\r\n      _sizeChanged = force || false,\r\n      _hostMutation = force || false,\r\n      _contentMutation = force || false,\r\n      _paddingStyleChanged = force || false,\r\n    } = updateHints || {};\r\n    const finalDirectionIsRTL =\r\n      _directionIsRTL || (sizeObserver ? sizeObserver._getCurrentCacheValues(force)._directionIsRTL : directionIsRTLCacheValuesFallback);\r\n    const finalHeightIntrinsic =\r\n      _heightIntrinsic || (trinsicObserver ? trinsicObserver._getCurrentCacheValues(force)._heightIntrinsic : heightIntrinsicCacheValuesFallback);\r\n    const checkOption: LifecycleCheckOption = (path) => ({\r\n      _value: getPropByPath(options, path),\r\n      _changed: force || getPropByPath(changedOptions, path) !== undefined,\r\n    });\r\n    const adjustScrollOffset = doViewportArrange || !_flexboxGlue;\r\n    const scrollOffsetX = adjustScrollOffset && scrollLeft(_viewport);\r\n    const scrollOffsetY = adjustScrollOffset && scrollTop(_viewport);\r\n\r\n    each(lifecycles, (lifecycle) => {\r\n      const {\r\n        _sizeChanged: adaptiveSizeChanged,\r\n        _hostMutation: adaptiveHostMutation,\r\n        _contentMutation: adaptiveContentMutation,\r\n        _paddingStyleChanged: adaptivePaddingStyleChanged,\r\n      } =\r\n        lifecycle(\r\n          {\r\n            _directionIsRTL: finalDirectionIsRTL,\r\n            _heightIntrinsic: finalHeightIntrinsic,\r\n            _sizeChanged,\r\n            _hostMutation,\r\n            _contentMutation,\r\n            _paddingStyleChanged,\r\n          },\r\n          checkOption,\r\n          !!force\r\n        ) || {};\r\n\r\n      _sizeChanged = adaptiveSizeChanged || _sizeChanged;\r\n      _hostMutation = adaptiveHostMutation || _hostMutation;\r\n      _contentMutation = adaptiveContentMutation || _contentMutation;\r\n      _paddingStyleChanged = adaptivePaddingStyleChanged || _paddingStyleChanged;\r\n    });\r\n\r\n    if (isNumber(scrollOffsetX)) {\r\n      scrollLeft(_viewport, scrollOffsetX);\r\n    }\r\n    if (isNumber(scrollOffsetY)) {\r\n      scrollTop(_viewport, scrollOffsetY);\r\n    }\r\n  };\r\n\r\n  const onSizeChanged = (directionIsRTL?: CacheValues<boolean>) => {\r\n    const sizeChanged = !directionIsRTL;\r\n    updateLifecycles({\r\n      _directionIsRTL: directionIsRTL,\r\n      _sizeChanged: sizeChanged,\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsic: CacheValues<boolean>) => {\r\n    updateLifecycles({\r\n      _heightIntrinsic: heightIntrinsic,\r\n    });\r\n  };\r\n  const onHostMutation = () => {\r\n    // TODO: rAF only here because IE\r\n    requestAnimationFrame(() => {\r\n      updateLifecycles({\r\n        _hostMutation: true,\r\n      });\r\n    });\r\n  };\r\n  const onContentMutation = () => {\r\n    // TODO: rAF only here because IE\r\n    requestAnimationFrame(() => {\r\n      updateLifecycles({\r\n        _contentMutation: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const trinsicObserver = _content && createTrinsicObserver(_host, onTrinsicChanged);\r\n  const sizeObserver = createSizeObserver(_host, onSizeChanged, { _appear: true, _direction: !_nativeScrollbarStyling });\r\n  const hostMutationObserver = createDOMObserver(_host, onHostMutation, {\r\n    _styleChangingAttributes: attrs,\r\n    _attributes: attrs,\r\n  });\r\n  const contentMutationObserver = createDOMObserver(_content || _viewport, onContentMutation, {\r\n    _observeContent: true,\r\n    _styleChangingAttributes: attrs,\r\n    _attributes: attrs,\r\n    _eventContentChange: options!.updating!.elementEvents as [string, string][],\r\n    /*\r\n      _nestedTargetSelector: hostSelector,\r\n      _ignoreContentChange: (mutation, isNestedTarget) => {\r\n        const { target, attributeName } = mutation;\r\n        return isNestedTarget ? false : attributeName ? liesBetween(target as Element, hostSelector, '.content') : false;\r\n      },\r\n      _ignoreTargetAttrChange: (target, attrName, oldValue, newValue) => {\r\n        if (attrName === 'class' && oldValue && newValue) {\r\n          const diff = diffClass(oldValue, newValue);\r\n          const ignore = diff.length === 1 && diff[0].startsWith(ignorePrefix);\r\n          return ignore;\r\n        }\r\n        return false;\r\n      },\r\n      */\r\n  });\r\n\r\n  const update = (changedOptions?: OptionsValidated<Options> | null, force?: boolean) => {\r\n    updateLifecycles(null, changedOptions, force);\r\n  };\r\n  const envUpdateListener = update.bind(null, null, true);\r\n  addEnvironmentListener(envUpdateListener);\r\n\r\n  console.log(getEnvironment());\r\n\r\n  return {\r\n    _update: update,\r\n    _destroy() {\r\n      removeEnvironmentListener(envUpdateListener);\r\n    },\r\n  };\r\n};\r\n","import {\r\n  optionsTemplateTypes as oTypes,\r\n  transformOptions,\r\n  OptionsTemplateValue,\r\n  OptionsWithOptionsTemplateValue,\r\n  OptionsWithOptionsTemplate,\r\n  Func,\r\n} from 'support/options';\r\nimport { ResizeBehavior, OverflowBehavior, VisibilityBehavior, AutoHideBehavior, Options } from 'options';\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst stringArrayNullAllowedValues: OptionsTemplateValue<string | ReadonlyArray<string> | null> = [oTypes.string, oTypes.array, oTypes.null];\r\nconst booleanTrueTemplate: OptionsWithOptionsTemplateValue<boolean> = [true, oTypes.boolean];\r\nconst booleanFalseTemplate: OptionsWithOptionsTemplateValue<boolean> = [false, oTypes.boolean];\r\n// const callbackTemplate: OptionsWithOptionsTemplateValue<Func | null> = [null, [oTypes.function, oTypes.null]];\r\nconst resizeAllowedValues: OptionsTemplateValue<ResizeBehavior> = 'none both horizontal vertical';\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> = 'visible-hidden visible-scroll scroll hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> = 'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> = 'never scroll leavemove';\r\n\r\n/**\r\n * A object which serves as \"default options object\" and \"options template object\".\r\n * I combined these two into one object so that I don't have to define two separate big objects, instead I define one big object.\r\n *\r\n * The property value is a tuple:\r\n * the first value is the default value\r\n * the second value is the template value\r\n * Example:\r\n * {\r\n *  a: ['default', [Type.string, Type.null]],\r\n *  b: [250, Type.number]\r\n * }\r\n * Property \"a\" has a default value of 'default' and it can be a string or null\r\n * Property \"b\" has a default value of 250 and it can be number\r\n */\r\nconst defaultOptionsWithTemplate: OptionsWithOptionsTemplate<Required<Options>> = {\r\n  resize: ['none', resizeAllowedValues], // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: booleanFalseTemplate, // true || false\r\n  updating: {\r\n    elementEvents: [[['img', 'load']], [oTypes.array, oTypes.null]], // array of tuples || null\r\n    contentMutationDebounce: [80, numberAllowedValues], // number\r\n    hostMutationDebounce: [0, numberAllowedValues], // number\r\n    resizeDebounce: [0, numberAllowedValues], // number\r\n  },\r\n  overflow: {\r\n    x: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  scrollbars: {\r\n    visibility: ['auto', scrollbarsVisibilityAllowedValues], // visible || hidden || auto || v || h || a\r\n    autoHide: ['never', scrollbarsAutoHideAllowedValues], // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: [800, numberAllowedValues], // number\r\n    dragScroll: booleanTrueTemplate, // true || false\r\n    clickScroll: booleanFalseTemplate, // true || false\r\n    touch: booleanTrueTemplate, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: booleanFalseTemplate, // true || false\r\n    dynHeight: booleanFalseTemplate, // true || false\r\n    inheritedAttrs: [['style', 'class'], stringArrayNullAllowedValues], // string || array || null\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanFalseTemplate, // true || false\r\n    initialize: booleanFalseTemplate, // true || false\r\n  },\r\n  /*\r\n  callbacks: {\r\n    onInitialized: callbackTemplate, // null || function\r\n    onInitializationWithdrawn: callbackTemplate, // null || function\r\n    onDestroyed: callbackTemplate, // null || function\r\n    onScrollStart: callbackTemplate, // null || function\r\n    onScroll: callbackTemplate, // null || function\r\n    onScrollStop: callbackTemplate, // null || function\r\n    onOverflowChanged: callbackTemplate, // null || function\r\n    onOverflowAmountChanged: callbackTemplate, // null || function\r\n    onDirectionChanged: callbackTemplate, // null || function\r\n    onContentSizeChanged: callbackTemplate, // null || function\r\n    onHostSizeChanged: callbackTemplate, // null || function\r\n    onUpdated: callbackTemplate, // null || function\r\n  },\r\n  */\r\n};\r\n\r\nexport const { _template: optionsTemplate, _options: defaultOptions } = transformOptions(defaultOptionsWithTemplate);\r\n","import { OSTarget, OSTargetObject } from 'typings';\r\n\r\nimport { validateOptions, assignDeep, isEmptyObject } from 'support';\r\nimport { createStructureSetup, StructureSetup } from 'setups/structureSetup';\r\nimport { createLifecycleHub } from 'lifecycles/lifecycleHub';\r\nimport { Options, defaultOptions, optionsTemplate } from 'options';\r\n\r\nconst OverlayScrollbars = (target: OSTarget | OSTargetObject, options?: Options, extensions?: any): any => {\r\n  const currentOptions: Required<Options> = assignDeep(\r\n    {},\r\n    defaultOptions,\r\n    validateOptions<Options>(options || ({} as Options), optionsTemplate, null, true)._validated\r\n  );\r\n  const structureSetup: StructureSetup = createStructureSetup(target);\r\n  const lifecycleHub = createLifecycleHub(currentOptions, structureSetup);\r\n  const instance = {\r\n    options(newOptions?: Options) {\r\n      if (newOptions) {\r\n        const { _validated: _changedOptions } = validateOptions(newOptions, optionsTemplate, currentOptions, true);\r\n\r\n        if (!isEmptyObject(_changedOptions)) {\r\n          assignDeep(currentOptions, _changedOptions);\r\n          lifecycleHub._update(_changedOptions);\r\n        }\r\n      }\r\n      return currentOptions;\r\n    },\r\n    update(force?: boolean) {\r\n      lifecycleHub._update(null, force);\r\n    },\r\n  };\r\n\r\n  instance.update(true);\r\n\r\n  return instance;\r\n};\r\n\r\nexport { OverlayScrollbars };\r\n","import { getEnvironment } from 'environment';\r\nimport { OverlayScrollbars } from 'overlayscrollbars/overlayscrollbars';\r\n\r\nexport default () => {\r\n  return [getEnvironment(), OverlayScrollbars(document.body)];\r\n};\r\n"],"names":["createCache","update","options","_equal","_initialValue","_alwaysUpdateValues","_value","_previous","cacheUpdate","force","context","curr","newVal","changed","_changed","_update","_current","ElementNodeType","Node","ELEMENT_NODE","Object","prototype","toString","hasOwnProperty","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","elm","isEmptyArray","runEach","p1","runFn","fn","Set","forEach","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","getSetProp","topLeft","fallback","value","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","insertedNodes","insertAfter","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","firstLetterToUpper","str","charAt","toUpperCase","slice","jsPrefixes","jsCache","jsAPI","prefix","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","addClass","add","removeClass","remove","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","split","off","listener","capture","eventName","removeEventListener","on","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","bind","stopPropagation","preventDefault","equal","a","b","props","propMutation","compareA","compareB","equalWH","equalXY","equalTRBL","equalBCRWH","round","Math","noop","debounce","functionToDebounce","timeout","maxWait","timeoutId","lastCallTime","hasTimeout","hasMaxWait","cancel","clearTimeout","set","setTimeout","setFn","args","performance","now","boundSetFn","arguments","forceCall","cssNumber","animationiterationcount","columncount","fillopacity","flexgrow","flexshrink","fontweight","lineheight","opacity","order","orphans","widows","zindex","zoom","parseToZeroOrNumber","toFloat","num","parseFloat","parseInt","Number","isNaN","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","style","setCSSVal","setProperty","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","topRightBottomLeft","propertyPrefix","propertySuffix","finalPrefix","finalSuffix","top","right","bottom","left","t","r","l","x","y","absoluteCoordinates","rect","pageYOffset","pageXOffset","_extends","module","assign","stringify","JSON","templateTypePrefixSuffix","optionsTemplateTypes","validateRecursive","template","optionsDiff","doWriteErrors","propPath","validatedOptions","optionsCopy","filter","optionsDiffValue","optionsValue","templateValue","templateIsComplex","propPrefix","validatedResult","_validated","_foreign","isValid","errorEnumStrings","errorPossibleTypes","optionsValueType","templateValueArr","currTemplateType","typeString","isEnumString","enumStringSplit","possibility","string","doStringifyComparison","console","warn","join","validateOptions","transformOptions","optionsWithOptionsTemplate","_template","_options","tmpResult","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameViewportArrange","classNameContent","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","environmentInstance","abs","getNativeScrollbarSize","body","measureElm","cSize","oSize","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","nativeScrollbarSize","nativeScrollbarStyling","nativeScrollbarIsOverlaid","env","_autoUpdateLoop","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_cssCustomProperties","_rtlScrollBehavior","_flexboxGlue","_addListener","_removeListener","delete","size","dpr","scrollbarSize","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","newScrollbarSize","getEnvironment","unwrap","contentArrangeCounter","createUniqueViewportArrangeElement","createStructureSetup","targetIsElm","osTargetObj","_host","host","_target","_padding","padding","_viewport","viewport","_content","content","destroyFns","isTextarea","isBody","getTargetContents","contentSlot","isTextareaHostGenerated","contentContainingElm","createPadding","createViewport","createContent","targetContents","ownerDocument","bodyElm","wnd","defaultView","ctx","_windowElm","_documentElm","_htmlElm","_bodyElm","_isTextarea","_isBody","viewportArrangeElm","_viewportArrange","_targetObj","_targetCtx","_destroy","createTrinsicLifecycle","lifecycleHub","_structureSetup","updateHints","_heightIntrinsic","heightIntrinsic","heightIntrinsicChanged","height","createPaddingLifecycle","_setPaddingInfo","_setViewportPaddingStyle","updatePaddingCache","currentPaddingCache","checkOption","paddingChanged","_sizeChanged","_directionIsRTL","directionIsRTL","directionChanged","paddingAbsolute","paddingAbsoluteChanged","paddingStyleChanged","paddingRelative","paddingHorizontal","paddingVertical","paddingStyle","marginTop","marginRight","marginBottom","marginLeft","maxWidth","viewportStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","horizontalPositionKey","horizontalMarginKey","horizontalPositionValue","_absolute","_paddingStyleChanged","overlaidScrollbarsHideOffset","createOverflowLifecycle","_doViewportArrange","_getViewportPaddingStyle","_getPaddingInfo","_setViewportOverflowScroll","fixScrollSizeRounding","_viewportScrollSize","_viewportOffsetSize","_viewportRect","updateContentScrollSizeCache","getCurrentContentScrollSizeCache","max","_contentScrollSize","_viewportSize","updateOverflowAmountCache","getCurrentOverflowAmountCache","viewportScrollSize","viewportOffsetSize","viewportRect","width","fixFlexboxGlue","viewportOverflowState","_overflowScroll","_scrollbarsHideOffset","hostBCR","hostOffsetSize","hostClientSize","paddingAbsoluteVertical","clientSizeWithoutRounding","getViewportOverflowState","showNativeOverlaidScrollbars","viewportStyleObj","overlaidX","overlaidY","determineOverflow","arrangeHideOffset","styleObj","scroll","scrollbarsHideOffset","_scrollbarsHideOffsetArrange","setViewportOverflowState","overflowAmount","overflow","setPartialStylePerAxis","horizontal","behavior","overflowKey","behaviorIsScroll","behaviorIsVisibleScroll","hideOverflow","applyStyle","_visible","_behavior","xVisible","xVisibleBehavior","yVisible","yVisibleBehavior","arrangeViewport","contentScrollSize","arrangeX","arrangeY","hideOffsetX","hideOffsetY","viewportPaddingStyle","viewportArrangeHorizontalPaddingKey","viewportArrangeHorizontalPaddingValue","viewportArrangeVerticalPaddingValue","arrangeSize","sheet","cssRules","insertRule","ruleStyle","hideNativeScrollbars","viewportArrange","scrollX","scrollY","viewportHorizontalPaddingKey","horizontalMarginValue","verticalMarginValue","horizontalPaddingValue","verticalPaddingValue","undoViewportArrange","finalViewportOverflowState","finalPaddingStyle","assignProps","prevStyle","_redoViewportArrange","_viewportOverflowState","_hostMutation","_contentMutation","showNativeOverlaidScrollbarsOption","showNativeOverlaidScrollbarsChanged","adjustFlexboxGlue","overflowAmuntCache","contentScrollSizeCache","preMeasureViewportOverflowState","undoViewportArrangeOverflowState","contentSize","viewportClientSize","contentScrollSizeChanged","overflowChanged","overflowAmountChanged","viewportArranged","animationStartEventName","scrollEventName","scrollAmount","directionIsRTLMap","isRTL","domRectHasDimensions","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","currVal","updateResizeObserverContentRectCache","onSizeChangedCallbackProxy","sizeChangedContext","hasDirectionCache","skip","pop","contentRect","doDirectionScroll","rtl","appearCallback","directionIsRTLCache","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionIsRTLCache","event","directionIsRTLCacheValues","_getCurrentCacheValues","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","ioEntryOrSize","isIntersecting","intersectionRatio","updateHeightIntrinsicCache","getCurrentHeightIntrinsicCache","intersectionObserverInstance","entries","last","root","onSizeChanged","newSize","heightIntrinsicCache","createEventContentChange","eventContentChange","map","eventContentChangeRef","addEvent","entry","newEntry","registerEvent","clear","_updateElements","getElements","eventElmList","elements","newEventContentChange","createDOMObserver","isConnected","_observeContent","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetChange","_ignoreTargetAttrChange","_ignoreContentChange","Map","updateEventContentChangeElements","destroyEventContentChange","updateEventContentChange","finalAttributes","finalStyleChangingAttributes","observedAttributes","concat","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","targetAttrChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","_disconnect","_updateEventContentChange","takeRecords","getPropByPath","path","o","emptyStylePropsToZero","stlyeObj","baseStyle","attrs","paddingInfoFallback","viewportPaddingStyleFallback","viewportOverflowScrollFallback","directionIsRTLCacheValuesFallback","heightIntrinsicCacheValuesFallback","createLifecycleHub","structureSetup","paddingInfo","viewportOverflowScroll","addEnvironmentListener","removeEnvironmentListener","doViewportArrange","lifecycles","instance","newPaddingInfo","newPaddingStlye","_getViewportOverflowScroll","newViewportOverflowScroll","updateLifecycles","changedOptions","finalDirectionIsRTL","finalHeightIntrinsic","adjustScrollOffset","scrollOffsetX","scrollOffsetY","lifecycle","adaptiveSizeChanged","adaptiveHostMutation","adaptiveContentMutation","adaptivePaddingStyleChanged","sizeChanged","onTrinsicChanged","onHostMutation","requestAnimationFrame","onContentMutation","hostMutationObserver","contentMutationObserver","updating","elementEvents","envUpdateListener","log","numberAllowedValues","oTypes","number","stringArrayNullAllowedValues","null","booleanTrueTemplate","boolean","booleanFalseTemplate","resizeAllowedValues","overflowAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","defaultOptionsWithTemplate","resize","contentMutationDebounce","hostMutationDebounce","resizeDebounce","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","clickScroll","touch","textarea","dynWidth","dynHeight","inheritedAttrs","nativeScrollbarsOverlaid","show","initialize","optionsTemplate","defaultOptions","OverlayScrollbars","extensions","currentOptions","newOptions","_changedOptions"],"mappings":"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"}