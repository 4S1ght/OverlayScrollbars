{"version":3,"file":"overlayscrollbars.js","sources":["../src/support/utils/types.ts","../src/support/dom/attribute.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/class.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/utils/equal.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/offset.ts","../src/support/cache/cache.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/support/options/validation.ts","../src/support/options/transformation.ts","../src/classnames.ts","../src/environment/environment.ts","../src/setups/structureSetup.ts","../src/lifecycles/lifecycleUpdateFunction.ts","../src/lifecycles/overflowLifecycle.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/lifecycles/lifecycleHub.ts","../src/options/options.ts","../src/overlayscrollbars/overlayscrollbars.ts","../src/index.ts"],"sourcesContent":["import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) => {\r\n  return isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n};\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: Array<unknown>) => unknown {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat) ? (length > 0 && isObject(obj) ? length - 1 in obj : true) : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value?: string): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(obj: PlainObject, callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: Array<T>, item: T, fromIndex?: number): number => arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: Array<T>, items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): Array<T> => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items) ? Array.prototype.push.apply(array, items as Array<T>) : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr: ArrayLike<T>) => {\r\n  if (Array.from) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: Array<T> = [];\r\n\r\n  each(arr, (elm) => {\r\n    push(result, elm);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: Array<any> | null | undefined) => array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, p1?: unknown): void => {\r\n  const runFn = (fn: RunEachItem) => fn && fn(p1);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | null | undefined,\r\n  className: string,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | null | undefined, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n */\r\nexport const addClass = (elm: Element | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n};\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (classNameA: string | null | undefined, classNameB: string | null | undefined) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> => (elm ? from(elm.childNodes) : []);\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (elm: InputElementType, highBoundarySelector: string, deepBoundarySelector: string): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (parentElm: Node | null | undefined, preferredAnchor: Node | null | undefined, insertedElms: NodeCollection): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","export interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean => !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null | undefined): boolean => (elm ? elementHasDimensions(elm as HTMLElement) : false);\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(target: EventTarget, eventNames: string, listener: (event: T) => any, capture?: boolean): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event) => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event) => evt.preventDefault();\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(a: T | undefined, b: T | undefined, props: Array<keyof T>): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      if (a[prop] !== b[prop]) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = (a?: WH, b?: WH) => equal<WH>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = (a?: XY, b?: XY) => equal<XY>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = ['WebKit', 'Moz', 'O', 'MS', 'webkit', 'moz', 'o', 'ms'];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without, or undefined if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string | undefined => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n    result = resultPossibilities.find((resultPossibility: string) => elmStyle[resultPossibility] !== undefined);\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported wuthout, or undefined if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string | undefined => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>('IntersectionObserver');\r\nexport const ResizeObserverConstructor: any | undefined = jsAPI('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isNumber } from 'support/utils/types';\r\nimport { cAF, rAF } from 'support/compatibility/apis';\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param timeout The timeout for debouncing. If 0 or lower animation frame is used for debouncing, a timeout otherwise.\r\n * @param maxWait A maximum amount of ms. before the function will be called even with debounce.\r\n */\r\nexport const debounce = (functionToDebounce: (...args: any) => any, timeout?: number, maxWait?: number) => {\r\n  let timeoutId: number | void;\r\n  let lastCallTime: number;\r\n  const hasTimeout = isNumber(timeout) && timeout > 0;\r\n  const hasMaxWait = isNumber(maxWait) && maxWait > 0;\r\n  const cancel = hasTimeout ? window.clearTimeout : cAF!;\r\n  const set = hasTimeout ? window.setTimeout : rAF!;\r\n  const setFn = function (args: IArguments) {\r\n    lastCallTime = hasMaxWait ? performance.now() : 0;\r\n    timeoutId && cancel(timeoutId);\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  return function () {\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const boundSetFn = setFn.bind(this, arguments); // eslint-disable-line\r\n    const forceCall = hasMaxWait ? performance.now() - lastCallTime >= maxWait! : false;\r\n\r\n    timeoutId && cancel(timeoutId);\r\n    timeoutId = forceCall ? boundSetFn() : (set(boundSetFn, timeout!) as number);\r\n  };\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\ntype CssStyles = { [key: string]: string | number };\r\nconst cssNumber = {\r\n  animationiterationcount: 1,\r\n  columncount: 1,\r\n  fillopacity: 1,\r\n  flexgrow: 1,\r\n  flexshrink: 1,\r\n  fontweight: 1,\r\n  lineheight: 1,\r\n  opacity: 1,\r\n  order: 1,\r\n  orphans: 1,\r\n  widows: 1,\r\n  zindex: 1,\r\n  zoom: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number => (!cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val);\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null ? computedStyle.getPropertyValue(prop) : elm.style[prop];\r\nconst setCSSVal = (elm: HTMLElement | null | undefined, prop: string, val: string | number): void => {\r\n  try {\r\n    if (elm && elm.style[prop] !== undefined) {\r\n      elm.style[prop] = adaptCSSVal(prop, val);\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style(elm: HTMLElement | null | undefined, styles: CssStyles): void;\r\nexport function style(elm: HTMLElement | null | undefined, styles: string): string;\r\nexport function style(elm: HTMLElement | null | undefined, styles: Array<string> | string): { [key: string]: string };\r\nexport function style(elm: HTMLElement | null | undefined, styles: CssStyles | Array<string> | string): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | null): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns a top\r\n * @param elm\r\n * @param property\r\n */\r\nexport const topRightBottomLeft = (elm: HTMLElement | null | undefined, property?: string): TRBL => {\r\n  const finalProp = property || '';\r\n  const top = `${finalProp}-top`;\r\n  const right = `${finalProp}-right`;\r\n  const bottom = `${finalProp}-bottom`;\r\n  const left = `${finalProp}-left`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","export interface CacheValues<T> {\r\n  readonly _value?: T;\r\n  readonly _previous?: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport interface CacheOptions<T> {\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<T>;\r\n  // Initial value for _value\r\n  _initialValue?: T;\r\n  // If true updates always _value and _previous, otherwise they update only when changed\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport interface Cache<T, C = undefined> {\r\n  _current: (force?: boolean) => CacheValues<T>;\r\n  _update: CacheUpdate<T, C>;\r\n}\r\n\r\nexport type CacheUpdate<T, C> = undefined extends C\r\n  ? (force?: boolean | 0, context?: C) => CacheValues<T>\r\n  : (force: boolean | 0, context: C) => CacheValues<T>;\r\n\r\nexport type UpdateCachePropFunction<T, C> = undefined extends C\r\n  ? (context?: C, current?: T, previous?: T) => T\r\n  : C extends T\r\n  ? ((context: C, current?: T, previous?: T) => T) | 0\r\n  : (context: C, current?: T, previous?: T) => T;\r\n\r\nexport type EqualCachePropFunction<T> = (currentVal?: T, newVal?: T) => boolean;\r\n\r\nexport const createCache = <T, C = undefined>(update: UpdateCachePropFunction<T, C>, options?: CacheOptions<T>): Cache<T, C> => {\r\n  const { _equal, _initialValue, _alwaysUpdateValues } = options || {};\r\n  let _value: T | undefined = _initialValue;\r\n  let _previous: T | undefined;\r\n\r\n  const cacheUpdate = ((force?: boolean | 0, context?: C) => {\r\n    const curr = _value;\r\n    // @ts-ignore\r\n    // update can only not be a function if C extends T as described in \"UpdateCachePropFunction\" type definition\r\n    // if C extends T the cast (context as T) is perfectly valid\r\n    const newVal = update ? update(context, _value, _previous) : (context as T);\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return {\r\n      _value,\r\n      _previous,\r\n      _changed: changed,\r\n    };\r\n  }) as CacheUpdate<T, C>;\r\n\r\n  return {\r\n    _update: cacheUpdate,\r\n    _current: (force?: boolean) => ({\r\n      _value,\r\n      _previous,\r\n      _changed: !!force,\r\n    }),\r\n  };\r\n};\r\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { OptionsTemplate, OptionsTemplateTypes, OptionsTemplateType, Func, OptionsValidationResult, OptionsValidated } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\n\r\nconst { stringify } = JSON;\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = ['boolean', 'number', 'string', 'array', 'object', 'function', 'null'].reduce(\r\n  (result, item) => {\r\n    result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n    return result;\r\n  },\r\n  {} as OptionsTemplateTypesDictionary\r\n);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff: T,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: OptionsValidated<T> = {};\r\n  const optionsCopy: T = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsDiffValue: any = isUndefined(optionsDiff[prop]) ? {} : optionsDiff[prop];\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> = template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const validatedResult = validateRecursive(optionsValue, templateValue as PlainObject, optionsDiffValue, doWriteErrors, propPrefix + prop);\r\n      validatedOptions[prop] = validatedResult._validated as any;\r\n      optionsCopy[prop] = validatedResult._foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        const doStringifyComparison = isArray(optionsValue) || isPlainObject(optionsValue);\r\n        if (doStringifyComparison ? stringify(optionsValue) !== stringify(optionsDiffValue) : optionsValue !== optionsDiffValue) {\r\n          validatedOptions[prop] = optionsValue;\r\n        }\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${errorEnumStrings.length > 0 ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].` : ''}`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    _foreign: optionsCopy,\r\n    _validated: validatedOptions,\r\n  };\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff?: T | null,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => {\r\n  /*\r\n    if (!isEmptyObject(foreign) && doWriteErrors)\r\n        console.warn(`The following options are discarded due to invalidity:\\r\\n ${window.JSON.stringify(foreign, null, 2)}`);\r\n\r\n    //add values, which aren't specified in the template, to the finished validated object to prevent them from being discarded\r\n    if (keepForeignProps) {\r\n        Object.assign(result.validated, foreign);\r\n    }\r\n    */\r\n  return validateRecursive<T>(options, template, optionsDiff || ({} as T), doWriteErrors || false);\r\n};\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<Record<string, unknown>>;\r\n  readonly function: OptionsTemplateType<Func>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n","import { OptionsTemplate, OptionsWithOptionsTemplate, OptionsTemplateTypes } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\nimport { isArray } from 'support/utils/types';\r\nimport { each, keys } from 'support/utils';\r\n\r\nexport interface OptionsWithOptionsTemplateTransformation<T extends Required<T>> {\r\n  _template: OptionsTemplate<T>;\r\n  _options: T;\r\n}\r\n\r\n/**\r\n * Transforms the given OptionsWithOptionsTemplate<T> object to its corresponding generic (T) Object or its corresponding Template object.\r\n * @param optionsWithOptionsTemplate The OptionsWithOptionsTemplate<T> object which shall be converted.\r\n * @param toTemplate True if the given OptionsWithOptionsTemplate<T> shall be converted to its corresponding Template object.\r\n */\r\nexport function transformOptions<T extends Required<T>>(\r\n  optionsWithOptionsTemplate: OptionsWithOptionsTemplate<T>\r\n): OptionsWithOptionsTemplateTransformation<T> {\r\n  const result: any = {\r\n    _template: {},\r\n    _options: {},\r\n  };\r\n\r\n  each(keys(optionsWithOptionsTemplate), (key: Extract<keyof T, string>) => {\r\n    const val: PlainObject | OptionsTemplateTypes | Array<OptionsTemplateTypes> = optionsWithOptionsTemplate[key];\r\n\r\n    if (isArray(val)) {\r\n      result._template[key] = val[1];\r\n      result._options[key] = val[0];\r\n    } else {\r\n      //  if (isObject(val))\r\n      const tmpResult = transformOptions(val as OptionsWithOptionsTemplate<typeof val>);\r\n      result._template[key] = tmpResult._template;\r\n      result._options[key] = tmpResult._options;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameContent = 'os-content';\r\nexport const classNameContentArrange = `${classNameContent}-arrange`;\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalWH,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  _autoUpdateLoop: boolean;\r\n  _nativeScrollbarSize: XY;\r\n  _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  _nativeScrollbarStyling: boolean;\r\n  _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  _flexboxGlue: boolean;\r\n  _addListener(listener: OnEnvironmentChanged): void;\r\n  _removeListener(listener: OnEnvironmentChanged): void;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst getNativeScrollbarSize = (body: HTMLElement, measureElm: HTMLElement): XY => {\r\n  appendChildren(body, measureElm);\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h,\r\n    y: oSize.w - cSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, 'scrollbar-width') === 'none' || window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n  } catch (ex) {}\r\n\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (parentElm: HTMLElement, childElm: HTMLElement): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = offsetSize(parentElm);\r\n  const minOffsetsize = offsetSize(childElm);\r\n  const supportsMin = equalWH(minOffsetsize, minOffsetsizeParent);\r\n\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = offsetSize(parentElm);\r\n  const maxOffsetsize = offsetSize(childElm);\r\n  const supportsMax = equalWH(maxOffsetsize, maxOffsetsizeParent);\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const nativeScrollbarSize = getNativeScrollbarSize(body, envElm);\r\n  const nativeScrollbarStyling = false; //getNativeScrollbarStyling(envElm); TODO: Re-enable\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n\r\n  const env: Environment = {\r\n    _autoUpdateLoop: false,\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.add(listener);\r\n    },\r\n    _removeListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.delete(listener);\r\n    },\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n    let scrollbarSize = nativeScrollbarSize;\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const newScrollbarSize = (environmentInstance._nativeScrollbarSize = getNativeScrollbarSize(body, envElm));\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSize.x !== newScrollbarSize.x || scrollbarSize.y !== newScrollbarSize.y) {\r\n            runEach(onChangedListener);\r\n          }\r\n\r\n          scrollbarSize = newScrollbarSize;\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  isUndefined,\r\n  removeElements,\r\n  removeClass,\r\n  push,\r\n  runEach,\r\n  prependChildren,\r\n} from 'support';\r\nimport {\r\n  classNameHost,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameContent,\r\n  classNameContentArrange,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { getEnvironment } from 'environment';\r\nimport { OSTarget, OSTargetObject, InternalVersionOf, OSTargetElement } from 'typings';\r\n\r\nexport interface OSTargetContext {\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: HTMLDocument;\r\n}\r\n\r\nexport interface PreparedOSTargetObject extends Required<InternalVersionOf<OSTargetObject>> {\r\n  _host: HTMLElement;\r\n  _contentArrange: HTMLElement | null;\r\n}\r\n\r\nexport interface StructureSetup {\r\n  _targetObj: PreparedOSTargetObject;\r\n  _targetCtx: OSTargetContext;\r\n  _destroy: () => void;\r\n}\r\n\r\nconst unwrap = (elm: HTMLElement | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nexport const createStructureSetup = (target: OSTarget | OSTargetObject): StructureSetup => {\r\n  const targetIsElm = isHTMLElement(target);\r\n  const osTargetObj: InternalVersionOf<OSTargetObject> = targetIsElm\r\n    ? ({} as InternalVersionOf<OSTargetObject>)\r\n    : {\r\n        _host: (target as OSTargetObject).host,\r\n        _target: (target as OSTargetObject).target,\r\n        _padding: (target as OSTargetObject).padding,\r\n        _viewport: (target as OSTargetObject).viewport,\r\n        _content: (target as OSTargetObject).content,\r\n      };\r\n\r\n  if (targetIsElm) {\r\n    const padding = createDiv(classNamePadding);\r\n    const viewport = createDiv(classNameViewport);\r\n    const content = createDiv(classNameContent);\r\n\r\n    appendChildren(padding, viewport);\r\n    appendChildren(viewport, content);\r\n\r\n    osTargetObj._target = target as OSTargetElement;\r\n    osTargetObj._padding = padding;\r\n    osTargetObj._viewport = viewport;\r\n    osTargetObj._content = content;\r\n  }\r\n\r\n  let { _target, _padding, _viewport, _content } = osTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextarea = is(_target, 'textarea');\r\n  const isBody = !isTextarea && is(_target, 'body');\r\n  const _host = (isTextarea ? osTargetObj._host || createDiv() : _target) as HTMLElement;\r\n  const getTargetContents = (contentSlot: HTMLElement) => (isTextarea ? (_target as HTMLTextAreaElement) : contents(contentSlot as HTMLElement));\r\n  const isTextareaHostGenerated = isTextarea && _host !== osTargetObj._host;\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  if (targetIsElm) {\r\n    appendChildren(_content!, getTargetContents(_target));\r\n    appendChildren(_host, _padding);\r\n\r\n    push(destroyFns, () => {\r\n      appendChildren(_host, contents(_content));\r\n      removeElements(_padding);\r\n      removeClass(_host, classNameHost);\r\n    });\r\n  } else {\r\n    const contentContainingElm = _content || _viewport || _padding || _host;\r\n    const createPadding = isUndefined(_padding);\r\n    const createViewport = isUndefined(_viewport);\r\n    const createContent = isUndefined(_content);\r\n    const targetContents = getTargetContents(contentContainingElm);\r\n\r\n    _padding = osTargetObj._padding = createPadding ? createDiv() : _padding;\r\n    _viewport = osTargetObj._viewport = createViewport ? createDiv() : _viewport;\r\n    _content = osTargetObj._content = createContent ? createDiv() : _content;\r\n\r\n    appendChildren(_host, _padding);\r\n    appendChildren(_padding || _host, _viewport);\r\n    appendChildren(_viewport, _content);\r\n\r\n    const contentSlot = _content || _viewport;\r\n    appendChildren(contentSlot, targetContents);\r\n\r\n    push(destroyFns, () => {\r\n      if (createContent) {\r\n        unwrap(_content);\r\n      }\r\n      if (createViewport) {\r\n        unwrap(_viewport);\r\n      }\r\n      if (createPadding) {\r\n        unwrap(_padding);\r\n      }\r\n      removeClass(_host, classNameHost);\r\n      removeClass(_padding, classNamePadding);\r\n      removeClass(_viewport, classNameViewport);\r\n      removeClass(_content, classNameContent);\r\n    });\r\n  }\r\n\r\n  addClass(_host, classNameHost);\r\n  addClass(_padding, classNamePadding);\r\n  addClass(_viewport, classNameViewport);\r\n  addClass(_content, classNameContent);\r\n\r\n  const ownerDocument: HTMLDocument = _target.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const ctx: OSTargetContext = {\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n  };\r\n  // @ts-ignore\r\n  const obj: PreparedOSTargetObject = {\r\n    ...osTargetObj,\r\n    _host,\r\n  };\r\n\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n  if (_nativeScrollbarStyling) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  } else if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n    if (obj._content) {\r\n      const contentArrangeElm = createDiv(classNameContentArrange);\r\n\r\n      prependChildren(_viewport, contentArrangeElm);\r\n      push(destroyFns, removeElements.bind(0, contentArrangeElm));\r\n\r\n      obj._contentArrange = contentArrangeElm;\r\n    }\r\n  }\r\n\r\n  return {\r\n    _targetObj: obj,\r\n    _targetCtx: ctx,\r\n    _destroy: () => {\r\n      runEach(destroyFns);\r\n    },\r\n  };\r\n};\r\n","import { CacheValues, OptionsValidated, hasOwnProperty } from 'support';\r\nimport { Options } from 'options';\r\nimport { LifecycleHub } from 'lifecycles/lifecycleHub';\r\n\r\nexport interface LifecycleAdaptiveUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n}\r\n\r\nexport interface LifecycleUpdateHints extends LifecycleAdaptiveUpdateHints {\r\n  _directionIsRTL: CacheValues<boolean>;\r\n  _heightIntrinsic: CacheValues<boolean>;\r\n}\r\n\r\nexport type LifecycleUpdateFunction = (\r\n  updateHints: LifecycleUpdateHints,\r\n  changedOptions?: OptionsValidated<Options> | null,\r\n  force?: boolean\r\n) => Partial<LifecycleAdaptiveUpdateHints>;\r\n\r\nexport interface LifecycleOptionInfo<T> {\r\n  readonly _value: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport type LifecycleCheckOption = <T>(path: string) => LifecycleOptionInfo<T>;\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj && path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj);\r\n\r\n/**\r\n * Creates a update function for a lifecycle.\r\n * @param lifecycleHub The LifecycleHub which is managing this lifecylce.\r\n * @param updateFunction The update function where cache and options updates are handled. Has two arguments which are the changedOptions and the changedCache objects.\r\n */\r\nexport const createLifecycleUpdateFunction = (\r\n  lifecycleHub: LifecycleHub,\r\n  updateFunction: (\r\n    force: boolean,\r\n    updateHints: LifecycleUpdateHints,\r\n    checkOption: LifecycleCheckOption\r\n  ) => Partial<LifecycleAdaptiveUpdateHints> | void\r\n): LifecycleUpdateFunction => {\r\n  return (updateHints: LifecycleUpdateHints, changedOptions?: OptionsValidated<Options> | null, force?: boolean) => {\r\n    const checkOption: LifecycleCheckOption = (path) => ({\r\n      _value: getPropByPath(lifecycleHub._options, path),\r\n      _changed: force || getPropByPath(changedOptions, path) !== undefined,\r\n    });\r\n    return updateFunction(!!force, updateHints, checkOption) || {};\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  WH,\r\n  XY,\r\n  equalXY,\r\n  style,\r\n  scrollSize,\r\n  offsetSize,\r\n  CacheValues,\r\n  equalWH,\r\n  scrollLeft,\r\n  scrollTop,\r\n  addClass,\r\n  removeClass,\r\n} from 'support';\r\nimport { createLifecycleUpdateFunction, LifecycleUpdateFunction } from 'lifecycles/lifecycleUpdateFunction';\r\nimport { LifecycleHub } from 'lifecycles/lifecycleHub';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverflowBehavior } from 'options';\r\nimport { PlainObject } from 'typings';\r\nimport { classNameViewportScrollbarStyling } from 'classnames';\r\n\r\nconst overlaidScrollbarsHideOffset = 42;\r\nconst overlaidScrollbarsHideBorderStyle = `${overlaidScrollbarsHideOffset}px solid transparent`;\r\ninterface OverflowAmountCacheContext {\r\n  _contentScrollSize: WH<number>;\r\n  _viewportSize: WH<number>;\r\n}\r\n\r\nexport const createOverflowLifecycle = (lifecycleHub: LifecycleHub): LifecycleUpdateFunction => {\r\n  const { _host, _padding, _viewport, _content, _contentArrange } = lifecycleHub._structureSetup._targetObj;\r\n  const { _update: updateContentScrollSizeCache, _current: getCurrentContentScrollSizeCache } = createCache<WH<number>>(\r\n    () => scrollSize(_content || _viewport),\r\n    { _equal: equalWH }\r\n  );\r\n  const { _update: updateOverflowAmountCache, _current: getCurrentOverflowAmountCache } = createCache<XY<number>, OverflowAmountCacheContext>(\r\n    (ctx) => ({\r\n      x: Math.max(0, Math.round((ctx._contentScrollSize.w - ctx._viewportSize.w) * 100) / 100),\r\n      y: Math.max(0, Math.round((ctx._contentScrollSize.h - ctx._viewportSize.h) * 100) / 100),\r\n    }),\r\n    { _equal: equalXY }\r\n  );\r\n\r\n  const setViewportOverflowStyle = (horizontal: boolean, amount: number, behavior: OverflowBehavior, styleObj: PlainObject) => {\r\n    const overflowKey = horizontal ? 'overflowX' : 'overflowY';\r\n    //const scrollMaxKey = horizontal ? 'scrollLeftMax' : 'scrollTopMax';\r\n    const behaviorIsScroll = behavior === 'scroll';\r\n    const behaviorIsVisibleScroll = behavior === 'visible-scroll';\r\n    const hideOverflow = behaviorIsScroll || behavior === 'hidden';\r\n    //const scrollMax = _viewport[scrollMaxKey];\r\n    //const scrollMaxOverflow = isNumber(scrollMax) ? scrollMax > 0 : true;\r\n    const applyStyle = amount > 0 && hideOverflow;\r\n\r\n    if (applyStyle) {\r\n      styleObj[overflowKey] = behavior;\r\n    }\r\n\r\n    return {\r\n      _visible: !applyStyle,\r\n      _behavior: behaviorIsVisibleScroll ? 'scroll' : 'hidden',\r\n    };\r\n  };\r\n\r\n  const hideNativeScrollbars = (\r\n    contentScrollSize: WH<number>,\r\n    showNativeOverlaidScrollbars: boolean,\r\n    directionIsRTL: boolean,\r\n    viewportStyleObj: PlainObject,\r\n    contentStyleObj: PlainObject\r\n  ) => {\r\n    const { _nativeScrollbarSize, _nativeScrollbarIsOverlaid, _nativeScrollbarStyling } = getEnvironment();\r\n    const { x: overlaidX, y: overlaidY } = _nativeScrollbarIsOverlaid;\r\n    const scrollX = viewportStyleObj.overflowX === 'scroll';\r\n    const scrollY = viewportStyleObj.overflowY === 'scroll';\r\n    const horizontalMarginKey = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const horizontalBorderKey = directionIsRTL ? 'borderLeft' : 'borderRight';\r\n    const overlaidHideOffset = _content && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const scrollbarsHideOffset = {\r\n      x: overlaidX ? overlaidHideOffset : _nativeScrollbarSize.x,\r\n      y: overlaidY ? overlaidHideOffset : _nativeScrollbarSize.y,\r\n    };\r\n\r\n    if (!_nativeScrollbarStyling) {\r\n      if (scrollX) {\r\n        viewportStyleObj.marginBottom = -scrollbarsHideOffset.x;\r\n\r\n        contentStyleObj.borderBottom = overlaidX && overlaidHideOffset ? overlaidScrollbarsHideBorderStyle : '';\r\n      }\r\n      if (scrollY) {\r\n        viewportStyleObj.maxWidth = `calc(100% + ${scrollbarsHideOffset.y}px)`;\r\n        viewportStyleObj[horizontalMarginKey] = -scrollbarsHideOffset.y;\r\n\r\n        contentStyleObj[horizontalBorderKey] = overlaidY && overlaidHideOffset ? overlaidScrollbarsHideBorderStyle : '';\r\n      }\r\n\r\n      if (_contentArrange) {\r\n        style(_contentArrange, {\r\n          width: scrollY && !showNativeOverlaidScrollbars ? overlaidHideOffset + contentScrollSize.w : '',\r\n          height: scrollX && !showNativeOverlaidScrollbars ? overlaidHideOffset + contentScrollSize.h : '',\r\n        });\r\n      }\r\n    }\r\n\r\n    return {\r\n      _scrollbarsHideOffset: scrollbarsHideOffset,\r\n      _scroll: {\r\n        x: scrollX,\r\n        y: scrollY,\r\n      },\r\n    };\r\n  };\r\n\r\n  const setFlexboxGlueStyle = (heightIntrinsic: boolean, scrollX: boolean, scrollbarsHideOffsetX: number) => {\r\n    const offsetLeft = scrollLeft(_viewport);\r\n    const offsetTop = scrollTop(_viewport);\r\n\r\n    style(_viewport, {\r\n      maxHeight: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      style(_viewport, {\r\n        maxHeight: _host.clientHeight + (scrollX ? scrollbarsHideOffsetX : 0),\r\n      });\r\n    }\r\n\r\n    scrollLeft(_viewport, offsetLeft);\r\n    scrollTop(_viewport, offsetTop);\r\n  };\r\n\r\n  return createLifecycleUpdateFunction(lifecycleHub, (force, updateHints, checkOption) => {\r\n    const { _directionIsRTL, _heightIntrinsic, _sizeChanged, _hostMutation, _contentMutation } = updateHints;\r\n    const { _flexboxGlue, _nativeScrollbarStyling, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n    const { _value: showNativeOverlaidScrollbarsOption, _changed: showNativeOverlaidScrollbarsChanged } = checkOption<boolean>(\r\n      'nativeScrollbarsOverlaid.show'\r\n    );\r\n    const adjustFlexboxGlue = !_flexboxGlue && (_sizeChanged || _contentMutation || _hostMutation || showNativeOverlaidScrollbarsChanged);\r\n    const showNativeOverlaidScrollbars = showNativeOverlaidScrollbarsOption && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\r\n    let overflowAmuntCache: CacheValues<XY<number>> = getCurrentOverflowAmountCache();\r\n    let contentScrollSizeCache: CacheValues<WH<number>> = getCurrentContentScrollSizeCache();\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      if (showNativeOverlaidScrollbars) {\r\n        removeClass(_viewport, classNameViewportScrollbarStyling);\r\n      } else {\r\n        addClass(_viewport, classNameViewportScrollbarStyling);\r\n      }\r\n    }\r\n\r\n    if (_sizeChanged || _contentMutation) {\r\n      const viewportOffsetSize = offsetSize(_padding);\r\n      const contentClientSize = offsetSize(_content || _viewport);\r\n      const contentArrangeOffsetSize = offsetSize(_contentArrange);\r\n\r\n      contentScrollSizeCache = updateContentScrollSizeCache(force);\r\n      const { _value: contentScrollSize } = contentScrollSizeCache;\r\n      overflowAmuntCache = updateOverflowAmountCache(force, {\r\n        _contentScrollSize: {\r\n          w: Math.max(contentScrollSize!.w, contentArrangeOffsetSize.w),\r\n          h: Math.max(contentScrollSize!.h, contentArrangeOffsetSize.h),\r\n        },\r\n        _viewportSize: {\r\n          w: viewportOffsetSize.w + Math.max(0, contentClientSize.w - contentScrollSize!.w),\r\n          h: viewportOffsetSize.h + Math.max(0, contentClientSize.h - contentScrollSize!.h),\r\n        },\r\n      });\r\n    }\r\n\r\n    const { _value: directionIsRTL, _changed: directionChanged } = _directionIsRTL;\r\n    const { _value: contentScrollSize, _changed: contentScrollSizeChanged } = contentScrollSizeCache;\r\n    const { _value: overflowAmount, _changed: overflowAmountChanged } = overflowAmuntCache;\r\n    const { _value: overflow, _changed: overflowChanged } = checkOption<{\r\n      x: OverflowBehavior;\r\n      y: OverflowBehavior;\r\n    }>('overflow');\r\n    const adjustDirection = directionChanged && !_nativeScrollbarStyling;\r\n\r\n    if (\r\n      contentScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      adjustDirection ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: PlainObject = {\r\n        overflowY: '',\r\n        overflowX: '',\r\n        marginTop: '',\r\n        marginRight: '',\r\n        marginBottom: '',\r\n        marginLeft: '',\r\n        maxWidth: '',\r\n      };\r\n      const contentStyle: PlainObject = {\r\n        borderTop: '',\r\n        borderRight: '',\r\n        borderBottom: '',\r\n        borderLeft: '',\r\n      };\r\n\r\n      const { _visible: xVisible, _behavior: xVisibleBehavior } = setViewportOverflowStyle(true, overflowAmount!.x, overflow.x, viewportStyle);\r\n      const { _visible: yVisible, _behavior: yVisibleBehavior } = setViewportOverflowStyle(false, overflowAmount!.y, overflow.y, viewportStyle);\r\n\r\n      if (xVisible && !yVisible) {\r\n        viewportStyle.overflowX = xVisibleBehavior;\r\n      }\r\n      if (yVisible && !xVisible) {\r\n        viewportStyle.overflowY = yVisibleBehavior;\r\n      }\r\n\r\n      const { _scrollbarsHideOffset, _scroll } = hideNativeScrollbars(\r\n        contentScrollSize!,\r\n        showNativeOverlaidScrollbars,\r\n        directionIsRTL!,\r\n        viewportStyle,\r\n        contentStyle\r\n      );\r\n\r\n      if (adjustFlexboxGlue) {\r\n        setFlexboxGlueStyle(!!_heightIntrinsic._value, _scroll.x, _scrollbarsHideOffset.x);\r\n      }\r\n\r\n      // TODO: enlargen viewport if div too small for firefox scrollbar hiding behavior\r\n      // TODO: Test without content\r\n      // TODO: Test without padding\r\n      // TODO: hide host || padding overflow if scroll x or y\r\n\r\n      style(_viewport, viewportStyle);\r\n      style(_content, contentStyle);\r\n    }\r\n  });\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  preventDefault,\r\n  stopPropagation,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  indexOf,\r\n  each,\r\n  isBoolean,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\ninterface SizeObserverEntry {\r\n  contentRect: DOMRectReadOnly;\r\n}\r\n\r\nexport type SizeObserverOptions = { _direction?: boolean; _appear?: boolean };\r\n\r\nexport interface SizeObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _directionIsRTL: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst directionIsRTLMap = {\r\n  direction: ['rtl'],\r\n  // 'writing-mode': ['sideways-rl', 'tb', 'tb-rl', 'vertical-rl'],\r\n};\r\nconst directionIsRTL = (elm: HTMLElement): boolean => {\r\n  let isRTL = false;\r\n  const styles = style(elm, ['direction' /* , 'writing-mode' */]);\r\n  each(styles, (value, key) => {\r\n    isRTL = isRTL || indexOf(directionIsRTLMap[key], value) > -1;\r\n  });\r\n  return isRTL;\r\n};\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (directionIsRTLCache?: CacheValues<boolean>) => any,\r\n  options?: SizeObserverOptions\r\n): SizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } = options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(`<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`);\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const { _update: updateResizeObserverContentRectCache } = createCache<DOMRectReadOnly, DOMRectReadOnly>(0, {\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (sizeChangedContext?: CacheValues<boolean> | SizeObserverEntry[] | Event) => {\r\n    const hasDirectionCache = sizeChangedContext && isBoolean((sizeChangedContext as CacheValues<boolean>)._value);\r\n\r\n    let skip = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isArray(sizeChangedContext) && sizeChangedContext.length > 0) {\r\n      const { _previous, _value, _changed } = updateResizeObserverContentRectCache(0, sizeChangedContext.pop()!.contentRect);\r\n      skip = !_previous || !domRectHasDimensions(_value); // skip on initial RO. call or if display is none\r\n      doDirectionScroll = !skip && _changed; // direction scroll when not skipping and changing from display: none to block, false otherwise\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      doDirectionScroll = (sizeChangedContext as CacheValues<boolean>)._changed; // direction scroll when DirectionCache changed, false toherwise\r\n    }\r\n\r\n    if (observeDirectionChange) {\r\n      const rtl = hasDirectionCache ? (sizeChangedContext as CacheValues<boolean>)._value : directionIsRTL(sizeObserver);\r\n      scrollLeft(sizeObserver, rtl ? (rtlScrollBehavior.n ? -scrollAmount : rtlScrollBehavior.i ? 0 : scrollAmount) : scrollAmount);\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback(hasDirectionCache ? (sizeChangedContext as CacheValues<boolean>) : undefined);\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange ? onSizeChangedCallbackProxy : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => resizeObserverInstance.disconnect());\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(listenerElement);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = () => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy();\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event) => {\r\n      currSize = offsetSize(listenerElement);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent && isDirty && !rAFId) {\r\n        cAF!(rAFId);\r\n        rAFId = rAF!(onResized);\r\n      } else if (!scrollEvent) {\r\n        onResized();\r\n      }\r\n\r\n      reset();\r\n\r\n      if (scrollEvent) {\r\n        preventDefault(scrollEvent);\r\n        stopPropagation(scrollEvent);\r\n      }\r\n      return false;\r\n    };\r\n\r\n    push(offListeners, [on(expandElement, scrollEventName, onScroll), on(shrinkElement, scrollEventName, onScroll)]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n    reset();\r\n    appearCallback = observeAppearChange ? () => onScroll() : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(() => directionIsRTL(sizeObserver));\r\n    const { _update: updateDirectionIsRTLCache } = directionIsRTLCache;\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        const { _value, _changed } = directionIsRTLCacheValues;\r\n        if (_changed) {\r\n          if (_value) {\r\n            style(listenerElement, { left: 'auto', right: 0 });\r\n          } else {\r\n            style(listenerElement, { left: 0, right: 'auto' });\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        preventDefault(event);\r\n        stopPropagation(event);\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(sizeObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _directionIsRTL: directionIsRTLCache\r\n          ? directionIsRTLCache._current(force)\r\n          : {\r\n              _value: false,\r\n              _previous: false,\r\n              _changed: false,\r\n            },\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDOM,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport interface TrinsicObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _heightIntrinsic: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): TrinsicObserver => {\r\n  const trinsicObserver = createDOM(`<div class=\"${classNameTrinsicObserver}\"></div>`)[0] as HTMLElement;\r\n  const offListeners: (() => void)[] = [];\r\n  const { _update: updateHeightIntrinsicCache, _current: getCurrentHeightIntrinsicCache } = createCache<\r\n    boolean,\r\n    IntersectionObserverEntry | WH<number>\r\n  >(\r\n    (ioEntryOrSize: IntersectionObserverEntry | WH<number>) =>\r\n      (ioEntryOrSize! as WH<number>).h === 0 ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).isIntersecting ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).intersectionRatio > 0,\r\n    {\r\n      _initialValue: false,\r\n    }\r\n  );\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          const last = entries.pop();\r\n          if (last) {\r\n            const heightIntrinsic = updateHeightIntrinsicCache(0, last);\r\n\r\n            if (heightIntrinsic._changed) {\r\n              onTrinsicChangedCallback(heightIntrinsic);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => intersectionObserverInstance.disconnect());\r\n  } else {\r\n    push(\r\n      offListeners,\r\n      createSizeObserver(trinsicObserver, () => {\r\n        const newSize = offsetSize(trinsicObserver);\r\n        const heightIntrinsicCache = updateHeightIntrinsicCache(0, newSize);\r\n\r\n        if (heightIntrinsicCache._changed) {\r\n          onTrinsicChangedCallback(heightIntrinsicCache);\r\n        }\r\n      })._destroy\r\n    );\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(trinsicObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _heightIntrinsic: getCurrentHeightIntrinsicCache(force),\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  off,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n  isUndefined,\r\n  isFunction,\r\n} from 'support';\r\n\r\ntype StringNullUndefined = string | null | undefined;\r\nexport type DOMObserverEventContentChange =\r\n  | Array<[StringNullUndefined, ((elms: Node[]) => string) | StringNullUndefined] | null | undefined>\r\n  | false\r\n  | null\r\n  | undefined;\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions: DOMObserverOptions | undefined\r\n) => boolean;\r\nexport type DOMObserverIgnoreTargetAttrChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\nexport interface DOMObserverOptions {\r\n  _observeContent?: boolean; // do observe children and trigger content change\r\n  _attributes?: string[]; // observed attributes\r\n  _styleChangingAttributes?: string[]; // list of attributes that trigger a contentChange or a targetStyleChange if changed\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname]\r\n  _nestedTargetSelector?: string;\r\n  _ignoreTargetAttrChange?: DOMObserverIgnoreTargetAttrChange;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange;\r\n}\r\nexport interface DOMObserver {\r\n  _disconnect: () => void;\r\n  _updateEventContentChange: (newEventContentChange?: DOMObserverEventContentChange) => void;\r\n  _update: () => void;\r\n}\r\n\r\n// const styleChangingAttributes = ['id', 'class', 'style', 'open'];\r\n// const mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n\r\nconst createEventContentChange = (\r\n  target: Element,\r\n  eventContentChange: DOMObserverEventContentChange,\r\n  map: Map<Node, string>,\r\n  callback: (...args: any) => any\r\n) => {\r\n  let eventContentChangeRef: DOMObserverEventContentChange;\r\n  const addEvent = (elm: Node, eventName: string) => {\r\n    const entry = map.get(elm);\r\n    const newEntry = isUndefined(entry);\r\n    const registerEvent = () => {\r\n      map.set(elm, eventName);\r\n      on(elm, eventName, callback);\r\n    };\r\n\r\n    if (!newEntry && eventName !== entry) {\r\n      off(elm, entry!, callback);\r\n      registerEvent();\r\n    } else if (newEntry) {\r\n      registerEvent();\r\n    }\r\n  };\r\n  const _destroy = () => {\r\n    map.forEach((eventName: string, elm: Node) => {\r\n      off(elm, eventName, callback);\r\n    });\r\n    map.clear();\r\n  };\r\n  const _updateElements = (getElements?: (selector: string) => Node[]) => {\r\n    if (eventContentChangeRef) {\r\n      const eventElmList = eventContentChangeRef.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventName = item[1];\r\n          const elements = eventName && selector && (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements) {\r\n            push(arr, [elements, isFunction(eventName) ? eventName(elements) : eventName!], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) => {\r\n        const elements = item[0];\r\n        const eventName = item[1];\r\n\r\n        each(elements, (elm) => {\r\n          addEvent(elm, eventName);\r\n        });\r\n      });\r\n    }\r\n  };\r\n  const _update = (newEventContentChange: DOMObserverEventContentChange) => {\r\n    eventContentChangeRef = newEventContentChange;\r\n    _destroy();\r\n    _updateElements();\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    _update(eventContentChange);\r\n  }\r\n\r\n  return {\r\n    _destroy,\r\n    _updateElements,\r\n    _update,\r\n  };\r\n};\r\n\r\nexport const createDOMObserver = (\r\n  target: HTMLElement,\r\n  callback: (targetChangedAttrs: string[], targetStyleChanged: boolean, contentChanged: boolean) => any,\r\n  options?: DOMObserverOptions\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _observeContent,\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetAttrChange: _ignoreTargetChange,\r\n    _ignoreContentChange,\r\n  } = options || {};\r\n  const {\r\n    _updateElements: updateEventContentChangeElements,\r\n    _destroy: destroyEventContentChange,\r\n    _update: updateEventContentChange,\r\n  } = createEventContentChange(\r\n    target,\r\n    _observeContent && _eventContentChange,\r\n    new Map<Node, string>(),\r\n    debounce(() => {\r\n      if (isConnected) {\r\n        callback([], false, true);\r\n      }\r\n    }, 84)\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes); // TODO: observer textarea attrs if textarea\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange = _ignoreTargetChange || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue = isAttributesType && isString(attributeName) ? attr(mutationTarget as HTMLElement, attributeName!) : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const targetAttrChanged =\r\n        attributeChanged &&\r\n        targetIsMutationTarget &&\r\n        !_observeContent &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null);\r\n      const styleChangingAttrChanged = indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      if (targetAttrChanged) {\r\n        push(targetChangedAttrs, attributeName!);\r\n      }\r\n      if (_observeContent) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged && !targetIsMutationTarget;\r\n        const isNestedTarget = contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged = baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      targetStyleChanged = targetStyleChanged || (targetAttrChanged && styleChangingAttrChanged);\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n    if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged || contentChanged) {\r\n      callback(targetChangedAttrs, targetStyleChanged, contentChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: _observeContent,\r\n    childList: _observeContent,\r\n    characterData: _observeContent,\r\n  });\r\n  isConnected = true;\r\n\r\n  return {\r\n    _disconnect: () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    _updateEventContentChange: (newEventContentChange?: DOMObserverEventContentChange) => {\r\n      updateEventContentChange(isConnected && _observeContent && newEventContentChange);\r\n    },\r\n    _update: () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  };\r\n};\r\n","import { CacheValues, each, push, validateOptions, assignDeep, isEmptyObject, OptionsValidated } from 'support';\r\nimport { Options } from 'options';\r\nimport { getEnvironment, Environment } from 'environment';\r\nimport { StructureSetup } from 'setups/structureSetup';\r\nimport { createStructureLifecycle } from 'lifecycles/structureLifecycle';\r\nimport { createOverflowLifecycle } from 'lifecycles/overflowLifecycle';\r\nimport { LifecycleUpdateFunction, LifecycleUpdateHints } from 'lifecycles/lifecycleUpdateFunction';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver } from 'observers/domObserver';\r\n\r\nexport interface LifecycleHubInstance {\r\n  _update(changedOptions?: OptionsValidated<Options> | null, force?: boolean): void;\r\n  _destroy(): void;\r\n}\r\n\r\nexport interface LifecycleHub {\r\n  _options: Options;\r\n  _structureSetup: StructureSetup;\r\n}\r\n\r\nconst attrs = ['id', 'class', 'style', 'open'];\r\nconst directionIsRTLCacheValuesFallback: CacheValues<boolean> = {\r\n  _value: false,\r\n  _previous: false,\r\n  _changed: false,\r\n};\r\nconst heightIntrinsicCacheValuesFallback: CacheValues<boolean> = {\r\n  _value: false,\r\n  _previous: false,\r\n  _changed: false,\r\n};\r\n\r\nexport const createLifecycleHub = (options: Options, structureSetup: StructureSetup): LifecycleHubInstance => {\r\n  const { _host, _viewport, _content } = structureSetup._targetObj;\r\n  const {\r\n    _nativeScrollbarStyling,\r\n    _flexboxGlue,\r\n    _addListener: addEnvironmentListener,\r\n    _removeListener: removeEnvironmentListener,\r\n  } = getEnvironment();\r\n  const lifecycles: LifecycleUpdateFunction[] = [];\r\n  const instance: LifecycleHub = {\r\n    _options: options,\r\n    _structureSetup: structureSetup,\r\n  };\r\n\r\n  // push(lifecycles, createStructureLifecycle(instance));\r\n  push(lifecycles, createOverflowLifecycle(instance));\r\n\r\n  const runLifecycles = (updateHints?: Partial<LifecycleUpdateHints> | null, changedOptions?: OptionsValidated<Options> | null, force?: boolean) => {\r\n    let { _directionIsRTL, _heightIntrinsic, _sizeChanged = force || false, _hostMutation = force || false, _contentMutation = force || false } =\r\n      updateHints || {};\r\n    const finalDirectionIsRTL =\r\n      _directionIsRTL || (sizeObserver ? sizeObserver._getCurrentCacheValues(force)._directionIsRTL : directionIsRTLCacheValuesFallback);\r\n    const finalHeightIntrinsic =\r\n      _heightIntrinsic || (trinsicObserver ? trinsicObserver._getCurrentCacheValues(force)._heightIntrinsic : heightIntrinsicCacheValuesFallback);\r\n\r\n    each(lifecycles, (lifecycle) => {\r\n      const { _sizeChanged: adaptiveSizeChanged, _hostMutation: adaptiveHostMutation, _contentMutation: adaptiveContentMutation } = lifecycle(\r\n        {\r\n          _directionIsRTL: finalDirectionIsRTL,\r\n          _heightIntrinsic: finalHeightIntrinsic,\r\n          _sizeChanged,\r\n          _hostMutation,\r\n          _contentMutation,\r\n        },\r\n        changedOptions,\r\n        force\r\n      );\r\n\r\n      _sizeChanged = adaptiveSizeChanged || _sizeChanged;\r\n      _hostMutation = adaptiveHostMutation || _hostMutation;\r\n      _contentMutation = adaptiveContentMutation || _contentMutation;\r\n    });\r\n  };\r\n\r\n  const onSizeChanged = (directionIsRTL?: CacheValues<boolean>) => {\r\n    const sizeChanged = !directionIsRTL;\r\n    runLifecycles({\r\n      _directionIsRTL: directionIsRTL,\r\n      _sizeChanged: sizeChanged,\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsic: CacheValues<boolean>) => {\r\n    runLifecycles({\r\n      _heightIntrinsic: heightIntrinsic,\r\n    });\r\n  };\r\n  const onHostMutation = () => {\r\n    // TODO: rAF only here because IE\r\n    requestAnimationFrame(() => {\r\n      runLifecycles({\r\n        _hostMutation: true,\r\n      });\r\n    });\r\n  };\r\n  const onContentMutation = () => {\r\n    // TODO: rAF only here because IE\r\n    requestAnimationFrame(() => {\r\n      runLifecycles({\r\n        _contentMutation: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const sizeObserver = createSizeObserver(_host, onSizeChanged, { _appear: true, _direction: !_nativeScrollbarStyling });\r\n  const trinsicObserver = createTrinsicObserver(_host, onTrinsicChanged);\r\n  const hostMutationObserver = createDOMObserver(_host, onHostMutation, {\r\n    _styleChangingAttributes: attrs,\r\n    _attributes: attrs,\r\n  });\r\n  const contentMutationObserver = createDOMObserver(_content || _viewport, onContentMutation, {\r\n    _observeContent: true,\r\n    _styleChangingAttributes: attrs,\r\n    _attributes: attrs,\r\n    _eventContentChange: options!.updating!.elementEvents as [string, string][],\r\n    /*\r\n      _nestedTargetSelector: hostSelector,\r\n      _ignoreContentChange: (mutation, isNestedTarget) => {\r\n        const { target, attributeName } = mutation;\r\n        return isNestedTarget ? false : attributeName ? liesBetween(target as Element, hostSelector, '.content') : false;\r\n      },\r\n      _ignoreTargetAttrChange: (target, attrName, oldValue, newValue) => {\r\n        if (attrName === 'class' && oldValue && newValue) {\r\n          const diff = diffClass(oldValue, newValue);\r\n          const ignore = diff.length === 1 && diff[0].startsWith(ignorePrefix);\r\n          return ignore;\r\n        }\r\n        return false;\r\n      },\r\n      */\r\n  });\r\n\r\n  const updateAll = (changedOptions?: OptionsValidated<Options> | null, force?: boolean) => {\r\n    runLifecycles(null, changedOptions, force);\r\n  };\r\n  const envUpdateListener = updateAll.bind(null, null, true);\r\n  addEnvironmentListener(envUpdateListener);\r\n\r\n  console.log('flexboxGlue', _flexboxGlue);\r\n\r\n  return {\r\n    _update: updateAll,\r\n    _destroy() {\r\n      removeEnvironmentListener(envUpdateListener);\r\n    },\r\n  };\r\n};\r\n","import {\r\n  optionsTemplateTypes as oTypes,\r\n  transformOptions,\r\n  OptionsTemplateValue,\r\n  OptionsWithOptionsTemplateValue,\r\n  OptionsWithOptionsTemplate,\r\n  Func,\r\n} from 'support/options';\r\nimport { ResizeBehavior, OverflowBehavior, VisibilityBehavior, AutoHideBehavior, Options } from 'options';\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst stringArrayNullAllowedValues: OptionsTemplateValue<string | ReadonlyArray<string> | null> = [oTypes.string, oTypes.array, oTypes.null];\r\nconst booleanTrueTemplate: OptionsWithOptionsTemplateValue<boolean> = [true, oTypes.boolean];\r\nconst booleanFalseTemplate: OptionsWithOptionsTemplateValue<boolean> = [false, oTypes.boolean];\r\n// const callbackTemplate: OptionsWithOptionsTemplateValue<Func | null> = [null, [oTypes.function, oTypes.null]];\r\nconst resizeAllowedValues: OptionsTemplateValue<ResizeBehavior> = 'none both horizontal vertical';\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> = 'visible-hidden visible-scroll scroll hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> = 'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> = 'never scroll leavemove';\r\n\r\n/**\r\n * A object which serves as \"default options object\" and \"options template object\".\r\n * I combined these two into one object so that I don't have to define two separate big objects, instead I define one big object.\r\n *\r\n * The property value is a tuple:\r\n * the first value is the default value\r\n * the second value is the template value\r\n * Example:\r\n * {\r\n *  a: ['default', [Type.string, Type.null]],\r\n *  b: [250, Type.number]\r\n * }\r\n * Property \"a\" has a default value of 'default' and it can be a string or null\r\n * Property \"b\" has a default value of 250 and it can be number\r\n */\r\nconst defaultOptionsWithTemplate: OptionsWithOptionsTemplate<Required<Options>> = {\r\n  resize: ['none', resizeAllowedValues], // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: booleanFalseTemplate, // true || false\r\n  updating: {\r\n    elementEvents: [[['img', 'load']], [oTypes.array, oTypes.null]], // array of tuples || null\r\n    contentMutationDebounce: [80, numberAllowedValues], // number\r\n    hostMutationDebounce: [0, numberAllowedValues], // number\r\n    resizeDebounce: [0, numberAllowedValues], // number\r\n  },\r\n  overflow: {\r\n    x: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  scrollbars: {\r\n    visibility: ['auto', scrollbarsVisibilityAllowedValues], // visible || hidden || auto || v || h || a\r\n    autoHide: ['never', scrollbarsAutoHideAllowedValues], // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: [800, numberAllowedValues], // number\r\n    dragScroll: booleanTrueTemplate, // true || false\r\n    clickScroll: booleanFalseTemplate, // true || false\r\n    touch: booleanTrueTemplate, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: booleanFalseTemplate, // true || false\r\n    dynHeight: booleanFalseTemplate, // true || false\r\n    inheritedAttrs: [['style', 'class'], stringArrayNullAllowedValues], // string || array || null\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanFalseTemplate, // true || false\r\n    initialize: booleanFalseTemplate, // true || false\r\n  },\r\n  /*\r\n  callbacks: {\r\n    onInitialized: callbackTemplate, // null || function\r\n    onInitializationWithdrawn: callbackTemplate, // null || function\r\n    onDestroyed: callbackTemplate, // null || function\r\n    onScrollStart: callbackTemplate, // null || function\r\n    onScroll: callbackTemplate, // null || function\r\n    onScrollStop: callbackTemplate, // null || function\r\n    onOverflowChanged: callbackTemplate, // null || function\r\n    onOverflowAmountChanged: callbackTemplate, // null || function\r\n    onDirectionChanged: callbackTemplate, // null || function\r\n    onContentSizeChanged: callbackTemplate, // null || function\r\n    onHostSizeChanged: callbackTemplate, // null || function\r\n    onUpdated: callbackTemplate, // null || function\r\n  },\r\n  */\r\n};\r\n\r\nexport const { _template: optionsTemplate, _options: defaultOptions } = transformOptions(defaultOptionsWithTemplate);\r\n","import { OSTarget, OSTargetObject } from 'typings';\r\n\r\nimport { validateOptions, assignDeep, isEmptyObject } from 'support';\r\nimport { createStructureSetup, StructureSetup } from 'setups/structureSetup';\r\nimport { createLifecycleHub } from 'lifecycles/lifecycleHub';\r\nimport { Options, defaultOptions, optionsTemplate } from 'options';\r\n\r\nconst OverlayScrollbars = (target: OSTarget | OSTargetObject, options?: Options, extensions?: any): any => {\r\n  const currentOptions: Required<Options> = assignDeep(\r\n    {},\r\n    defaultOptions,\r\n    validateOptions<Options>(options || ({} as Options), optionsTemplate, null, true)._validated\r\n  );\r\n  const structureSetup: StructureSetup = createStructureSetup(target);\r\n  const lifecycleHub = createLifecycleHub(currentOptions, structureSetup);\r\n  const instance = {\r\n    options(newOptions?: Options) {\r\n      if (newOptions) {\r\n        const { _validated: _changedOptions } = validateOptions(newOptions, optionsTemplate, currentOptions, true);\r\n\r\n        if (!isEmptyObject(_changedOptions)) {\r\n          assignDeep(currentOptions, _changedOptions);\r\n          lifecycleHub._update(_changedOptions);\r\n        }\r\n      }\r\n      return currentOptions;\r\n    },\r\n    update(force?: boolean) {\r\n      lifecycleHub._update(null, force);\r\n    },\r\n  };\r\n\r\n  instance.update(true);\r\n\r\n  return instance;\r\n};\r\n\r\nexport { OverlayScrollbars };\r\n","import { createDOM } from 'support/dom';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverlayScrollbars } from 'overlayscrollbars/overlayscrollbars';\r\n\r\nconst abc = {\r\n  a: 1,\r\n  b: 1,\r\n  c: 1,\r\n};\r\n\r\nexport default () => {\r\n  return [\r\n    getEnvironment(),\r\n    OverlayScrollbars(document.body),\r\n    createDOM(\r\n      '\\\r\n    <div class=\"os-host\">\\\r\n        <div class=\"os-resize-observer-host\"></div>\\\r\n        <div class=\"os-padding\">\\\r\n            <div class=\"os-viewport\">\\\r\n                <div class=\"os-content\">\\\r\n                    fdfhdfgh\\\r\n                </div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar os-scrollbar-horizontal\">\\\r\n            <div class=\"os-scrollbar-track\">\\\r\n                <div class=\"os-scrollbar-handle\"></div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar os-scrollbar-vertical\">\\\r\n            <div class=\"os-scrollbar-track\">\\\r\n                <div class=\"os-scrollbar-handle\"></div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar-corner\"></div>\\\r\n    </div>'\r\n    ),\r\n  ];\r\n};\r\n"],"names":["ElementNodeType","Node","ELEMENT_NODE","Object","prototype","toString","hasOwnProperty","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","getSetProp","topLeft","fallback","elm","value","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","isEmptyArray","runEach","p1","runFn","fn","Set","forEach","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","addClass","add","removeClass","remove","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","insertAfter","insertedNodes","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","split","off","listener","capture","eventName","removeEventListener","on","options","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","bind","stopPropagation","preventDefault","equal","a","b","props","equalWH","equalXY","firstLetterToUpper","str","charAt","toUpperCase","slice","jsPrefixes","jsCache","jsAPI","prefix","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","noop","debounce","functionToDebounce","timeout","maxWait","timeoutId","lastCallTime","hasTimeout","hasMaxWait","cancel","clearTimeout","set","setTimeout","setFn","args","performance","now","boundSetFn","arguments","forceCall","cssNumber","animationiterationcount","columncount","fillopacity","flexgrow","flexshrink","fontweight","lineheight","opacity","order","orphans","widows","zindex","zoom","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","style","setCSSVal","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","x","y","absoluteCoordinates","rect","left","pageYOffset","top","pageXOffset","createCache","update","_equal","_initialValue","_alwaysUpdateValues","_value","_previous","cacheUpdate","force","context","curr","newVal","changed","_changed","_update","_current","_extends","module","assign","stringify","JSON","templateTypePrefixSuffix","optionsTemplateTypes","validateRecursive","template","optionsDiff","doWriteErrors","propPath","validatedOptions","optionsCopy","filter","optionsDiffValue","optionsValue","templateValue","templateIsComplex","propPrefix","validatedResult","_validated","_foreign","isValid","errorEnumStrings","errorPossibleTypes","optionsValueType","templateValueArr","currTemplateType","typeString","isEnumString","enumStringSplit","possibility","string","doStringifyComparison","console","warn","join","validateOptions","transformOptions","optionsWithOptionsTemplate","_template","_options","tmpResult","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameContent","classNameContentArrange","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","environmentInstance","abs","Math","round","getNativeScrollbarSize","body","measureElm","cSize","oSize","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","nativeScrollbarSize","nativeScrollbarStyling","nativeScrollbarIsOverlaid","env","_autoUpdateLoop","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_rtlScrollBehavior","_flexboxGlue","_addListener","_removeListener","delete","size","dpr","scrollbarSize","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","newScrollbarSize","getEnvironment","unwrap","createStructureSetup","targetIsElm","osTargetObj","_host","host","_target","_padding","padding","_viewport","viewport","_content","content","destroyFns","isTextarea","isBody","getTargetContents","contentSlot","isTextareaHostGenerated","contentContainingElm","createPadding","createViewport","createContent","targetContents","ownerDocument","bodyElm","wnd","defaultView","ctx","_windowElm","_documentElm","_htmlElm","_bodyElm","_isTextarea","_isBody","contentArrangeElm","_contentArrange","_targetObj","_targetCtx","_destroy","getPropByPath","path","o","createLifecycleUpdateFunction","lifecycleHub","updateFunction","updateHints","changedOptions","checkOption","overlaidScrollbarsHideOffset","overlaidScrollbarsHideBorderStyle","createOverflowLifecycle","_structureSetup","updateContentScrollSizeCache","getCurrentContentScrollSizeCache","max","_contentScrollSize","_viewportSize","updateOverflowAmountCache","getCurrentOverflowAmountCache","setViewportOverflowStyle","horizontal","amount","behavior","styleObj","overflowKey","behaviorIsScroll","behaviorIsVisibleScroll","hideOverflow","applyStyle","_visible","_behavior","hideNativeScrollbars","contentScrollSize","showNativeOverlaidScrollbars","directionIsRTL","viewportStyleObj","contentStyleObj","overlaidX","overlaidY","scrollX","scrollY","horizontalMarginKey","horizontalBorderKey","overlaidHideOffset","scrollbarsHideOffset","marginBottom","borderBottom","maxWidth","width","height","_scrollbarsHideOffset","_scroll","setFlexboxGlueStyle","heightIntrinsic","scrollbarsHideOffsetX","offsetLeft","offsetTop","maxHeight","_directionIsRTL","_heightIntrinsic","_sizeChanged","_hostMutation","_contentMutation","showNativeOverlaidScrollbarsOption","showNativeOverlaidScrollbarsChanged","adjustFlexboxGlue","overflowAmuntCache","contentScrollSizeCache","viewportOffsetSize","contentClientSize","contentArrangeOffsetSize","directionChanged","contentScrollSizeChanged","overflowAmount","overflowAmountChanged","overflow","overflowChanged","adjustDirection","viewportStyle","marginTop","marginRight","marginLeft","contentStyle","borderTop","borderRight","borderLeft","xVisible","xVisibleBehavior","yVisible","yVisibleBehavior","animationStartEventName","scrollEventName","scrollAmount","directionIsRTLMap","isRTL","domRectHasDimensions","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","currVal","updateResizeObserverContentRectCache","onSizeChangedCallbackProxy","sizeChangedContext","hasDirectionCache","skip","pop","contentRect","doDirectionScroll","rtl","appearCallback","directionIsRTLCache","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionIsRTLCache","event","directionIsRTLCacheValues","right","_getCurrentCacheValues","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","ioEntryOrSize","isIntersecting","intersectionRatio","updateHeightIntrinsicCache","getCurrentHeightIntrinsicCache","intersectionObserverInstance","entries","last","root","newSize","heightIntrinsicCache","createEventContentChange","eventContentChange","map","eventContentChangeRef","addEvent","entry","newEntry","registerEvent","clear","_updateElements","getElements","eventElmList","elements","newEventContentChange","createDOMObserver","isConnected","_observeContent","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetChange","_ignoreTargetAttrChange","_ignoreContentChange","Map","updateEventContentChangeElements","destroyEventContentChange","updateEventContentChange","finalAttributes","finalStyleChangingAttributes","observedAttributes","concat","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","targetAttrChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","_disconnect","_updateEventContentChange","takeRecords","attrs","directionIsRTLCacheValuesFallback","heightIntrinsicCacheValuesFallback","createLifecycleHub","structureSetup","addEnvironmentListener","removeEnvironmentListener","lifecycles","instance","runLifecycles","finalDirectionIsRTL","finalHeightIntrinsic","lifecycle","adaptiveSizeChanged","adaptiveHostMutation","adaptiveContentMutation","onSizeChanged","sizeChanged","onTrinsicChanged","onHostMutation","requestAnimationFrame","onContentMutation","hostMutationObserver","contentMutationObserver","updating","elementEvents","updateAll","envUpdateListener","log","numberAllowedValues","oTypes","number","stringArrayNullAllowedValues","null","booleanTrueTemplate","boolean","booleanFalseTemplate","resizeAllowedValues","overflowAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","defaultOptionsWithTemplate","resize","paddingAbsolute","contentMutationDebounce","hostMutationDebounce","resizeDebounce","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","clickScroll","touch","textarea","dynWidth","dynHeight","inheritedAttrs","nativeScrollbarsOverlaid","show","initialize","optionsTemplate","defaultOptions","OverlayScrollbars","extensions","currentOptions","newOptions","_changedOptions"],"mappings":"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"}