{"version":3,"file":"overlayscrollbars.js","sources":["../src/support/cache.ts","../src/support/utils/types.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/attribute.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/dom/class.ts","../src/support/utils/equal.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/dom/offset.ts","../src/support/eventListeners.ts","../src/setups/setups.ts","../src/classnames.ts","../src/options.ts","../src/environment.ts","../src/setups/structureSetup/structureSetup.elements.ts","../src/setups/structureSetup/updateSegments/trinsicUpdateSegment.ts","../src/setups/structureSetup/updateSegments/paddingUpdateSegment.ts","../src/setups/structureSetup/updateSegments/overflowUpdateSegment.ts","../src/setups/structureSetup/structureSetup.update.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/setups/structureSetup/structureSetup.observers.ts","../src/setups/structureSetup/structureSetup.ts","../src/setups/scrollbarsSetup/scrollbarsSetup.elements.ts","../src/setups/scrollbarsSetup/scrollbarsSetup.ts","../src/plugins/plugins.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/plugins/optionsValidation/validation.ts","../src/plugins/optionsValidation/optionsValidation.ts","../src/instances.ts","../src/eventListeners.ts","../src/overlayscrollbars.ts"],"sourcesContent":["export interface CacheOptions<Value> {\r\n  // initial value of _value.\r\n  _initialValue: Value;\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<Value>;\r\n  // If true always updates _value and _previous, otherwise they update only when they changed.\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport type CacheValues<T> = [value: T, changed: boolean, previous?: T];\r\n\r\nexport type EqualCachePropFunction<Value> = (currentVal: Value, newVal: Value) => boolean;\r\n\r\nexport type CacheUpdater<Value> = (current: Value, previous?: Value) => Value;\r\n\r\nexport type UpdateCacheContextual<Value> = (newValue: Value, force?: boolean) => CacheValues<Value>;\r\n\r\nexport type UpdateCache<Value> = (force?: boolean) => CacheValues<Value>;\r\n\r\nexport type GetCurrentCache<Value> = (force?: boolean) => CacheValues<Value>;\r\n\r\nexport type Cache<Value> = [UpdateCache<Value>, GetCurrentCache<Value>];\r\n\r\nexport type CacheContextual<Value> = [UpdateCacheContextual<Value>, GetCurrentCache<Value>];\r\n\r\nexport function createCache<Value>(options: CacheOptions<Value>): CacheContextual<Value>;\r\nexport function createCache<Value>(\r\n  options: CacheOptions<Value>,\r\n  update: CacheUpdater<Value>\r\n): Cache<Value>;\r\nexport function createCache<Value>(\r\n  options: CacheOptions<Value>,\r\n  update?: CacheUpdater<Value>\r\n): CacheContextual<Value> | Cache<Value> {\r\n  const { _initialValue, _equal, _alwaysUpdateValues } = options;\r\n  let _value: Value = _initialValue;\r\n  let _previous: Value | undefined;\r\n\r\n  const cacheUpdateContextual: UpdateCacheContextual<Value> = (newValue, force?) => {\r\n    const curr = _value;\r\n\r\n    const newVal = newValue;\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return [_value, changed, _previous];\r\n  };\r\n  const cacheUpdateIsolated: UpdateCache<Value> = (force?) =>\r\n    cacheUpdateContextual(update!(_value, _previous), force);\r\n\r\n  const getCurrentCache: GetCurrentCache<Value> = (force?: boolean) => [\r\n    _value,\r\n    !!force, // changed\r\n    _previous,\r\n  ];\r\n\r\n  return [update ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache] as\r\n    | CacheContextual<Value>\r\n    | Cache<Value>;\r\n}\r\n","import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) =>\r\n  isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: any[]) => any {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat)\r\n    ? length > 0 && isObject(obj)\r\n      ? length - 1 in obj\r\n      : true\r\n    : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(\r\n  obj: PlainObject,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: T[], item: T, fromIndex?: number): number =>\r\n  arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: T[], items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): T[] => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items)\r\n    ? Array.prototype.push.apply(array, items as T[])\r\n    : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr?: ArrayLike<T> | Set<T>) => {\r\n  if (Array.from && arr) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: T[] = [];\r\n\r\n  if (arr instanceof Set) {\r\n    arr.forEach((value) => {\r\n      push(result, value);\r\n    });\r\n  } else {\r\n    each(arr, (elm) => {\r\n      push(result, elm);\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: any[] | null | undefined): boolean =>\r\n  !!array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, args?: any[]): void => {\r\n  // eslint-disable-next-line prefer-spread\r\n  const runFn = (fn: RunEachItem) => fn && fn.apply(undefined, args || []);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean =>\r\n  Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W\r\n): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W,\r\n  object4: X\r\n): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W,\r\n  object4: X,\r\n  object5: Y\r\n): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(\r\n  elm: HTMLElement | null,\r\n  attrName: string,\r\n  value?: string\r\n): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | false | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> =>\r\n  elm ? from(elm.childNodes) : [];\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (\r\n  elm: InputElementType,\r\n  highBoundarySelector: string,\r\n  deepBoundarySelector: string\r\n): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | false | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (\r\n  parentElm: Node | false | null | undefined,\r\n  preferredAnchor: Node | null | undefined,\r\n  insertedElms: NodeCollection\r\n): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (\r\n  node: Node | null | undefined,\r\n  insertedNodes: NodeCollection\r\n): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = [\r\n  'WebKit',\r\n  'Moz',\r\n  'O',\r\n  'MS',\r\n  'webkit',\r\n  'moz',\r\n  'o',\r\n  'ms',\r\n];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without it, or and empty string if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n\r\n    // eslint-disable-next-line no-return-assign\r\n    return !(result = resultPossibilities.find(\r\n      (resultPossibility: string) => elmStyle[resultPossibility] !== undefined\r\n    ));\r\n  });\r\n\r\n  // eslint-disable-next-line no-return-assign\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported without it, or an empty string if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  // eslint-disable-next-line no-return-assign\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>(\r\n  'IntersectionObserver'\r\n);\r\nexport const ResizeObserverConstructor = jsAPI<typeof ResizeObserver>('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | false | null | undefined,\r\n  className: string,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | false | null | undefined, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | false | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n * @returns A function which removes the added class name(s).\r\n */\r\nexport const addClass = (\r\n  elm: Element | false | null | undefined,\r\n  className: string\r\n): (() => void) => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n  return removeClass.bind(0, elm, className);\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (\r\n  classNameA: string | null | undefined,\r\n  classNameB: string | null | undefined\r\n) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(\r\n  a: T | undefined,\r\n  b: T | undefined,\r\n  props: Array<keyof T>,\r\n  propMutation?: ((value: any) => any) | null | false\r\n): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      const compareA = propMutation ? propMutation(a[prop]) : a[prop];\r\n      const compareB = propMutation ? propMutation(b[prop]) : b[prop];\r\n      if (compareA !== compareB) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = <T>(a?: WH<T>, b?: WH<T>) => equal<WH<T>>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = <T>(a?: XY<T>, b?: XY<T>) => equal<XY<T>>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n\r\n/**\r\n * Compares two DOM Rects for their equality of their width and height properties\r\n * Also returns false if one of the DOM Rects is undefined or null.\r\n * @param a DOM Rect a.\r\n * @param b DOM Rect b.\r\n * @param round Whether the values should be rounded.\r\n */\r\nexport const equalBCRWH = (a?: DOMRect, b?: DOMRect, round?: boolean) =>\r\n  equal<DOMRect>(a, b, ['width', 'height'], round && ((value) => Math.round(value)));\r\n","import { isNumber, isFunction } from 'support/utils/types';\r\nimport { from } from 'support/utils/array';\r\nimport { rAF, cAF } from 'support/compatibility/apis';\r\n\r\nconst clearTimeouts = (id: number | undefined) => {\r\n  id && window.clearTimeout(id);\r\n  id && cAF!(id);\r\n};\r\n\r\ntype DebounceTiming = number | false | null | undefined;\r\n\r\nexport interface DebounceOptions<FunctionToDebounce extends (...args: any) => any> {\r\n  /**\r\n   * The timeout for debouncing. If null, no debounce is applied.\r\n   */\r\n  _timeout?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * A maximum amount of ms. before the function will be called even with debounce.\r\n   */\r\n  _maxDelay?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * Function which merges parameters for each canceled debounce.\r\n   * If parameters can't be merged the function will return null, otherwise it returns the merged parameters.\r\n   */\r\n  _mergeParams?: (\r\n    prev: Parameters<FunctionToDebounce>,\r\n    curr: Parameters<FunctionToDebounce>\r\n  ) => Parameters<FunctionToDebounce> | false | null | undefined;\r\n}\r\n\r\nexport interface Debounced<FunctionToDebounce extends (...args: any) => any> {\r\n  (...args: Parameters<FunctionToDebounce>): ReturnType<FunctionToDebounce>;\r\n  _flush(): void;\r\n}\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param options Options for debouncing.\r\n */\r\nexport const debounce = <FunctionToDebounce extends (...args: any) => any>(\r\n  functionToDebounce: FunctionToDebounce,\r\n  options?: DebounceOptions<FunctionToDebounce>\r\n): Debounced<FunctionToDebounce> => {\r\n  let timeoutId: number | undefined;\r\n  let maxTimeoutId: number | undefined;\r\n  let prevArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  let latestArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  const { _timeout, _maxDelay, _mergeParams } = options || {};\r\n  const setT = window.setTimeout;\r\n\r\n  const invokeFunctionToDebounce = function (args: IArguments) {\r\n    clearTimeouts(timeoutId);\r\n    clearTimeouts(maxTimeoutId);\r\n    maxTimeoutId = timeoutId = prevArguments = undefined;\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  const mergeParms = (\r\n    curr: Parameters<FunctionToDebounce>\r\n  ): Parameters<FunctionToDebounce> | false | null | undefined =>\r\n    _mergeParams && prevArguments ? _mergeParams(prevArguments, curr) : curr;\r\n\r\n  const flush = () => {\r\n    /* istanbul ignore next */\r\n    if (timeoutId) {\r\n      invokeFunctionToDebounce(mergeParms(latestArguments!) || latestArguments!);\r\n    }\r\n  };\r\n\r\n  const debouncedFn = function () {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    const args: Parameters<FunctionToDebounce> = from(arguments) as Parameters<FunctionToDebounce>;\r\n    const finalTimeout = isFunction(_timeout) ? _timeout() : _timeout;\r\n    const hasTimeout = isNumber(finalTimeout) && finalTimeout >= 0;\r\n\r\n    if (hasTimeout) {\r\n      const finalMaxWait = isFunction(_maxDelay) ? _maxDelay() : _maxDelay;\r\n      const hasMaxWait = isNumber(finalMaxWait) && finalMaxWait >= 0;\r\n      const setTimeoutFn = finalTimeout > 0 ? setT : rAF!;\r\n      const mergeParamsResult = mergeParms(args);\r\n      const invokedArgs = mergeParamsResult || args;\r\n      const boundInvoke = invokeFunctionToDebounce.bind(0, invokedArgs);\r\n\r\n      // if (!mergeParamsResult) {\r\n      //   invokeFunctionToDebounce(prevArguments || args);\r\n      // }\r\n\r\n      clearTimeouts(timeoutId);\r\n      // @ts-ignore\r\n      timeoutId = setTimeoutFn(boundInvoke, finalTimeout as number) as number;\r\n\r\n      if (hasMaxWait && !maxTimeoutId) {\r\n        maxTimeoutId = setT(flush, finalMaxWait as number);\r\n      }\r\n\r\n      prevArguments = latestArguments = invokedArgs;\r\n    } else {\r\n      invokeFunctionToDebounce(args);\r\n    }\r\n  };\r\n  debouncedFn._flush = flush;\r\n\r\n  return debouncedFn as Debounced<FunctionToDebounce>;\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray, isUndefined } from 'support/utils/types';\r\nimport { PlainObject, StyleObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\nconst cssNumber = {\r\n  // animationiterationcount: 1,\r\n  // columncount: 1,\r\n  // fillopacity: 1,\r\n  // flexgrow: 1,\r\n  // flexshrink: 1,\r\n  // fontweight: 1,\r\n  // lineheight: 1,\r\n  // order: 1,\r\n  // orphans: 1,\r\n  // widows: 1,\r\n  // zoom: 1,\r\n  opacity: 1,\r\n  zindex: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number =>\r\n  !cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val;\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null\r\n    ? computedStyle[prop] || computedStyle.getPropertyValue(prop)\r\n    : elm.style[prop];\r\nconst setCSSVal = (\r\n  elm: HTMLElement | false | null | undefined,\r\n  prop: string,\r\n  val: string | number\r\n): void => {\r\n  try {\r\n    if (elm) {\r\n      const { style: elmStyle } = elm;\r\n      if (!isUndefined(elmStyle[prop])) {\r\n        elmStyle[prop] = adaptCSSVal(prop, val);\r\n      } else {\r\n        elmStyle.setProperty(prop, val as string);\r\n      }\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps>\r\n): void;\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: string\r\n): string;\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: Array<string> | string\r\n): { [key: string]: string };\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps> | Array<string> | string\r\n): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns the top right bottom left values of the passed css property.\r\n * @param elm The element of which the values shall be returned.\r\n * @param propertyPrefix The css property prefix. (e.g. \"border\")\r\n * @param propertySuffix The css property suffix. (e.g. \"width\")\r\n */\r\nexport const topRightBottomLeft = (\r\n  elm?: HTMLElement | false | null | undefined,\r\n  propertyPrefix?: string,\r\n  propertySuffix?: string\r\n): TRBL => {\r\n  const finalPrefix = propertyPrefix ? `${propertyPrefix}-` : '';\r\n  const finalSuffix = propertySuffix ? `-${propertySuffix}` : '';\r\n  const top = `${finalPrefix}top${finalSuffix}`;\r\n  const right = `${finalPrefix}right${finalSuffix}`;\r\n  const bottom = `${finalPrefix}bottom${finalSuffix}`;\r\n  const left = `${finalPrefix}left${finalSuffix}`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { style } from 'support/dom/style';\r\n\r\nexport interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean =>\r\n  !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the fractional- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the fractional- width and height shall be returned.\r\n */\r\nexport const fractionalSize = (elm: HTMLElement | null | undefined): WH => {\r\n  const cssHeight = parseFloat(style(elm, 'height')) || 0;\r\n  const cssWidth = parseFloat(style(elm, 'height')) || 0;\r\n  return {\r\n    w: cssWidth - Math.round(cssWidth),\r\n    h: cssHeight - Math.round(cssHeight),\r\n  };\r\n};\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null | undefined): boolean =>\r\n  elm ? elementHasDimensions(elm as HTMLElement) : false;\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  capture?: boolean\r\n): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event): void => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event): void => evt.preventDefault();\r\n\r\n/**\r\n * Shorthand for the stopPropagation and preventDefault event Method.\r\n * @param evt The event of which the stopPropagation and preventDefault methods shall be called.\r\n */\r\nexport const stopAndPrevent = (evt: Event): void =>\r\n  (stopPropagation(evt) as undefined) || (preventDefault(evt) as undefined);\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","import { isArray } from 'support/utils/types';\r\nimport { keys } from 'support/utils/object';\r\nimport { each, from } from 'support/utils/array';\r\n\r\nexport type EventListener<\r\n  NameArgsMap extends Record<string, any>,\r\n  Name extends Extract<keyof NameArgsMap, string> = Extract<keyof NameArgsMap, string>\r\n> = (...args: NameArgsMap[Name] extends undefined ? [] : [args: NameArgsMap[Name]]) => void;\r\n\r\nexport type EventListenerGroup<\r\n  NameArgsMap extends Record<string, any>,\r\n  Name extends Extract<keyof NameArgsMap, string> = Extract<keyof NameArgsMap, string>\r\n> = EventListener<NameArgsMap, Name> | EventListener<NameArgsMap, Name>[];\r\n\r\nexport type AddEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name: Name,\r\n  listener: EventListenerGroup<NameArgsMap, Name>\r\n) => () => void;\r\n\r\nexport type RemoveEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name?: Name,\r\n  listener?: EventListenerGroup<NameArgsMap, Name>\r\n) => void;\r\n\r\nexport type TriggerEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name: Name,\r\n  ...args: NameArgsMap[Name] extends undefined ? [] : [args: NameArgsMap[Name]]\r\n) => void;\r\n\r\nexport type InitialEventListeners<NameArgsMap extends Record<string, any>> = {\r\n  [K in Extract<keyof NameArgsMap, string>]?: EventListenerGroup<NameArgsMap, K>;\r\n};\r\n\r\nconst manageListener = <NameArgsMap extends Record<string, any>>(\r\n  callback: (listener?: EventListener<NameArgsMap>) => void,\r\n  listener?: EventListener<NameArgsMap> | EventListener<NameArgsMap>[]\r\n) => {\r\n  each(isArray(listener) ? listener : [listener], callback);\r\n};\r\n\r\nexport const createEventListenerHub = <NameArgsMap extends Record<string, any>>(\r\n  initialEventListeners?: InitialEventListeners<NameArgsMap>\r\n): [\r\n  AddEventListener<NameArgsMap>,\r\n  RemoveEventListener<NameArgsMap>,\r\n  TriggerEventListener<NameArgsMap>\r\n] => {\r\n  const events = new Map<Extract<keyof NameArgsMap, string>, Set<EventListener<NameArgsMap>>>();\r\n  const removeEvent: RemoveEventListener<NameArgsMap> = (name?, listener?) => {\r\n    if (name) {\r\n      const eventSet = events.get(name);\r\n      manageListener((currListener) => {\r\n        if (eventSet) {\r\n          eventSet[currListener ? 'delete' : 'clear'](currListener!);\r\n        }\r\n      }, listener as EventListenerGroup<NameArgsMap> | undefined);\r\n    } else {\r\n      events.forEach((eventSet) => {\r\n        eventSet.clear();\r\n      });\r\n      events.clear();\r\n    }\r\n  };\r\n  const addEvent: AddEventListener<NameArgsMap> = (name, listener) => {\r\n    const eventSet = events.get(name) || new Set();\r\n    events.set(name, eventSet);\r\n\r\n    manageListener((currListener) => {\r\n      currListener && eventSet.add(currListener);\r\n    }, listener as EventListenerGroup<NameArgsMap>);\r\n\r\n    return removeEvent.bind(0, name as any, listener as EventListenerGroup<NameArgsMap>);\r\n  };\r\n  const triggerEvent: TriggerEventListener<NameArgsMap> = (name, args?) => {\r\n    const eventSet = events.get(name);\r\n\r\n    each(from(eventSet), (event) => {\r\n      if (args) {\r\n        (event as (args: NameArgsMap[Extract<keyof NameArgsMap, string>]) => void)(args as any);\r\n      } else {\r\n        (event as () => void)();\r\n      }\r\n    });\r\n  };\r\n\r\n  const initialListenerKeys = keys(initialEventListeners) as Extract<keyof NameArgsMap, string>[];\r\n  each(initialListenerKeys, (key) => {\r\n    addEvent(key, initialEventListeners![key] as any);\r\n  });\r\n\r\n  return [addEvent, removeEvent, triggerEvent];\r\n};\r\n","import { assignDeep, hasOwnProperty } from 'support';\r\nimport type { OSOptions, ReadonlyOSOptions } from 'options';\r\nimport type { PartialOptions } from 'typings';\r\n\r\nexport type SetupElements<T extends Record<string, any>> = [elements: T, destroy: () => void];\r\n\r\nexport type SetupUpdate<T = void> = (\r\n  changedOptions: PartialOptions<OSOptions>,\r\n  force?: boolean\r\n) => T;\r\n\r\nexport type SetupUpdateCheckOption = <T>(path: string) => [value: T, changed: boolean];\r\n\r\nexport type SetupUpdateSegment<Hints extends Record<string, any>> = (\r\n  updateHints: Hints,\r\n  checkOption: SetupUpdateCheckOption,\r\n  force: boolean\r\n) => Partial<Hints> | void;\r\n\r\nexport type SetupState<T extends Record<string, any>> = [\r\n  get: () => T,\r\n  set: (newState: Partial<T>) => void\r\n];\r\n\r\nexport type Setup<DynamicState, StaticState extends Record<string, any> = Record<string, any>> = [\r\n  update: SetupUpdate,\r\n  state: (() => DynamicState) & StaticState,\r\n  destroy: () => void\r\n];\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj\r\n    ? path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj)\r\n    : undefined;\r\n\r\nexport const createOptionCheck =\r\n  (\r\n    options: ReadonlyOSOptions,\r\n    changedOptions: PartialOptions<OSOptions>,\r\n    force?: boolean\r\n  ): SetupUpdateCheckOption =>\r\n  (path: string) =>\r\n    [getPropByPath(options, path), force || getPropByPath(changedOptions, path) !== undefined];\r\n\r\nexport const createState = <S>(initialState: S): SetupState<S> => {\r\n  let state: S = initialState;\r\n  return [\r\n    () => state,\r\n    (newState: Partial<S>) => {\r\n      state = assignDeep({}, state, newState);\r\n    },\r\n  ];\r\n};\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameViewportArrange = `${classNameViewport}-arrange`;\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n\r\nexport const classNameScrollbar = 'os-scrollbar';\r\nexport const classNameScrollbarHorizontal = `${classNameScrollbar}-horizontal`;\r\nexport const classNameScrollbarVertical = `${classNameScrollbar}-vertical`;\r\nexport const classNameScrollbarTrack = 'os-scrollbar-track';\r\nexport const classNameScrollbarHandle = 'os-scrollbar-handle';\r\n","import { assignDeep, each, isObject, keys, isArray, hasOwnProperty, isFunction } from 'support';\r\nimport { PartialOptions, ReadonlyOptions } from 'typings';\r\n\r\nconst stringify = (value: any) =>\r\n  JSON.stringify(value, (_, val) => {\r\n    if (isFunction(val)) {\r\n      throw new Error();\r\n    }\r\n    return val;\r\n  });\r\n\r\nexport type ResizeBehavior = 'none' | 'both' | 'horizontal' | 'vertical';\r\n\r\nexport type OverflowBehavior = 'hidden' | 'scroll' | 'visible' | 'visible-hidden';\r\n\r\nexport type VisibilityBehavior = 'visible' | 'hidden' | 'auto';\r\n\r\nexport type AutoHideBehavior = 'never' | 'scroll' | 'leave' | 'move';\r\n\r\nexport type ScrollBehavior = 'always' | 'ifneeded' | 'never';\r\n\r\nexport type BasicEventCallback = (this: any) => void;\r\n\r\nexport type ScrollEventCallback = (this: any, args?: UIEvent) => void;\r\n\r\nexport type OverflowChangedCallback = (this: any, args?: OverflowChangedArgs) => void;\r\n\r\nexport type OverflowAmountChangedCallback = (this: any, args?: OverflowAmountChangedArgs) => void;\r\n\r\nexport type DirectionChangedCallback = (this: any, args?: DirectionChangedArgs) => void;\r\n\r\nexport type SizeChangedCallback = (this: any, args?: SizeChangedArgs) => void;\r\n\r\nexport type UpdatedCallback = (this: any, args?: UpdatedArgs) => void;\r\n\r\nexport interface OSOptions {\r\n  resize: ResizeBehavior;\r\n  paddingAbsolute: boolean;\r\n  updating: {\r\n    elementEvents: Array<[string, string]> | null;\r\n    attributes: string[] | null;\r\n    debounce: number | [number, number] | null;\r\n  };\r\n  overflow: {\r\n    x: OverflowBehavior;\r\n    y: OverflowBehavior;\r\n  };\r\n  scrollbars: {\r\n    visibility: VisibilityBehavior;\r\n    autoHide: AutoHideBehavior;\r\n    autoHideDelay: number;\r\n    dragScroll: boolean;\r\n    clickScroll: boolean;\r\n    touch: boolean;\r\n  };\r\n  textarea: {\r\n    dynWidth: boolean;\r\n    dynHeight: boolean;\r\n    inheritedAttrs: string | Array<string> | null;\r\n  };\r\n  nativeScrollbarsOverlaid: {\r\n    show: boolean;\r\n    initialize: boolean;\r\n  };\r\n  callbacks: {\r\n    onUpdated: (() => any) | null;\r\n  };\r\n  /*\r\n  callbacks?: {\r\n    onInitialized?: BasicEventCallback | null;\r\n    onInitializationWithdrawn?: BasicEventCallback | null;\r\n    onDestroyed?: BasicEventCallback | null;\r\n    onScrollStart?: ScrollEventCallback | null;\r\n    onScroll?: ScrollEventCallback | null;\r\n    onScrollStop?: ScrollEventCallback | null;\r\n    onOverflowChanged?: OverflowChangedCallback | null;\r\n    onOverflowAmountChanged?: OverflowAmountChangedCallback | null;\r\n    onDirectionChanged?: DirectionChangedCallback | null;\r\n    onContentSizeChanged?: SizeChangedCallback | null;\r\n    onHostSizeChanged?: SizeChangedCallback | null;\r\n    onUpdated?: UpdatedCallback | null;\r\n  };\r\n  */\r\n}\r\n\r\nexport type ReadonlyOSOptions = ReadonlyOptions<OSOptions>;\r\n\r\nexport interface OverflowChangedArgs {\r\n  x: boolean;\r\n  y: boolean;\r\n  xScrollable: boolean;\r\n  yScrollable: boolean;\r\n  clipped: boolean;\r\n}\r\n\r\nexport interface OverflowAmountChangedArgs {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface DirectionChangedArgs {\r\n  isRTL: number;\r\n  dir: string;\r\n}\r\n\r\nexport interface SizeChangedArgs {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface UpdatedArgs {\r\n  forced: boolean;\r\n}\r\n\r\nexport const defaultOptions: OSOptions = {\r\n  resize: 'none', // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: false, // true || false\r\n  updating: {\r\n    elementEvents: [['img', 'load']], // array of tuples || null\r\n    attributes: null,\r\n    debounce: [0, 33], // number || number array || null\r\n  },\r\n  overflow: {\r\n    x: 'scroll', // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: 'scroll', // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  scrollbars: {\r\n    visibility: 'auto', // visible || hidden || auto || v || h || a\r\n    autoHide: 'never', // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: 800, // number\r\n    dragScroll: true, // true || false\r\n    clickScroll: false, // true || false\r\n    touch: true, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: false, // true || false\r\n    dynHeight: false, // true || false\r\n    inheritedAttrs: ['style', 'class'], // string || array || null\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: false, // true || false\r\n    initialize: false, // true || false\r\n  },\r\n  callbacks: {\r\n    onUpdated: null,\r\n  },\r\n};\r\n\r\nexport const getOptionsDiff = <T>(\r\n  currOptions: T,\r\n  newOptions: PartialOptions<T>\r\n): PartialOptions<T> => {\r\n  const diff: PartialOptions<T> = {};\r\n  const optionsKeys = keys(newOptions).concat(keys(currOptions));\r\n\r\n  each(optionsKeys, (optionKey) => {\r\n    const currOptionValue = currOptions[optionKey];\r\n    const newOptionValue = newOptions[optionKey];\r\n\r\n    if (isObject(currOptionValue) && isObject(newOptionValue)) {\r\n      assignDeep((diff[optionKey] = {}), getOptionsDiff(currOptionValue, newOptionValue));\r\n    } else if (hasOwnProperty(newOptions, optionKey) && newOptionValue !== currOptionValue) {\r\n      let isDiff = true;\r\n\r\n      if (isArray(currOptionValue) || isArray(newOptionValue)) {\r\n        try {\r\n          if (stringify(currOptionValue) === stringify(newOptionValue)) {\r\n            isDiff = false;\r\n          }\r\n        } catch {}\r\n      }\r\n\r\n      if (isDiff) {\r\n        diff[optionKey] = newOptionValue;\r\n      }\r\n    }\r\n  });\r\n\r\n  return diff;\r\n};\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  fractionalSize,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalBCRWH,\r\n  getBoundingClientRect,\r\n  assignDeep,\r\n  cssProperty,\r\n  createCache,\r\n  equalXY,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { OSOptions, defaultOptions } from 'options';\r\nimport { OSTargetElement, PartialOptions } from 'typings';\r\n\r\ntype StructureInitializationStrategyElementFn<T> =\r\n  | ((target: OSTargetElement) => HTMLElement | T)\r\n  | T;\r\n\r\ntype ScrollbarsInitializationStrategyElementFn<T> =\r\n  | ((target: OSTargetElement, host: HTMLElement, viewport: HTMLElement) => HTMLElement | T)\r\n  | T;\r\n\r\n/**\r\n * A Static element is an element which MUST be generated.\r\n * If null or undefined (or the returned result is null or undefined), the initialization function is generatig the element, otherwise\r\n * the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationStrategyStaticElement = StructureInitializationStrategyElementFn<\r\n  null | undefined\r\n>;\r\n\r\n/**\r\n * A Dynamic element is an element which CAN be generated.\r\n * If boolean (or the returned result is boolean), the generation of the element is forced (or not).\r\n * If the function returns and element, the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationStrategyDynamicElement =\r\n  StructureInitializationStrategyElementFn<boolean>;\r\n\r\nexport interface StructureInitializationStrategy {\r\n  _host: StructureInitializationStrategyStaticElement;\r\n  _viewport: StructureInitializationStrategyStaticElement;\r\n  _padding: StructureInitializationStrategyDynamicElement;\r\n  _content: StructureInitializationStrategyDynamicElement;\r\n}\r\n\r\nexport interface ScrollbarsInitializationStrategy {\r\n  /**\r\n   * The scrollbars slot.  If null or undefined (or the returned result is null or undefined), the initialization function is deciding the element, otherwise\r\n   * the element returned by the function acts as the scrollbars slot.\r\n   */\r\n  _scrollbarsSlot: ScrollbarsInitializationStrategyElementFn<null | undefined>;\r\n}\r\n\r\nexport interface InitializationStrategy\r\n  extends StructureInitializationStrategy,\r\n    ScrollbarsInitializationStrategy {}\r\n\r\nexport type DefaultInitializationStrategy = {\r\n  [K in keyof InitializationStrategy]: Extract<\r\n    InitializationStrategy[K],\r\n    boolean | null | undefined\r\n  >;\r\n};\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  readonly _nativeScrollbarSize: XY;\r\n  readonly _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  readonly _nativeScrollbarStyling: boolean;\r\n  readonly _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  readonly _flexboxGlue: boolean;\r\n  readonly _cssCustomProperties: boolean;\r\n  readonly _defaultInitializationStrategy: DefaultInitializationStrategy;\r\n  readonly _defaultDefaultOptions: OSOptions;\r\n  _addListener(listener: OnEnvironmentChanged): () => void;\r\n  _getInitializationStrategy(): InitializationStrategy;\r\n  _setInitializationStrategy(newInitializationStrategy: Partial<InitializationStrategy>): void;\r\n  _getDefaultOptions(): OSOptions;\r\n  _setDefaultOptions(newDefaultOptions: PartialOptions<OSOptions>): void;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst getNativeScrollbarSize = (\r\n  body: HTMLElement,\r\n  measureElm: HTMLElement,\r\n  measureElmChild: HTMLElement\r\n): XY => {\r\n  appendChildren(body, measureElm);\r\n\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n  const fSize = fractionalSize(measureElmChild);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h + fSize.h,\r\n    y: oSize.w - cSize.w + fSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  const revertClass = addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, cssProperty('scrollbar-width')) === 'none' ||\r\n      window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') ===\r\n        'none';\r\n  } catch (ex) {}\r\n  revertClass();\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (\r\n  parentElm: HTMLElement,\r\n  childElm: HTMLElement\r\n): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  const revertFbxGlue = addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const minOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMin = equalBCRWH(minOffsetsize, minOffsetsizeParent, true);\r\n\r\n  const revertFbxGlueMax = addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const maxOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMax = equalBCRWH(maxOffsetsize, maxOffsetsizeParent, true);\r\n\r\n  revertFbxGlue();\r\n  revertFbxGlueMax();\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst getDefaultInitializationStrategy = (\r\n  nativeScrollbarStyling: boolean\r\n): DefaultInitializationStrategy => ({\r\n  _host: null,\r\n  _viewport: null,\r\n  _padding: !nativeScrollbarStyling,\r\n  _content: false,\r\n  _scrollbarsSlot: null,\r\n});\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const [updateNativeScrollbarSizeCache, getNativeScrollbarSizeCache] = createCache({\r\n    _initialValue: getNativeScrollbarSize(body, envElm, envChildElm),\r\n    _equal: equalXY,\r\n  });\r\n  const [nativeScrollbarSize] = getNativeScrollbarSizeCache();\r\n  const nativeScrollbarStyling = getNativeScrollbarStyling(envElm);\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n  const initializationStrategy = getDefaultInitializationStrategy(nativeScrollbarStyling);\r\n  const defaultDefaultOptions = assignDeep({}, defaultOptions);\r\n\r\n  const env: Environment = {\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _cssCustomProperties: style(envElm, 'zIndex') === '-1',\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener) {\r\n      onChangedListener.add(listener);\r\n      return () => onChangedListener.delete(listener);\r\n    },\r\n    _getInitializationStrategy: assignDeep<InitializationStrategy, InitializationStrategy>.bind(\r\n      0,\r\n      {} as InitializationStrategy,\r\n      initializationStrategy\r\n    ),\r\n    _setInitializationStrategy(newInitializationStrategy) {\r\n      assignDeep(initializationStrategy, newInitializationStrategy);\r\n    },\r\n    _getDefaultOptions: assignDeep<OSOptions, OSOptions>.bind(\r\n      0,\r\n      {} as OSOptions,\r\n      defaultDefaultOptions\r\n    ),\r\n    _setDefaultOptions(newDefaultOptions) {\r\n      assignDeep(defaultDefaultOptions, newDefaultOptions);\r\n    },\r\n    _defaultInitializationStrategy: assignDeep({}, initializationStrategy),\r\n    _defaultDefaultOptions: assignDeep({}, defaultDefaultOptions),\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const [scrollbarSize, scrollbarSizeChanged] = updateNativeScrollbarSizeCache(\r\n            getNativeScrollbarSize(body, envElm, envChildElm)\r\n          );\r\n\r\n          assignDeep(environmentInstance._nativeScrollbarSize, scrollbarSize); // keep the object same!\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSizeChanged) {\r\n            runEach(onChangedListener);\r\n          }\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  indexOf,\r\n  removeElements,\r\n  removeClass,\r\n  push,\r\n  runEach,\r\n  insertBefore,\r\n  attr,\r\n  isBoolean,\r\n  isFunction,\r\n  keys,\r\n} from 'support';\r\nimport {\r\n  classNameHost,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameViewportArrange,\r\n  classNameContent,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport {\r\n  getEnvironment,\r\n  StructureInitializationStrategyStaticElement,\r\n  StructureInitializationStrategyDynamicElement,\r\n} from 'environment';\r\nimport { OSTarget, OSTargetElement, StructureInitialization } from 'typings';\r\n\r\nexport type StructureSetupElements = [targetObj: StructureSetupElementsObj, destroy: () => void];\r\n\r\nexport interface StructureSetupElementsObj {\r\n  _target: OSTargetElement;\r\n  _host: HTMLElement;\r\n  _viewport: HTMLElement;\r\n  _padding: HTMLElement | false;\r\n  _content: HTMLElement | false;\r\n  _viewportArrange: HTMLStyleElement | false;\r\n  // ctx ----\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: Document;\r\n  _targetIsElm: boolean;\r\n}\r\n\r\nlet contentArrangeCounter = 0;\r\n\r\nconst unwrap = (elm: HTMLElement | false | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nconst createUniqueViewportArrangeElement = (): HTMLStyleElement | false => {\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _cssCustomProperties } =\r\n    getEnvironment();\r\n  /* istanbul ignore next */\r\n  const create =\r\n    !_cssCustomProperties &&\r\n    !_nativeScrollbarStyling &&\r\n    (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const result = create ? document.createElement('style') : false;\r\n\r\n  if (result) {\r\n    attr(result, 'id', `${classNameViewportArrange}-${contentArrangeCounter}`);\r\n    contentArrangeCounter++;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst staticCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | undefined,\r\n  strategy: StructureInitializationStrategyStaticElement,\r\n  elementClass: string\r\n): HTMLElement => {\r\n  const result =\r\n    initializationValue ||\r\n    (isFunction(strategy) ? strategy(target) : (strategy as null | undefined));\r\n  return result || createDiv(elementClass);\r\n};\r\n\r\nconst dynamicCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | boolean | undefined,\r\n  strategy: StructureInitializationStrategyDynamicElement,\r\n  elementClass: string\r\n): HTMLElement | false => {\r\n  const takeInitializationValue = isBoolean(initializationValue) || initializationValue;\r\n  const result = takeInitializationValue\r\n    ? (initializationValue as boolean | HTMLElement)\r\n    : isFunction(strategy)\r\n    ? strategy(target)\r\n    : strategy;\r\n\r\n  return result === true ? createDiv(elementClass) : result;\r\n};\r\n\r\nexport const createStructureSetupElements = (target: OSTarget): StructureSetupElements => {\r\n  const { _getInitializationStrategy, _nativeScrollbarStyling } = getEnvironment();\r\n  const {\r\n    _host: hostInitializationStrategy,\r\n    _viewport: viewportInitializationStrategy,\r\n    _padding: paddingInitializationStrategy,\r\n    _content: contentInitializationStrategy,\r\n  } = _getInitializationStrategy();\r\n  const targetIsElm = isHTMLElement(target);\r\n  const targetStructureInitialization = target as StructureInitialization;\r\n  const targetElement = targetIsElm\r\n    ? (target as OSTargetElement)\r\n    : targetStructureInitialization.target;\r\n  const isTextarea = is(targetElement, 'textarea');\r\n  const isBody = !isTextarea && is(targetElement, 'body');\r\n  const ownerDocument = targetElement!.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const evaluatedTargetObj: StructureSetupElementsObj = {\r\n    _target: targetElement,\r\n    _host: isTextarea\r\n      ? staticCreationFromStrategy(\r\n          targetElement,\r\n          targetStructureInitialization.host,\r\n          hostInitializationStrategy,\r\n          classNameHost\r\n        )\r\n      : (targetElement as HTMLElement),\r\n    _viewport: staticCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.viewport,\r\n      viewportInitializationStrategy,\r\n      classNameViewport\r\n    ),\r\n    _padding: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.padding,\r\n      paddingInitializationStrategy,\r\n      classNamePadding\r\n    ),\r\n    _content: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.content,\r\n      contentInitializationStrategy,\r\n      classNameContent\r\n    ),\r\n    _viewportArrange: createUniqueViewportArrangeElement(),\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n    _targetIsElm: targetIsElm,\r\n  };\r\n  const generatedElements = keys(evaluatedTargetObj).reduce((arr, key: string) => {\r\n    const value = evaluatedTargetObj[key];\r\n    return push(arr, value && !parent(value) ? value : false);\r\n  }, [] as HTMLElement[]);\r\n  const elementIsGenerated = (elm: HTMLElement | false) =>\r\n    elm ? indexOf(generatedElements, elm) > -1 : null;\r\n  const { _target, _host, _padding, _viewport, _content, _viewportArrange } = evaluatedTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextareaHostGenerated = isTextarea && elementIsGenerated(_host);\r\n  const targetContents = isTextarea\r\n    ? _target\r\n    : contents(\r\n        [_content, _viewport, _padding, _host, _target].find(\r\n          (elm) => elementIsGenerated(elm) === false\r\n        )\r\n      );\r\n  const contentSlot = _content || _viewport;\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  appendChildren(contentSlot, targetContents);\r\n  appendChildren(_host, _padding);\r\n  appendChildren(_padding || _host, _viewport);\r\n  appendChildren(_viewport, _content);\r\n\r\n  addClass(_host, classNameHost);\r\n  addClass(_padding, classNamePadding);\r\n  addClass(_viewport, classNameViewport);\r\n  addClass(_content, classNameContent);\r\n\r\n  push(destroyFns, () => {\r\n    if (targetIsElm) {\r\n      appendChildren(_host, contents(contentSlot));\r\n      removeElements(_padding || _viewport);\r\n      removeClass(_host, classNameHost);\r\n    } else {\r\n      if (elementIsGenerated(_content)) {\r\n        unwrap(_content);\r\n      }\r\n      if (elementIsGenerated(_viewport)) {\r\n        unwrap(_viewport);\r\n      }\r\n      if (elementIsGenerated(_padding)) {\r\n        unwrap(_padding);\r\n      }\r\n      removeClass(_host, classNameHost);\r\n      removeClass(_padding, classNamePadding);\r\n      removeClass(_viewport, classNameViewport);\r\n      removeClass(_content, classNameContent);\r\n    }\r\n  });\r\n\r\n  if (_nativeScrollbarStyling) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  }\r\n  if (_viewportArrange) {\r\n    insertBefore(_viewport, _viewportArrange);\r\n    push(destroyFns, removeElements.bind(0, _viewportArrange));\r\n  }\r\n\r\n  return [evaluatedTargetObj, runEach.bind(0, destroyFns)];\r\n};\r\n","import { style } from 'support';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the trinsic behavior of the content element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createTrinsicUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const { _content } = structureSetupElements;\r\n  const [getState] = state;\r\n\r\n  return (updateHints) => {\r\n    const { _heightIntrinsic } = getState();\r\n    const { _heightIntrinsicChanged } = updateHints;\r\n\r\n    if (_heightIntrinsicChanged) {\r\n      style(_content, {\r\n        height: _heightIntrinsic ? '' : '100%',\r\n        display: _heightIntrinsic ? '' : 'inline',\r\n      });\r\n    }\r\n\r\n    return {\r\n      _sizeChanged: _heightIntrinsicChanged,\r\n      _contentMutation: _heightIntrinsicChanged,\r\n    };\r\n  };\r\n};\r\n","import { createCache, topRightBottomLeft, equalTRBL, style, assignDeep } from 'support';\r\nimport { StyleObject } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the padding styling of the padding and viewport element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createPaddingUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const [getState, setState] = state;\r\n  const { _host, _padding, _viewport } = structureSetupElements;\r\n  const [updatePaddingCache, currentPaddingCache] = createCache(\r\n    {\r\n      _equal: equalTRBL,\r\n      _initialValue: topRightBottomLeft(),\r\n    },\r\n    topRightBottomLeft.bind(0, _host, 'padding', '')\r\n  );\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    let [padding, paddingChanged] = currentPaddingCache(force);\r\n    const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n    const { _directionIsRTL } = getState();\r\n    const { _sizeChanged, _contentMutation, _directionChanged } = updateHints;\r\n    const [paddingAbsolute, paddingAbsoluteChanged] = checkOption('paddingAbsolute');\r\n    const contentMutation = !_flexboxGlue && _contentMutation;\r\n\r\n    if (_sizeChanged || paddingChanged || contentMutation) {\r\n      [padding, paddingChanged] = updatePaddingCache(force);\r\n    }\r\n\r\n    const paddingStyleChanged = paddingAbsoluteChanged || _directionChanged || paddingChanged;\r\n\r\n    if (paddingStyleChanged) {\r\n      // if there is no padding element and no scrollbar styling, paddingAbsolute isn't supported\r\n      const paddingRelative = !paddingAbsolute || (!_padding && !_nativeScrollbarStyling);\r\n      const paddingHorizontal = padding.r + padding.l;\r\n      const paddingVertical = padding.t + padding.b;\r\n\r\n      const paddingStyle: StyleObject = {\r\n        marginRight: paddingRelative && !_directionIsRTL ? -paddingHorizontal : 0,\r\n        marginBottom: paddingRelative ? -paddingVertical : 0,\r\n        marginLeft: paddingRelative && _directionIsRTL ? -paddingHorizontal : 0,\r\n        top: paddingRelative ? -padding.t : 0,\r\n        right: paddingRelative ? (_directionIsRTL ? -padding.r : 'auto') : 0,\r\n        left: paddingRelative ? (_directionIsRTL ? 'auto' : -padding.l) : 0,\r\n        width: paddingRelative ? `calc(100% + ${paddingHorizontal}px)` : '',\r\n      };\r\n      const viewportStyle: StyleObject = {\r\n        paddingTop: paddingRelative ? padding.t : 0,\r\n        paddingRight: paddingRelative ? padding.r : 0,\r\n        paddingBottom: paddingRelative ? padding.b : 0,\r\n        paddingLeft: paddingRelative ? padding.l : 0,\r\n      };\r\n\r\n      // if there is no padding element apply the style to the viewport element instead\r\n      style(_padding || _viewport, paddingStyle);\r\n      style(_viewport, viewportStyle);\r\n\r\n      setState({\r\n        _padding: padding,\r\n        _paddingAbsolute: !paddingRelative,\r\n        _viewportPaddingStyle: _padding\r\n          ? viewportStyle\r\n          : assignDeep({}, paddingStyle, viewportStyle),\r\n      });\r\n    }\r\n\r\n    return {\r\n      _paddingStyleChanged: paddingStyleChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  keys,\r\n  attr,\r\n  WH,\r\n  XY,\r\n  style,\r\n  scrollSize,\r\n  fractionalSize,\r\n  CacheValues,\r\n  equalWH,\r\n  addClass,\r\n  removeClass,\r\n  clientSize,\r\n  noop,\r\n  each,\r\n  equalXY,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverflowBehavior } from 'options';\r\nimport { StyleObject } from 'typings';\r\nimport { classNameViewportArrange, classNameViewportScrollbarStyling } from 'classnames';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\ninterface ViewportOverflowState {\r\n  _scrollbarsHideOffset: XY<number>;\r\n  _scrollbarsHideOffsetArrange: XY<boolean>;\r\n  _overflowScroll: XY<boolean>;\r\n}\r\n\r\ntype UndoViewportArrangeResult = [\r\n  () => void, // redoViewportArrange\r\n  ViewportOverflowState?\r\n];\r\n\r\nconst { max, round } = Math;\r\nconst overlaidScrollbarsHideOffset = 42;\r\nconst whCacheOptions = {\r\n  _equal: equalWH,\r\n  _initialValue: { w: 0, h: 0 },\r\n};\r\nconst xyCacheOptions = {\r\n  _equal: equalXY,\r\n  _initialValue: { x: false, y: false },\r\n};\r\nconst setAxisOverflowStyle = (\r\n  horizontal: boolean,\r\n  overflowAmount: number,\r\n  behavior: OverflowBehavior,\r\n  styleObj: StyleObject\r\n) => {\r\n  const overflowKey: keyof StyleObject = horizontal ? 'overflowX' : 'overflowY';\r\n  const behaviorIsVisible = behavior.indexOf('visible') === 0;\r\n  const behaviorIsVisibleHidden = behavior === 'visible-hidden';\r\n  const behaviorIsScroll = behavior === 'scroll';\r\n  const hasOverflow = overflowAmount > 0;\r\n\r\n  if (behaviorIsVisible) {\r\n    styleObj[overflowKey] = 'visible';\r\n  }\r\n  if (behaviorIsScroll && hasOverflow) {\r\n    styleObj[overflowKey] = behavior;\r\n  }\r\n\r\n  return {\r\n    _visible: behaviorIsVisible,\r\n    _behavior: behaviorIsVisibleHidden ? 'hidden' : 'scroll',\r\n  };\r\n};\r\n\r\nconst getOverflowAmount = (\r\n  viewportScrollSize: WH<number>,\r\n  viewportClientSize: WH<number>,\r\n  sizeFraction: WH<number>\r\n) => {\r\n  const condition = (raw: number) => (window.devicePixelRatio % 2 !== 0 ? raw > 1 : raw > 0);\r\n  const amount = {\r\n    w: max(0, viewportScrollSize.w - viewportClientSize.w - max(0, sizeFraction.w)),\r\n    h: max(0, viewportScrollSize.h - viewportClientSize.h - max(0, sizeFraction.h)),\r\n  };\r\n\r\n  return {\r\n    w: condition(amount.w) ? amount.w : 0,\r\n    h: condition(amount.h) ? amount.h : 0,\r\n  };\r\n};\r\n\r\n/**\r\n * Lifecycle with the responsibility to set the correct overflow and scrollbar hiding styles of the viewport element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createOverflowUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const [getState, setState] = state;\r\n  const { _host, _viewport, _viewportArrange } = structureSetupElements;\r\n  const {\r\n    _nativeScrollbarSize,\r\n    _flexboxGlue,\r\n    _nativeScrollbarStyling,\r\n    _nativeScrollbarIsOverlaid,\r\n  } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n\r\n  const [updateSizeFraction, getCurrentSizeFraction] = createCache<WH<number>>(\r\n    whCacheOptions,\r\n    fractionalSize.bind(0, _host)\r\n  );\r\n\r\n  const [updateViewportScrollSizeCache, getCurrentViewportScrollSizeCache] = createCache<\r\n    WH<number>\r\n  >(whCacheOptions, scrollSize.bind(0, _viewport));\r\n\r\n  const [updateOverflowAmountCache, getCurrentOverflowAmountCache] =\r\n    createCache<WH<number>>(whCacheOptions);\r\n\r\n  const [updateOverflowScrollCache] = createCache<XY<boolean>>(xyCacheOptions);\r\n\r\n  /**\r\n   * Applies a fixed height to the viewport so it can't overflow or underflow the host element.\r\n   * @param viewportOverflowState The current overflow state.\r\n   * @param heightIntrinsic Whether the host height is intrinsic or not.\r\n   */\r\n  const fixFlexboxGlue = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    heightIntrinsic: boolean\r\n  ) => {\r\n    style(_viewport, {\r\n      height: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      const { _paddingAbsolute, _padding } = getState();\r\n      const { _overflowScroll, _scrollbarsHideOffset } = viewportOverflowState;\r\n      const hostCssHeight = parseFloat(style(_host, 'height'));\r\n      const hostClientSize = clientSize(_host);\r\n      // const hostOffsetSize = offsetSize(_host);\r\n      // padding subtraction is only needed if padding is absolute or if viewport is content-box\r\n      const isContentBox = style(_viewport, 'boxSizing') === 'content-box';\r\n      const paddingVertical = _paddingAbsolute || isContentBox ? _padding.b + _padding.t : 0;\r\n      const fractionalClientHeight = hostClientSize.h + (hostCssHeight - round(hostCssHeight));\r\n\r\n      const subtractXScrollbar = !(_nativeScrollbarIsOverlaid.x && isContentBox);\r\n\r\n      style(_viewport, {\r\n        height:\r\n          fractionalClientHeight +\r\n          (_overflowScroll.x && subtractXScrollbar ? _scrollbarsHideOffset.x : 0) -\r\n          paddingVertical,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the current overflow state of the viewport.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param viewportStyleObj The viewport style object where the overflow scroll property can be read of, or undefined if shall be determined.\r\n   * @returns A object which contains informations about the current overflow state.\r\n   */\r\n  const getViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    viewportStyleObj?: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const { x: overlaidX, y: overlaidY } = _nativeScrollbarIsOverlaid;\r\n    const determineOverflow = !viewportStyleObj;\r\n    const arrangeHideOffset =\r\n      !_nativeScrollbarStyling && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const styleObj = determineOverflow\r\n      ? style(_viewport, ['overflowX', 'overflowY'])\r\n      : viewportStyleObj;\r\n    const scroll = {\r\n      x: styleObj.overflowX === 'scroll',\r\n      y: styleObj.overflowY === 'scroll',\r\n    };\r\n    const nonScrollbarStylingHideOffset = {\r\n      x: overlaidX ? arrangeHideOffset : _nativeScrollbarSize.x,\r\n      y: overlaidY ? arrangeHideOffset : _nativeScrollbarSize.y,\r\n    };\r\n    const scrollbarsHideOffset = {\r\n      x: scroll.x && !_nativeScrollbarStyling ? nonScrollbarStylingHideOffset.x : 0,\r\n      y: scroll.y && !_nativeScrollbarStyling ? nonScrollbarStylingHideOffset.y : 0,\r\n    };\r\n\r\n    return {\r\n      _overflowScroll: scroll,\r\n      _scrollbarsHideOffsetArrange: {\r\n        x: overlaidX && !!arrangeHideOffset,\r\n        y: overlaidY && !!arrangeHideOffset,\r\n      },\r\n      _scrollbarsHideOffset: scrollbarsHideOffset,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Sets the overflow property of the viewport and calculates the a overflow state according to the new parameters.\r\n   * @param showNativeOverlaidScrollbars Whether to show natively overlaid scrollbars.\r\n   * @param overflowAmount The overflow amount.\r\n   * @param overflow The overflow behavior according to the options.\r\n   * @param viewportStyleObj The viewport style object to which the overflow style shall be applied.\r\n   * @returns A object which represents the newly set overflow state.\r\n   */\r\n  const setViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    overflowAmount: WH<number>,\r\n    overflow: XY<OverflowBehavior>,\r\n    viewportStyleObj: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const { _visible: xVisible, _behavior: xVisibleBehavior } = setAxisOverflowStyle(\r\n      true,\r\n      overflowAmount.w,\r\n      overflow.x,\r\n      viewportStyleObj\r\n    );\r\n    const { _visible: yVisible, _behavior: yVisibleBehavior } = setAxisOverflowStyle(\r\n      false,\r\n      overflowAmount.h,\r\n      overflow.y,\r\n      viewportStyleObj\r\n    );\r\n\r\n    if (xVisible && !yVisible) {\r\n      viewportStyleObj.overflowX = xVisibleBehavior;\r\n    }\r\n    if (yVisible && !xVisible) {\r\n      viewportStyleObj.overflowY = yVisibleBehavior;\r\n    }\r\n\r\n    return getViewportOverflowState(showNativeOverlaidScrollbars, viewportStyleObj);\r\n  };\r\n\r\n  /**\r\n   * Sets the styles of the viewport arrange element.\r\n   * @param viewportOverflowState The viewport overflow state according to which the scrollbars shall be hidden.\r\n   * @param viewportScrollSize The content scroll size.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @returns A boolean which indicates whether the viewport arrange element was adjusted.\r\n   */\r\n  const arrangeViewport = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    viewportScrollSize: WH<number>,\r\n    sizeFraction: WH<number>,\r\n    directionIsRTL: boolean\r\n  ) => {\r\n    if (doViewportArrange) {\r\n      const { _viewportPaddingStyle } = getState();\r\n      const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n      const viewportArrangeHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n        ? 'paddingRight'\r\n        : 'paddingLeft';\r\n      const viewportArrangeHorizontalPaddingValue = _viewportPaddingStyle[\r\n        viewportArrangeHorizontalPaddingKey\r\n      ] as number;\r\n      const viewportArrangeVerticalPaddingValue = _viewportPaddingStyle.paddingTop as number;\r\n      const fractionalContentWidth = viewportScrollSize.w + sizeFraction.w;\r\n      const fractionalContenHeight = viewportScrollSize.h + sizeFraction.h;\r\n      const arrangeSize = {\r\n        w:\r\n          hideOffsetY && arrangeY\r\n            ? `${hideOffsetY + fractionalContentWidth - viewportArrangeHorizontalPaddingValue}px`\r\n            : '',\r\n        h:\r\n          hideOffsetX && arrangeX\r\n            ? `${hideOffsetX + fractionalContenHeight - viewportArrangeVerticalPaddingValue}px`\r\n            : '',\r\n      };\r\n\r\n      // adjust content arrange / before element\r\n      if (_viewportArrange) {\r\n        const { sheet } = _viewportArrange;\r\n        if (sheet) {\r\n          const { cssRules } = sheet;\r\n          if (cssRules) {\r\n            if (!cssRules.length) {\r\n              sheet.insertRule(\r\n                `#${attr(_viewportArrange, 'id')} + .${classNameViewportArrange}::before {}`,\r\n                0\r\n              );\r\n            }\r\n\r\n            // @ts-ignore\r\n            const ruleStyle = cssRules[0].style;\r\n\r\n            ruleStyle.width = arrangeSize.w;\r\n            ruleStyle.height = arrangeSize.h;\r\n          }\r\n        }\r\n      } else {\r\n        style<'--os-vaw' | '--os-vah'>(_viewport, {\r\n          '--os-vaw': arrangeSize.w,\r\n          '--os-vah': arrangeSize.h,\r\n        });\r\n      }\r\n    }\r\n\r\n    return doViewportArrange;\r\n  };\r\n\r\n  /**\r\n   * Hides the native scrollbars according to the passed parameters.\r\n   * @param viewportOverflowState The viewport overflow state.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportArrange Whether special styles related to the viewport arrange strategy shall be applied.\r\n   * @param viewportStyleObj The viewport style object to which the needed styles shall be applied.\r\n   */\r\n  const hideNativeScrollbars = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    directionIsRTL: boolean,\r\n    viewportArrange: boolean,\r\n    viewportStyleObj: StyleObject\r\n  ) => {\r\n    const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n    const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n    const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n    const { _viewportPaddingStyle: viewportPaddingStyle } = getState();\r\n    const horizontalMarginKey: keyof StyleObject = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const viewportHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n      ? 'paddingLeft'\r\n      : 'paddingRight';\r\n    const horizontalMarginValue = viewportPaddingStyle[horizontalMarginKey] as number;\r\n    const verticalMarginValue = viewportPaddingStyle.marginBottom as number;\r\n    const horizontalPaddingValue = viewportPaddingStyle[viewportHorizontalPaddingKey] as number;\r\n    const verticalPaddingValue = viewportPaddingStyle.paddingBottom as number;\r\n\r\n    // horizontal\r\n    viewportStyleObj.width = `calc(100% + ${hideOffsetY + horizontalMarginValue * -1}px)`;\r\n    viewportStyleObj[horizontalMarginKey] = -hideOffsetY + horizontalMarginValue;\r\n\r\n    // vertical\r\n    viewportStyleObj.marginBottom = -hideOffsetX + verticalMarginValue;\r\n\r\n    // viewport arrange additional styles\r\n    if (viewportArrange) {\r\n      viewportStyleObj[viewportHorizontalPaddingKey] =\r\n        horizontalPaddingValue + (arrangeY ? hideOffsetY : 0);\r\n      viewportStyleObj.paddingBottom = verticalPaddingValue + (arrangeX ? hideOffsetX : 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes all styles applied because of the viewport arrange strategy.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportOverflowState The currentviewport overflow state or undefined if it has to be determined.\r\n   * @returns A object with a function which applies all the removed styles and the determined viewport vverflow state.\r\n   */\r\n  const undoViewportArrange = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    directionIsRTL: boolean,\r\n    viewportOverflowState?: ViewportOverflowState\r\n  ): UndoViewportArrangeResult => {\r\n    if (doViewportArrange) {\r\n      const finalViewportOverflowState =\r\n        viewportOverflowState || getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      const { _viewportPaddingStyle: viewportPaddingStyle } = getState();\r\n      const { _scrollbarsHideOffsetArrange } = finalViewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const finalPaddingStyle: StyleObject = {};\r\n      const assignProps = (props: string) =>\r\n        each(props.split(' '), (prop) => {\r\n          finalPaddingStyle[prop] = viewportPaddingStyle[prop];\r\n        });\r\n\r\n      if (arrangeX) {\r\n        assignProps('marginBottom paddingTop paddingBottom');\r\n      }\r\n\r\n      if (arrangeY) {\r\n        assignProps('marginLeft marginRight paddingLeft paddingRight');\r\n      }\r\n\r\n      const prevStyle = style(_viewport, keys(finalPaddingStyle));\r\n\r\n      removeClass(_viewport, classNameViewportArrange);\r\n\r\n      if (!_flexboxGlue) {\r\n        finalPaddingStyle.height = '';\r\n      }\r\n\r\n      style(_viewport, finalPaddingStyle);\r\n\r\n      return [\r\n        () => {\r\n          hideNativeScrollbars(\r\n            finalViewportOverflowState,\r\n            directionIsRTL,\r\n            doViewportArrange,\r\n            prevStyle\r\n          );\r\n          style(_viewport, prevStyle);\r\n          addClass(_viewport, classNameViewportArrange);\r\n        },\r\n        finalViewportOverflowState,\r\n      ];\r\n    }\r\n    return [noop];\r\n  };\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    const {\r\n      _sizeChanged,\r\n      _hostMutation,\r\n      _contentMutation,\r\n      _paddingStyleChanged,\r\n      _heightIntrinsicChanged,\r\n      _directionChanged,\r\n    } = updateHints;\r\n    const { _heightIntrinsic, _directionIsRTL } = getState();\r\n    const [showNativeOverlaidScrollbarsOption, showNativeOverlaidScrollbarsChanged] =\r\n      checkOption<boolean>('nativeScrollbarsOverlaid.show');\r\n    const showNativeOverlaidScrollbars =\r\n      showNativeOverlaidScrollbarsOption &&\r\n      _nativeScrollbarIsOverlaid.x &&\r\n      _nativeScrollbarIsOverlaid.y;\r\n    const adjustFlexboxGlue =\r\n      !_flexboxGlue &&\r\n      (_sizeChanged ||\r\n        _contentMutation ||\r\n        _hostMutation ||\r\n        showNativeOverlaidScrollbarsChanged ||\r\n        _heightIntrinsicChanged);\r\n\r\n    let sizeFractionCache: CacheValues<WH<number>> = getCurrentSizeFraction(force);\r\n    let viewportScrollSizeCache: CacheValues<WH<number>> = getCurrentViewportScrollSizeCache(force);\r\n    let overflowAmuntCache: CacheValues<WH<number>> = getCurrentOverflowAmountCache(force);\r\n    let preMeasureViewportOverflowState: ViewportOverflowState | undefined;\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      if (showNativeOverlaidScrollbars) {\r\n        removeClass(_viewport, classNameViewportScrollbarStyling);\r\n      } else {\r\n        addClass(_viewport, classNameViewportScrollbarStyling);\r\n      }\r\n    }\r\n\r\n    if (adjustFlexboxGlue) {\r\n      preMeasureViewportOverflowState = getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      fixFlexboxGlue(preMeasureViewportOverflowState, _heightIntrinsic);\r\n    }\r\n\r\n    if (\r\n      _sizeChanged ||\r\n      _paddingStyleChanged ||\r\n      _contentMutation ||\r\n      _directionChanged ||\r\n      showNativeOverlaidScrollbarsChanged\r\n    ) {\r\n      const [redoViewportArrange, undoViewportArrangeOverflowState] = undoViewportArrange(\r\n        showNativeOverlaidScrollbars,\r\n        _directionIsRTL,\r\n        preMeasureViewportOverflowState\r\n      );\r\n      const [sizeFraction, sizeFractionChanged] = (sizeFractionCache = updateSizeFraction(force));\r\n      const [viewportScrollSize, viewportScrollSizeChanged] = (viewportScrollSizeCache =\r\n        updateViewportScrollSizeCache(force));\r\n      const viewportContentSize = clientSize(_viewport);\r\n      let arrangedViewportScrollSize = viewportScrollSize;\r\n      let arrangedViewportClientSize = viewportContentSize;\r\n\r\n      redoViewportArrange();\r\n\r\n      // if re measure is required (only required if content arrange strategy is used)\r\n      if (\r\n        (viewportScrollSizeChanged || sizeFractionChanged || showNativeOverlaidScrollbarsChanged) &&\r\n        undoViewportArrangeOverflowState &&\r\n        !showNativeOverlaidScrollbars &&\r\n        arrangeViewport(\r\n          undoViewportArrangeOverflowState,\r\n          viewportScrollSize,\r\n          sizeFraction,\r\n          _directionIsRTL\r\n        )\r\n      ) {\r\n        arrangedViewportClientSize = clientSize(_viewport);\r\n        arrangedViewportScrollSize = scrollSize(_viewport);\r\n      }\r\n\r\n      overflowAmuntCache = updateOverflowAmountCache(\r\n        getOverflowAmount(\r\n          {\r\n            w: max(viewportScrollSize.w, arrangedViewportScrollSize.w),\r\n            h: max(viewportScrollSize.h, arrangedViewportScrollSize.h),\r\n          }, // scroll size\r\n          {\r\n            w: arrangedViewportClientSize.w + max(0, viewportContentSize.w - viewportScrollSize.w),\r\n            h: arrangedViewportClientSize.h + max(0, viewportContentSize.h - viewportScrollSize.h),\r\n          }, // client size\r\n          sizeFraction\r\n        ),\r\n        force\r\n      );\r\n    }\r\n\r\n    const [sizeFraction, sizeFractionChanged] = sizeFractionCache;\r\n    const [viewportScrollSize, viewportScrollSizeChanged] = viewportScrollSizeCache;\r\n    const [overflowAmount, overflowAmountChanged] = overflowAmuntCache;\r\n    const [overflow, overflowChanged] = checkOption<XY<OverflowBehavior>>('overflow');\r\n\r\n    if (\r\n      _paddingStyleChanged ||\r\n      _directionChanged ||\r\n      sizeFractionChanged ||\r\n      viewportScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: StyleObject = {\r\n        marginRight: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n        width: '',\r\n        overflowY: '',\r\n        overflowX: '',\r\n      };\r\n\r\n      const viewportOverflowState = setViewportOverflowState(\r\n        showNativeOverlaidScrollbars,\r\n        overflowAmount,\r\n        overflow,\r\n        viewportStyle\r\n      );\r\n      const viewportArranged = arrangeViewport(\r\n        viewportOverflowState,\r\n        viewportScrollSize,\r\n        sizeFraction,\r\n        _directionIsRTL\r\n      );\r\n      const [overflowScroll, overflowScrollChanged] = updateOverflowScrollCache(\r\n        viewportOverflowState._overflowScroll\r\n      );\r\n      hideNativeScrollbars(viewportOverflowState, _directionIsRTL, viewportArranged, viewportStyle);\r\n\r\n      if (adjustFlexboxGlue) {\r\n        fixFlexboxGlue(viewportOverflowState, _heightIntrinsic);\r\n      }\r\n\r\n      // TODO: hide host overflow if scroll x or y and no padding element there\r\n      // TODO: Test without content\r\n      // TODO: Test without padding\r\n      // TODO: overflow: visible on padding / host if overflow visible on both axis\r\n\r\n      style(_viewport, viewportStyle);\r\n\r\n      setState({\r\n        _viewportOverflowScroll: overflowScroll,\r\n        _viewportOverflowAmount: overflowAmount,\r\n      });\r\n\r\n      return {\r\n        _overflowAmountChanged: overflowAmountChanged,\r\n        _overflowScrollChanged: overflowScrollChanged,\r\n      };\r\n    }\r\n  };\r\n};\r\n","import {\r\n  CacheValues,\r\n  each,\r\n  isNumber,\r\n  scrollLeft,\r\n  scrollTop,\r\n  assignDeep,\r\n  keys,\r\n  isBoolean,\r\n  isUndefined,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  createTrinsicUpdate,\r\n  createPaddingUpdate,\r\n  createOverflowUpdate,\r\n} from 'setups/structureSetup/updateSegments';\r\nimport type { SetupState, SetupUpdateSegment, SetupUpdateCheckOption } from 'setups';\r\nimport type { StructureSetupState } from 'setups/structureSetup';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\n\r\nexport type CreateStructureUpdateSegment = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>\r\n) => StructureSetupUpdateSegment;\r\n\r\nexport type StructureSetupUpdateSegment = SetupUpdateSegment<StructureSetupUpdateHints>;\r\n\r\nexport type StructureSetupUpdate = (\r\n  checkOption: SetupUpdateCheckOption,\r\n  updateHints: Partial<StructureSetupUpdateHints>,\r\n  force?: boolean\r\n) => StructureSetupUpdateHints;\r\n\r\nexport interface StructureSetupUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n  _paddingStyleChanged: boolean;\r\n  _directionChanged: boolean;\r\n  _heightIntrinsicChanged: boolean;\r\n  _overflowScrollChanged: boolean;\r\n  _overflowAmountChanged: boolean;\r\n}\r\n\r\nconst applyForceToCache = <T>(cacheValues: CacheValues<T>, force?: boolean): CacheValues<T> => [\r\n  cacheValues[0],\r\n  force || cacheValues[1],\r\n  cacheValues[2],\r\n];\r\n\r\nconst prepareUpdateHints = <T extends StructureSetupUpdateHints>(\r\n  leading: Required<T>,\r\n  adaptive?: Partial<T>,\r\n  force?: boolean\r\n): Required<T> => {\r\n  const result = {};\r\n  const finalAdaptive = adaptive || {};\r\n  const objKeys = keys(leading).concat(keys(finalAdaptive));\r\n\r\n  each(objKeys, (key) => {\r\n    const leadingValue = leading[key];\r\n    const adaptiveValue = finalAdaptive[key];\r\n    result[key] = isBoolean(leadingValue)\r\n      ? !!force || !!leadingValue || !!adaptiveValue\r\n      : applyForceToCache(leadingValue, force);\r\n  });\r\n\r\n  return result as Required<T>;\r\n};\r\n\r\nexport const createStructureSetupUpdate = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>\r\n): StructureSetupUpdate => {\r\n  const { _viewport } = structureSetupElements;\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _flexboxGlue } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n\r\n  const updateSegments: StructureSetupUpdateSegment[] = [\r\n    createTrinsicUpdate(structureSetupElements, state),\r\n    createPaddingUpdate(structureSetupElements, state),\r\n    createOverflowUpdate(structureSetupElements, state),\r\n  ];\r\n\r\n  return (\r\n    checkOption: SetupUpdateCheckOption,\r\n    updateHints: Partial<StructureSetupUpdateHints>,\r\n    force?: boolean\r\n  ) => {\r\n    const initialUpdateHints = prepareUpdateHints(\r\n      assignDeep(\r\n        {\r\n          _sizeChanged: false,\r\n          _hostMutation: false,\r\n          _contentMutation: false,\r\n          _paddingStyleChanged: false,\r\n          _directionChanged: false,\r\n          _heightIntrinsicChanged: false,\r\n          _overflowScrollChanged: false,\r\n          _overflowAmountChanged: false,\r\n        },\r\n        Object.keys(updateHints).reduce((acc, key) => {\r\n          if (!isUndefined(updateHints[key])) {\r\n            acc[key] = updateHints[key];\r\n          }\r\n          return acc;\r\n        }, {})\r\n      ),\r\n      {},\r\n      force\r\n    );\r\n    const adjustScrollOffset = doViewportArrange || !_flexboxGlue;\r\n    const scrollOffsetX = adjustScrollOffset && scrollLeft(_viewport);\r\n    const scrollOffsetY = adjustScrollOffset && scrollTop(_viewport);\r\n\r\n    let adaptivedUpdateHints: Required<StructureSetupUpdateHints> = initialUpdateHints;\r\n    each(updateSegments, (updateSegment) => {\r\n      adaptivedUpdateHints = prepareUpdateHints<StructureSetupUpdateHints>(\r\n        adaptivedUpdateHints,\r\n        updateSegment(adaptivedUpdateHints, checkOption, !!force) || {},\r\n        force\r\n      );\r\n    });\r\n\r\n    if (isNumber(scrollOffsetX)) {\r\n      scrollLeft(_viewport, scrollOffsetX);\r\n    }\r\n    if (isNumber(scrollOffsetY)) {\r\n      scrollTop(_viewport, scrollOffsetY);\r\n    }\r\n\r\n    return adaptivedUpdateHints;\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  stopAndPrevent,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  isBoolean,\r\n  removeClass,\r\n  isObject,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\nexport interface SizeObserverOptions {\r\n  _direction?: boolean;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserverCallbackParams {\r\n  _sizeChanged: boolean;\r\n  _directionIsRTLCache?: CacheValues<boolean>;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport type DestroySizeObserver = () => void;\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst getElmDirectionIsRTL = (elm: HTMLElement): boolean => style(elm, 'direction') === 'rtl';\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\n/**\r\n * Creates a size observer which observes any size, padding, border, margin and box-sizing changes of the target element. Depending on the options also direction and appear can be observed.\r\n * @param target The target element which shall be observed.\r\n * @param onSizeChangedCallback The callback which gets called after a size change was detected.\r\n * @param options The options for size detection, whether to observe also direction and appear.\r\n * @returns A object which represents the instance of the size observer.\r\n */\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (params: SizeObserverCallbackParams) => any,\r\n  options?: SizeObserverOptions\r\n): DestroySizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } =\r\n    options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(\r\n    `<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`\r\n  );\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const getIsDirectionRTL = getElmDirectionIsRTL.bind(0, sizeObserver);\r\n  const [updateResizeObserverContentRectCache] = createCache<DOMRectReadOnly | undefined>({\r\n    _initialValue: undefined,\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (\r\n    sizeChangedContext?: CacheValues<boolean> | ResizeObserverEntry[] | Event | boolean\r\n  ) => {\r\n    const isResizeObserverCall =\r\n      isArray(sizeChangedContext) &&\r\n      sizeChangedContext.length > 0 &&\r\n      isObject(sizeChangedContext[0]);\r\n\r\n    const hasDirectionCache =\r\n      !isResizeObserverCall && isBoolean((sizeChangedContext as CacheValues<boolean>)[0]);\r\n\r\n    let skip = false;\r\n    let appear: boolean | number | undefined = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isResizeObserverCall) {\r\n      const [currRContentRect, , prevContentRect] = updateResizeObserverContentRectCache(\r\n        (sizeChangedContext as ResizeObserverEntry[]).pop()!.contentRect\r\n      );\r\n      const hasDimensions = domRectHasDimensions(currRContentRect);\r\n      const hadDimensions = domRectHasDimensions(prevContentRect);\r\n      skip = !prevContentRect || !hasDimensions; // skip on initial RO. call or if display is none\r\n      appear = !hadDimensions && hasDimensions;\r\n\r\n      doDirectionScroll = !skip; // direction scroll when not skipping\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      [, doDirectionScroll] = sizeChangedContext as CacheValues<boolean>; // direction scroll when DirectionCache changed, false otherwise\r\n    }\r\n    // else if it triggered with appear from polyfill\r\n    else {\r\n      appear = sizeChangedContext === true;\r\n    }\r\n\r\n    if (observeDirectionChange && doDirectionScroll) {\r\n      const rtl = hasDirectionCache\r\n        ? (sizeChangedContext as CacheValues<boolean>)[0]\r\n        : getElmDirectionIsRTL(sizeObserver);\r\n      scrollLeft(\r\n        sizeObserver,\r\n        rtl\r\n          ? rtlScrollBehavior.n\r\n            ? -scrollAmount\r\n            : rtlScrollBehavior.i\r\n            ? 0\r\n            : scrollAmount\r\n          : scrollAmount\r\n      );\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback({\r\n        _sizeChanged: !hasDirectionCache,\r\n        _directionIsRTLCache: hasDirectionCache\r\n          ? (sizeChangedContext as CacheValues<boolean>)\r\n          : undefined,\r\n        _appear: !!appear,\r\n      });\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange\r\n    ? onSizeChangedCallbackProxy\r\n    : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => {\r\n      resizeObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(observerElementChildrenRoot);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = (appear?: unknown) => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy(appear === true);\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event | false) => {\r\n      currSize = offsetSize(observerElementChildrenRoot);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent) {\r\n        stopAndPrevent(scrollEvent);\r\n\r\n        if (isDirty && !rAFId) {\r\n          cAF!(rAFId);\r\n          rAFId = rAF!(onResized);\r\n        }\r\n      } else {\r\n        onResized(scrollEvent === false);\r\n      }\r\n\r\n      reset();\r\n    };\r\n\r\n    push(offListeners, [\r\n      on(expandElement, scrollEventName, onScroll),\r\n      on(shrinkElement, scrollEventName, onScroll),\r\n    ]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n\r\n    reset();\r\n\r\n    appearCallback = observeAppearChange ? onScroll.bind(0, false) : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(\r\n      {\r\n        _initialValue: !getIsDirectionRTL(), // invert current value to trigger initial change\r\n      },\r\n      getIsDirectionRTL\r\n    );\r\n    const [updateDirectionIsRTLCache] = directionIsRTLCache;\r\n\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        const [directionIsRTL, directionIsRTLChanged] = directionIsRTLCacheValues;\r\n\r\n        if (directionIsRTLChanged) {\r\n          removeClass(listenerElement, 'ltr rtl');\r\n          if (directionIsRTL) {\r\n            addClass(listenerElement, 'rtl');\r\n          } else {\r\n            addClass(listenerElement, 'ltr');\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        stopAndPrevent(event);\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(sizeObserver);\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDiv,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport type DestroyTrinsicObserver = () => void;\r\n\r\nconst isHeightIntrinsic = (ioEntryOrSize: IntersectionObserverEntry | WH<number>): boolean =>\r\n  (ioEntryOrSize as WH<number>).h === 0 ||\r\n  (ioEntryOrSize as IntersectionObserverEntry).isIntersecting ||\r\n  (ioEntryOrSize as IntersectionObserverEntry).intersectionRatio > 0;\r\n\r\n/**\r\n * Creates a trinsic observer which observes changes to intrinsic or extrinsic sizing for the height of the target element.\r\n * @param target The element which shall be observed.\r\n * @param onTrinsicChangedCallback The callback which gets called after a change was detected.\r\n * @returns A object which represents the instance of the trinsic observer.\r\n */\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): DestroyTrinsicObserver => {\r\n  const trinsicObserver = createDiv(classNameTrinsicObserver);\r\n  const offListeners: (() => void)[] = [];\r\n  const [updateHeightIntrinsicCache] = createCache({\r\n    _initialValue: false,\r\n  });\r\n\r\n  const triggerOnTrinsicChangedCallback = (\r\n    updateValue?: IntersectionObserverEntry | WH<number>\r\n  ) => {\r\n    if (updateValue) {\r\n      const heightIntrinsic = updateHeightIntrinsicCache(isHeightIntrinsic(updateValue));\r\n      const [, heightIntrinsicChanged] = heightIntrinsic;\r\n\r\n      if (heightIntrinsicChanged) {\r\n        onTrinsicChangedCallback(heightIntrinsic);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          triggerOnTrinsicChangedCallback(entries.pop());\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => {\r\n      intersectionObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const onSizeChanged = () => {\r\n      const newSize = offsetSize(trinsicObserver);\r\n      triggerOnTrinsicChangedCallback(newSize);\r\n    };\r\n    push(offListeners, createSizeObserver(trinsicObserver, onSizeChanged));\r\n    onSizeChanged();\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(trinsicObserver);\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n} from 'support';\r\n\r\ntype DOMContentObserverCallback = (contentChangedTroughEvent: boolean) => any;\r\n\r\ntype DOMTargetObserverCallback = (targetChangedAttrs: string[], targetStyleChanged: boolean) => any;\r\n\r\ninterface DOMObserverOptionsBase {\r\n  _attributes?: string[];\r\n  _styleChangingAttributes?: string[];\r\n}\r\n\r\ninterface DOMContentObserverOptions extends DOMObserverOptionsBase {\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname(s) | function returning eventname(s)] -> eventnames divided by whitespaces\r\n  _nestedTargetSelector?: string;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange; // function which will prevent marking certain dom changes as content change if it returns true\r\n  _ignoreNestedTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed on nested targets if it returns true\r\n}\r\n\r\ninterface DOMTargetObserverOptions extends DOMObserverOptionsBase {\r\n  _ignoreTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed if it returns true\r\n}\r\n\r\ntype ContentChangeArrayItem = [string?, string?] | null | undefined;\r\n\r\nexport type DOMObserverEventContentChange =\r\n  | Array<ContentChangeArrayItem>\r\n  | false\r\n  | null\r\n  | undefined;\r\n\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions?: DOMContentObserverOptions\r\n) => boolean;\r\n\r\nexport type DOMObserverIgnoreTargetChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\n\r\nexport type DOMObserverCallback<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverCallback\r\n  : DOMTargetObserverCallback;\r\n\r\nexport type DOMObserverOptions<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverOptions\r\n  : DOMTargetObserverOptions;\r\n\r\nexport type DOMObserver = [destroy: () => void, update: () => void];\r\n\r\ntype EventContentChangeUpdateElement = (getElements?: (selector: string) => Node[]) => void;\r\ntype EventContentChange = [destroy: () => void, updateElements: EventContentChangeUpdateElement];\r\n\r\n/**\r\n * Creates a set of helper functions to observe events of elements inside the target element.\r\n * @param target The target element of which the children elements shall be observed. (not only direct children but also nested ones)\r\n * @param eventContentChange The event content change array. (array of tuples: selector and eventname(s))\r\n * @param callback Callback which is called if one of the elements emits the corresponding event.\r\n * @returns A object which contains a set of helper functions to destroy and update the observation of elements.\r\n */\r\nconst createEventContentChange = (\r\n  target: Element,\r\n  callback: (...args: any) => any,\r\n  eventContentChange?: DOMObserverEventContentChange\r\n): EventContentChange => {\r\n  let map: WeakMap<Node, [string, () => any]> | undefined; // weak map to prevent memory leak for detached elements\r\n  let destroyed = false;\r\n  const destroy = () => {\r\n    destroyed = true;\r\n  };\r\n  const updateElements: EventContentChangeUpdateElement = (getElements?) => {\r\n    if (eventContentChange) {\r\n      const eventElmList = eventContentChange.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventNames = item[1];\r\n          const elements =\r\n            eventNames &&\r\n            selector &&\r\n            (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements && elements.length && eventNames && isString(eventNames)) {\r\n            push(arr, [elements, eventNames.trim()], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) =>\r\n        each(item[0], (elm) => {\r\n          const eventNames = item[1];\r\n          const entry = map!.get(elm);\r\n\r\n          if (entry) {\r\n            const entryEventNames = entry[0];\r\n            const entryOff = entry[1];\r\n\r\n            // in case an already registered element is registered again, unregister the previous events\r\n            if (entryEventNames === eventNames) {\r\n              entryOff();\r\n            }\r\n          }\r\n\r\n          const off = on(elm, eventNames, (event: Event) => {\r\n            if (destroyed) {\r\n              off();\r\n              map!.delete(elm);\r\n            } else {\r\n              callback(event);\r\n            }\r\n          });\r\n          map!.set(elm, [eventNames, off]);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    map = new WeakMap();\r\n    updateElements();\r\n  }\r\n\r\n  return [destroy, updateElements];\r\n};\r\n\r\n/**\r\n * Creates a DOM observer which observes DOM changes to either the target element or its children.\r\n * @param target The element which shall be observed.\r\n * @param isContentObserver Whether this observer is just observing the target or just the targets children. (not only direct children but also nested ones)\r\n * @param callback The callback which gets called if a change was detected.\r\n * @param options The options for DOM change detection.\r\n * @returns A object which represents the instance of the DOM observer.\r\n */\r\nexport const createDOMObserver = <ContentObserver extends boolean>(\r\n  target: HTMLElement,\r\n  isContentObserver: ContentObserver,\r\n  callback: DOMObserverCallback<ContentObserver>,\r\n  options?: DOMObserverOptions<ContentObserver>\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetChange,\r\n    _ignoreNestedTargetChange,\r\n    _ignoreContentChange,\r\n  } = (options as DOMContentObserverOptions & DOMTargetObserverOptions) || {};\r\n  const [destroyEventContentChange, updateEventContentChangeElements] = createEventContentChange(\r\n    target,\r\n    debounce(\r\n      () => {\r\n        if (isConnected) {\r\n          (callback as DOMContentObserverCallback)(true);\r\n        }\r\n      },\r\n      { _timeout: 33, _maxDelay: 99 }\r\n    ),\r\n    _eventContentChange\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes);\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange =\r\n      (isContentObserver ? _ignoreNestedTargetChange : _ignoreTargetChange) || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue =\r\n        isAttributesType && isString(attributeName)\r\n          ? attr(mutationTarget as HTMLElement, attributeName!)\r\n          : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const styleChangingAttrChanged =\r\n        indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      // if is content observer and something changed in children\r\n      if (isContentObserver && !targetIsMutationTarget) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged;\r\n        const isNestedTarget =\r\n          contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged =\r\n          baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      // if is target observer and target attr changed\r\n      if (\r\n        !isContentObserver &&\r\n        targetIsMutationTarget &&\r\n        attributeChanged &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n      ) {\r\n        push(targetChangedAttrs, attributeName!);\r\n        targetStyleChanged = targetStyleChanged || styleChangingAttrChanged;\r\n      }\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      // adds / removes the new elements from the event content change\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n\r\n    if (isContentObserver) {\r\n      contentChanged && (callback as DOMContentObserverCallback)(false);\r\n    } else if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged) {\r\n      (callback as DOMTargetObserverCallback)(targetChangedAttrs, targetStyleChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: isContentObserver,\r\n    childList: isContentObserver,\r\n    characterData: isContentObserver,\r\n  });\r\n  isConnected = true;\r\n\r\n  return [\r\n    () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  ];\r\n};\r\n","import {\r\n  diffClass,\r\n  debounce,\r\n  isArray,\r\n  isNumber,\r\n  each,\r\n  indexOf,\r\n  isString,\r\n  attr,\r\n  removeAttr,\r\n  CacheValues,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport { createSizeObserver, SizeObserverCallbackParams } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver, DOMObserver } from 'observers/domObserver';\r\nimport type { SetupState, SetupUpdateCheckOption } from 'setups';\r\nimport type { StructureSetupState } from 'setups/structureSetup';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type {\r\n  StructureSetupUpdate,\r\n  StructureSetupUpdateHints,\r\n} from 'setups/structureSetup/structureSetup.update';\r\n\r\nexport type StructureSetupObserversUpdate = (checkOption: SetupUpdateCheckOption) => void;\r\n\r\nexport type StructureSetupObservers = [\r\n  updateObserverOptions: StructureSetupObserversUpdate,\r\n  destroy: () => void\r\n];\r\n\r\n// const hostSelector = `.${classNameHost}`;\r\n\r\n// TODO: observer textarea attrs if textarea\r\n// TODO: test _ignoreContentChange & _ignoreNestedTargetChange for content dom observer\r\n// TODO: test _ignoreTargetChange for target dom observer\r\n\r\n// const viewportSelector = `.${classNameViewport}`;\r\n// const contentSelector = `.${classNameContent}`;\r\nconst ignorePrefix = 'os-';\r\nconst viewportAttrsFromTarget = ['tabindex'];\r\nconst baseStyleChangingAttrsTextarea = ['wrap', 'cols', 'rows'];\r\nconst baseStyleChangingAttrs = ['id', 'class', 'style', 'open'];\r\n\r\nconst ignoreTargetChange = (\r\n  target: Node,\r\n  attrName: string,\r\n  oldValue: string | null,\r\n  newValue: string | null\r\n) => {\r\n  if (attrName === 'class' && oldValue && newValue) {\r\n    const diff = diffClass(oldValue, newValue);\r\n    return !!diff.find((addedOrRemovedClass) => addedOrRemovedClass.indexOf(ignorePrefix) !== 0);\r\n  }\r\n  return false;\r\n};\r\n\r\ntype ExcludeFromTuple<T extends readonly any[], E> = T extends [infer F, ...infer R]\r\n  ? [F] extends [E]\r\n    ? ExcludeFromTuple<R, E>\r\n    : [F, ...ExcludeFromTuple<R, E>]\r\n  : [];\r\n\r\nexport const createStructureSetupObservers = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>,\r\n  structureSetupUpdate: (\r\n    ...args: ExcludeFromTuple<Parameters<StructureSetupUpdate>, Parameters<StructureSetupUpdate>[0]>\r\n  ) => any\r\n): StructureSetupObservers => {\r\n  let debounceTimeout: number | false | undefined;\r\n  let debounceMaxDelay: number | false | undefined;\r\n  let contentMutationObserver: DOMObserver | undefined;\r\n  const [, setState] = state;\r\n  const { _host, _viewport, _content, _isTextarea } = structureSetupElements;\r\n  const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n  const contentMutationObserverAttr = _isTextarea\r\n    ? baseStyleChangingAttrsTextarea\r\n    : baseStyleChangingAttrs.concat(baseStyleChangingAttrsTextarea);\r\n  const structureSetupUpdateWithDebouncedAdaptiveUpdateHints = debounce(structureSetupUpdate, {\r\n    _timeout: () => debounceTimeout,\r\n    _maxDelay: () => debounceMaxDelay,\r\n    _mergeParams(prev, curr) {\r\n      const {\r\n        _sizeChanged: prevSizeChanged,\r\n        _hostMutation: prevHostMutation,\r\n        _contentMutation: prevContentMutation,\r\n      } = prev[0];\r\n      const {\r\n        _sizeChanged: currSizeChanged,\r\n        _hostMutation: currvHostMutation,\r\n        _contentMutation: currContentMutation,\r\n      } = curr[0];\r\n      const merged: [Partial<StructureSetupUpdateHints>] = [\r\n        {\r\n          _sizeChanged: prevSizeChanged || currSizeChanged,\r\n          _hostMutation: prevHostMutation || currvHostMutation,\r\n          _contentMutation: prevContentMutation || currContentMutation,\r\n        },\r\n      ];\r\n\r\n      return merged;\r\n    },\r\n  });\r\n\r\n  const updateViewportAttrsFromHost = (attributes?: string[]) => {\r\n    each(attributes || viewportAttrsFromTarget, (attribute) => {\r\n      if (indexOf(viewportAttrsFromTarget, attribute) > -1) {\r\n        const hostAttr = attr(_host, attribute);\r\n        if (isString(hostAttr)) {\r\n          attr(_viewport, attribute, hostAttr);\r\n        } else {\r\n          removeAttr(_viewport, attribute);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsicCache: CacheValues<boolean>) => {\r\n    const [heightIntrinsic, heightIntrinsicChanged] = heightIntrinsicCache;\r\n    setState({ _heightIntrinsic: heightIntrinsic });\r\n    structureSetupUpdate({ _heightIntrinsicChanged: heightIntrinsicChanged });\r\n  };\r\n  const onSizeChanged = ({\r\n    _sizeChanged,\r\n    _directionIsRTLCache,\r\n    _appear,\r\n  }: SizeObserverCallbackParams) => {\r\n    const updateFn =\r\n      !_sizeChanged || _appear\r\n        ? structureSetupUpdate\r\n        : structureSetupUpdateWithDebouncedAdaptiveUpdateHints;\r\n\r\n    let directionChanged = false;\r\n    if (_directionIsRTLCache) {\r\n      const [directionIsRTL, directionIsRTLChanged] = _directionIsRTLCache;\r\n      directionChanged = directionIsRTLChanged;\r\n      setState({ _directionIsRTL: directionIsRTL });\r\n    }\r\n\r\n    updateFn({ _sizeChanged, _directionChanged: directionChanged });\r\n  };\r\n  const onContentMutation = (contentChangedTroughEvent: boolean) => {\r\n    // if contentChangedTroughEvent is true its already debounced\r\n    const updateFn = contentChangedTroughEvent\r\n      ? structureSetupUpdate\r\n      : structureSetupUpdateWithDebouncedAdaptiveUpdateHints;\r\n    updateFn({\r\n      _contentMutation: true,\r\n    });\r\n  };\r\n  const onHostMutation = (targetChangedAttrs: string[], targetStyleChanged: boolean) => {\r\n    if (targetStyleChanged) {\r\n      structureSetupUpdateWithDebouncedAdaptiveUpdateHints({\r\n        _hostMutation: true,\r\n      });\r\n    } else {\r\n      updateViewportAttrsFromHost(targetChangedAttrs);\r\n    }\r\n  };\r\n\r\n  const destroyTrinsicObserver =\r\n    (_content || !_flexboxGlue) && createTrinsicObserver(_host, onTrinsicChanged);\r\n  const destroySizeObserver = createSizeObserver(_host, onSizeChanged, {\r\n    _appear: true,\r\n    _direction: !_nativeScrollbarStyling,\r\n  });\r\n  const [destroyHostMutationObserver] = createDOMObserver(_host, false, onHostMutation, {\r\n    _styleChangingAttributes: baseStyleChangingAttrs,\r\n    _attributes: baseStyleChangingAttrs.concat(viewportAttrsFromTarget),\r\n    _ignoreTargetChange: ignoreTargetChange,\r\n  });\r\n\r\n  updateViewportAttrsFromHost();\r\n\r\n  return [\r\n    (checkOption) => {\r\n      const [elementEvents, elementEventsChanged] = checkOption<Array<[string, string]> | null>(\r\n        'updating.elementEvents'\r\n      );\r\n      const [attributes, attributesChanged] = checkOption<string[] | null>('updating.attributes');\r\n      const [debounceValue, debounceChanged] = checkOption<Array<number> | number | null>(\r\n        'updating.debounce'\r\n      );\r\n      const updateContentMutationObserver = elementEventsChanged || attributesChanged;\r\n\r\n      if (updateContentMutationObserver) {\r\n        if (contentMutationObserver) {\r\n          contentMutationObserver[1](); // update\r\n          contentMutationObserver[0](); // destroy\r\n        }\r\n        contentMutationObserver = createDOMObserver(\r\n          _content || _viewport,\r\n          true,\r\n          onContentMutation,\r\n          {\r\n            _styleChangingAttributes: contentMutationObserverAttr.concat(attributes || []),\r\n            _attributes: contentMutationObserverAttr.concat(attributes || []),\r\n            _eventContentChange: elementEvents,\r\n            _ignoreNestedTargetChange: ignoreTargetChange,\r\n            // _nestedTargetSelector: hostSelector,\r\n            /*\r\n          _ignoreContentChange: (mutation, isNestedTarget) => {\r\n            const { target, attributeName } = mutation;\r\n            return isNestedTarget\r\n              ? false\r\n              : attributeName\r\n              ? liesBetween(target as Element, hostSelector, viewportSelector) || liesBetween(target as Element, hostSelector, contentSelector)\r\n              : false;\r\n          },\r\n          */\r\n          }\r\n        );\r\n      }\r\n\r\n      if (debounceChanged) {\r\n        structureSetupUpdateWithDebouncedAdaptiveUpdateHints._flush();\r\n        if (isArray(debounceValue)) {\r\n          const timeout = debounceValue[0];\r\n          const maxWait = debounceValue[1];\r\n          debounceTimeout = isNumber(timeout) ? timeout : false;\r\n          debounceMaxDelay = isNumber(maxWait) ? maxWait : false;\r\n        } else if (isNumber(debounceValue)) {\r\n          debounceTimeout = debounceValue;\r\n          debounceMaxDelay = false;\r\n        } else {\r\n          debounceTimeout = false;\r\n          debounceMaxDelay = false;\r\n        }\r\n      }\r\n    },\r\n    () => {\r\n      contentMutationObserver && contentMutationObserver[0](); // destroy\r\n      destroyTrinsicObserver && destroyTrinsicObserver();\r\n      destroySizeObserver();\r\n      destroyHostMutationObserver();\r\n    },\r\n  ];\r\n};\r\n","import { runEach } from 'support';\r\nimport { createState, createOptionCheck } from 'setups/setups';\r\nimport { createStructureSetupElements } from 'setups/structureSetup/structureSetup.elements';\r\nimport { createStructureSetupUpdate } from 'setups/structureSetup/structureSetup.update';\r\nimport { createStructureSetupObservers } from 'setups/structureSetup/structureSetup.observers';\r\nimport type { StructureSetupUpdateHints } from 'setups/structureSetup/structureSetup.update';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type { TRBL, XY, WH } from 'support';\r\nimport type { OSOptions, ReadonlyOSOptions } from 'options';\r\nimport type { Setup } from 'setups';\r\nimport type { OSTarget, PartialOptions, StyleObject } from 'typings';\r\n\r\nexport interface StructureSetupState {\r\n  _padding: TRBL;\r\n  _paddingAbsolute: boolean;\r\n  _viewportPaddingStyle: StyleObject;\r\n  _viewportOverflowScroll: XY<boolean>;\r\n  _viewportOverflowAmount: WH<number>;\r\n  _heightIntrinsic: boolean;\r\n  _directionIsRTL: boolean;\r\n}\r\n\r\nexport interface StructureSetupStaticState {\r\n  _elements: StructureSetupElementsObj;\r\n  _addOnUpdatedListener: (listener: OnUpdatedListener) => void;\r\n}\r\n\r\nexport type OnUpdatedListener = (\r\n  updateHints: StructureSetupUpdateHints,\r\n  changedOptions: PartialOptions<OSOptions>,\r\n  force: boolean\r\n) => void;\r\n\r\nconst initialStructureSetupUpdateState: StructureSetupState = {\r\n  _padding: {\r\n    t: 0,\r\n    r: 0,\r\n    b: 0,\r\n    l: 0,\r\n  },\r\n  _paddingAbsolute: false,\r\n  _viewportPaddingStyle: {\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n    marginLeft: 0,\r\n    paddingTop: 0,\r\n    paddingRight: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 0,\r\n  },\r\n  _viewportOverflowAmount: {\r\n    w: 0,\r\n    h: 0,\r\n  },\r\n  _viewportOverflowScroll: {\r\n    x: false,\r\n    y: false,\r\n  },\r\n  _heightIntrinsic: false,\r\n  _directionIsRTL: false,\r\n};\r\n\r\nexport const createStructureSetup = (\r\n  target: OSTarget,\r\n  options: ReadonlyOSOptions\r\n): Setup<StructureSetupState, StructureSetupStaticState> => {\r\n  const checkOptionsFallback = createOptionCheck(options, {});\r\n  const state = createState(initialStructureSetupUpdateState);\r\n  const onUpdatedListeners = new Set<OnUpdatedListener>();\r\n  const [getUpdateState] = state;\r\n\r\n  const runOnUpdatedListeners = (\r\n    updateHints: StructureSetupUpdateHints,\r\n    changedOptions?: PartialOptions<OSOptions>,\r\n    force?: boolean\r\n  ) => {\r\n    runEach(onUpdatedListeners, [updateHints, changedOptions || {}, !!force]);\r\n  };\r\n\r\n  const [elements, destroyElements] = createStructureSetupElements(target);\r\n  const updateStructure = createStructureSetupUpdate(elements, state);\r\n  const [updateObservers, destroyObservers] = createStructureSetupObservers(\r\n    elements,\r\n    state,\r\n    (updateHints) => {\r\n      runOnUpdatedListeners(updateStructure(checkOptionsFallback, updateHints));\r\n    }\r\n  );\r\n\r\n  const structureSetupState = getUpdateState.bind(0) as (() => StructureSetupState) &\r\n    StructureSetupStaticState;\r\n  structureSetupState._addOnUpdatedListener = (listener) => {\r\n    onUpdatedListeners.add(listener);\r\n  };\r\n  structureSetupState._elements = elements;\r\n\r\n  return [\r\n    (changedOptions, force?) => {\r\n      const checkOption = createOptionCheck(options, changedOptions, force);\r\n      updateObservers(checkOption);\r\n      runOnUpdatedListeners(updateStructure(checkOption, {}, force));\r\n    },\r\n    structureSetupState,\r\n    () => {\r\n      onUpdatedListeners.clear();\r\n      destroyObservers();\r\n      destroyElements();\r\n    },\r\n  ];\r\n};\r\n","import { appendChildren, createDiv, removeElements, isFunction } from 'support';\r\nimport {\r\n  classNameScrollbar,\r\n  classNameScrollbarHorizontal,\r\n  classNameScrollbarVertical,\r\n  classNameScrollbarTrack,\r\n  classNameScrollbarHandle,\r\n} from 'classnames';\r\nimport { getEnvironment, ScrollbarsInitializationStrategy } from 'environment';\r\nimport { OSTarget, ScrollbarsInitialization } from 'typings';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\n\r\nexport interface ScrollbarStructure {\r\n  _scrollbar: HTMLElement;\r\n  _track: HTMLElement;\r\n  _handle: HTMLElement;\r\n}\r\n\r\nexport interface ScrollbarsSetupElementsObj {\r\n  _horizontalScrollbarStructure: ScrollbarStructure;\r\n  _verticalScrollbarStructure: ScrollbarStructure;\r\n}\r\n\r\nexport type ScrollbarsSetupElements = [elements: ScrollbarsSetupElementsObj, destroy: () => void];\r\n\r\nconst generateScrollbarDOM = (scrollbarClassName: string): ScrollbarStructure => {\r\n  const scrollbar = createDiv(`${classNameScrollbar} ${scrollbarClassName}`);\r\n  const track = createDiv(classNameScrollbarTrack);\r\n  const handle = createDiv(classNameScrollbarHandle);\r\n\r\n  appendChildren(scrollbar, track);\r\n  appendChildren(track, handle);\r\n\r\n  return {\r\n    _scrollbar: scrollbar,\r\n    _track: track,\r\n    _handle: handle,\r\n  };\r\n};\r\n\r\nexport const createScrollbarsSetupElements = (\r\n  target: OSTarget,\r\n  structureSetupElements: StructureSetupElementsObj\r\n): ScrollbarsSetupElements => {\r\n  const { _getInitializationStrategy } = getEnvironment();\r\n  const { _scrollbarsSlot: environmentScrollbarSlot } =\r\n    _getInitializationStrategy() as ScrollbarsInitializationStrategy;\r\n  const { _target, _host, _viewport, _targetIsElm } = structureSetupElements;\r\n  const initializationScrollbarSlot =\r\n    !_targetIsElm && (target as ScrollbarsInitialization).scrollbarsSlot;\r\n  const initializationScrollbarSlotResult = isFunction(initializationScrollbarSlot)\r\n    ? initializationScrollbarSlot(_target, _host, _viewport)\r\n    : initializationScrollbarSlot;\r\n  const evaluatedScrollbarSlot =\r\n    initializationScrollbarSlotResult ||\r\n    (isFunction(environmentScrollbarSlot)\r\n      ? environmentScrollbarSlot(_target, _host, _viewport)\r\n      : environmentScrollbarSlot) ||\r\n    _host;\r\n\r\n  const horizontalScrollbarStructure = generateScrollbarDOM(classNameScrollbarHorizontal);\r\n  const verticalScrollbarStructure = generateScrollbarDOM(classNameScrollbarVertical);\r\n\r\n  const { _scrollbar: horizontalScrollbar } = horizontalScrollbarStructure;\r\n  const { _scrollbar: verticalScrollbar } = verticalScrollbarStructure;\r\n\r\n  appendChildren(evaluatedScrollbarSlot, horizontalScrollbar);\r\n  appendChildren(evaluatedScrollbarSlot, verticalScrollbar);\r\n\r\n  return [\r\n    {\r\n      _horizontalScrollbarStructure: horizontalScrollbarStructure,\r\n      _verticalScrollbarStructure: verticalScrollbarStructure,\r\n    },\r\n    removeElements.bind(0, [horizontalScrollbar, verticalScrollbar]),\r\n  ];\r\n};\r\n","import { createState, createOptionCheck } from 'setups/setups';\r\nimport {\r\n  createScrollbarsSetupElements,\r\n  ScrollbarsSetupElementsObj,\r\n} from 'setups/scrollbarsSetup/scrollbarsSetup.elements';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type { ReadonlyOSOptions } from 'options';\r\nimport type { Setup } from 'setups';\r\nimport type { OSTarget } from 'typings';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface ScrollbarsSetupState {}\r\n\r\nexport interface ScrollbarsSetupStaticState {\r\n  _elements: ScrollbarsSetupElementsObj;\r\n}\r\n\r\nexport const createScrollbarsSetup = (\r\n  target: OSTarget,\r\n  options: ReadonlyOSOptions,\r\n  structureSetupElements: StructureSetupElementsObj\r\n): Setup<ScrollbarsSetupState, ScrollbarsSetupStaticState> => {\r\n  const state = createState({});\r\n  const [getState] = state;\r\n\r\n  const [elements, destroyElements] = createScrollbarsSetupElements(target, structureSetupElements);\r\n\r\n  const scrollbarsSetupState = getState.bind(0) as (() => ScrollbarsSetupState) &\r\n    ScrollbarsSetupStaticState;\r\n  scrollbarsSetupState._elements = elements;\r\n\r\n  return [\r\n    (changedOptions, force?) => {\r\n      const checkOption = createOptionCheck(options, changedOptions, force);\r\n      // eslint-disable-next-line no-console\r\n      console.log(checkOption);\r\n    },\r\n    scrollbarsSetupState,\r\n    () => {\r\n      destroyElements();\r\n    },\r\n  ];\r\n};\r\n","import { assignDeep, each, isArray } from 'support';\r\nimport { OverlayScrollbars, OverlayScrollbarsStatic } from 'overlayscrollbars';\r\n\r\nexport type OSPluginInstance =\r\n  | Record<string, unknown>\r\n  | ((staticObj: OverlayScrollbarsStatic, instanceObj: OverlayScrollbars) => void);\r\nexport type OSPlugin<T extends OSPluginInstance = OSPluginInstance> = [string, T];\r\n\r\nconst pluginRegistry: Record<string, OSPluginInstance> = {};\r\n\r\nexport const getPlugins = () => assignDeep({}, pluginRegistry);\r\n\r\nexport const addPlugin = (addedPlugin: OSPlugin | OSPlugin[]) =>\r\n  each((isArray(addedPlugin) ? addedPlugin : [addedPlugin]) as OSPlugin[], (plugin) => {\r\n    pluginRegistry[plugin[0]] = plugin[1];\r\n  });\r\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { PlainObject, PartialOptions } from 'typings';\r\n\r\nexport type OptionsObjectType = Record<string, unknown>;\r\nexport type OptionsFunctionType = (this: unknown, ...args: unknown[]) => unknown;\r\nexport type OptionsTemplateType<T extends OptionsTemplateNativeTypes> = ExtractPropsKey<\r\n  OptionsTemplateTypeMap,\r\n  T\r\n>;\r\nexport type OptionsTemplateTypes = keyof OptionsTemplateTypeMap;\r\nexport type OptionsTemplateNativeTypes = OptionsTemplateTypeMap[keyof OptionsTemplateTypeMap];\r\n\r\nexport type OptionsTemplateValue<T extends OptionsTemplateNativeTypes = string> = T extends string\r\n  ? string extends T\r\n    ? OptionsTemplateValueNonEnum<T>\r\n    : string\r\n  : OptionsTemplateValueNonEnum<T>;\r\n\r\nexport type OptionsTemplate<T> = {\r\n  [P in keyof T]: T[P] extends OptionsObjectType\r\n    ? OptionsTemplate<T[P]>\r\n    : T[P] extends OptionsTemplateNativeTypes\r\n    ? OptionsTemplateValue<T[P]>\r\n    : never;\r\n};\r\n\r\nexport type OptionsValidationResult<T> = [\r\n  PartialOptions<T>, // validated\r\n  Record<string, unknown> // foreign\r\n];\r\n\r\ntype OptionsTemplateTypeMap = {\r\n  __TPL_boolean_TYPE__: boolean;\r\n  __TPL_number_TYPE__: number;\r\n  __TPL_string_TYPE__: string;\r\n  __TPL_array_TYPE__: Array<any> | ReadonlyArray<any>;\r\n  __TPL_function_TYPE__: OptionsFunctionType;\r\n  __TPL_null_TYPE__: null;\r\n  __TPL_object_TYPE__: OptionsObjectType;\r\n};\r\n\r\ntype OptionsTemplateValueNonEnum<T extends OptionsTemplateNativeTypes> =\r\n  | OptionsTemplateType<T>\r\n  | [OptionsTemplateType<T>, ...Array<OptionsTemplateTypes>];\r\n\r\ntype ExtractPropsKey<T, TProps extends T[keyof T]> = {\r\n  [P in keyof T]: TProps extends T[P] ? P : never;\r\n}[keyof T];\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<OptionsObjectType>;\r\n  readonly function: OptionsTemplateType<OptionsFunctionType>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = [\r\n  'boolean',\r\n  'number',\r\n  'string',\r\n  'array',\r\n  'object',\r\n  'function',\r\n  'null',\r\n].reduce((result, item) => {\r\n  result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n  return result;\r\n}, {} as OptionsTemplateTypesDictionary);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param template The template according to which the options object shall be validated.\r\n * @param options The options object which shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  template: OptionsTemplate<T>,\r\n  options: PartialOptions<T>,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: PartialOptions<T> = {};\r\n  const optionsCopy: PartialOptions<T> = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> =\r\n      template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const [validated, foreign] = validateRecursive(\r\n        templateValue as T,\r\n        optionsValue,\r\n        doWriteErrors,\r\n        propPrefix + prop\r\n      );\r\n      validatedOptions[prop] = validated as any;\r\n      optionsCopy[prop] = foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        validatedOptions[prop] = optionsValue;\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${\r\n            errorEnumStrings.length > 0\r\n              ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].`\r\n              : ''\r\n          }`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return [validatedOptions, optionsCopy]; // optionsCopy equals now to foreign options\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a tuple which looks like:\r\n * [\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n * ]\r\n * @param template The template according to which the options object shall be validated.\r\n * @param options The options object which shall be validated.\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  template: OptionsTemplate<T>,\r\n  options: PartialOptions<T>,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => validateRecursive<T>(template, options, doWriteErrors);\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n","import { OSPlugin } from 'plugins';\r\nimport {\r\n  OSOptions,\r\n  ResizeBehavior,\r\n  OverflowBehavior,\r\n  VisibilityBehavior,\r\n  AutoHideBehavior,\r\n} from 'options';\r\nimport {\r\n  validateOptions,\r\n  OptionsTemplate,\r\n  OptionsTemplateValue,\r\n  optionsTemplateTypes as oTypes,\r\n} from 'plugins/optionsValidation/validation';\r\nimport { PartialOptions } from 'typings';\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst booleanAllowedValues: OptionsTemplateValue<boolean> = oTypes.boolean;\r\nconst arrayNullValues: OptionsTemplateValue<Array<unknown> | null> = [oTypes.array, oTypes.null];\r\nconst stringArrayNullAllowedValues: OptionsTemplateValue<string | ReadonlyArray<string> | null> = [\r\n  oTypes.string,\r\n  oTypes.array,\r\n  oTypes.null,\r\n];\r\nconst resizeAllowedValues: OptionsTemplateValue<ResizeBehavior> = 'none both horizontal vertical';\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> =\r\n  'hidden scroll visible visible-hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> =\r\n  'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> =\r\n  'never scroll leavemove';\r\n\r\nconst optionsTemplate: OptionsTemplate<OSOptions> = {\r\n  resize: resizeAllowedValues, // none || both  || horizontal || vertical || n || b ||\r\n  paddingAbsolute: booleanAllowedValues, // true || false\r\n  updating: {\r\n    elementEvents: arrayNullValues, // array of tuples || null\r\n    attributes: arrayNullValues,\r\n    debounce: [oTypes.number, oTypes.array, oTypes.null], // number || number array || null\r\n  },\r\n  overflow: {\r\n    x: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n    y: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n  },\r\n  scrollbars: {\r\n    visibility: scrollbarsVisibilityAllowedValues, // visible || hidden || auto || v ||\r\n    autoHide: scrollbarsAutoHideAllowedValues, // never || scroll || leave || move ||\r\n    autoHideDelay: numberAllowedValues, // number\r\n    dragScroll: booleanAllowedValues, // true || false\r\n    clickScroll: booleanAllowedValues, // true || false\r\n    touch: booleanAllowedValues, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: booleanAllowedValues, // true || false\r\n    dynHeight: booleanAllowedValues, // true || false\r\n    inheritedAttrs: stringArrayNullAllowedValues, // string || array || nul\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanAllowedValues, // true || false\r\n    initialize: booleanAllowedValues, // true || false\r\n  },\r\n  callbacks: {\r\n    onUpdated: [oTypes.function, oTypes.null],\r\n  },\r\n};\r\n\r\nexport type OptionsValidationPluginInstance = {\r\n  _: (options: PartialOptions<OSOptions>, doWriteErrors?: boolean) => PartialOptions<OSOptions>;\r\n};\r\n\r\nexport const optionsValidationPluginName = '__osOptionsValidationPlugin';\r\n\r\nexport const optionsValidationPlugin: OSPlugin<OptionsValidationPluginInstance> = [\r\n  optionsValidationPluginName,\r\n  {\r\n    _: (options: PartialOptions<OSOptions>, doWriteErrors?: boolean) => {\r\n      const [validated, foreign] = validateOptions(optionsTemplate, options, doWriteErrors);\r\n      return { ...foreign, ...validated };\r\n    },\r\n  },\r\n];\r\n","import { OverlayScrollbars } from 'overlayscrollbars';\r\n\r\nconst targets: Set<Element> = new Set();\r\nconst targetInstanceMap: WeakMap<Element, OverlayScrollbars> = new WeakMap();\r\n\r\n/**\r\n * Adds the given OverlayScrollbars instance to the given element.\r\n * @param target The element which is the target of the OverlayScrollbars instance.\r\n * @param osInstance The OverlayScrollbars instance.\r\n */\r\nexport const addInstance = (target: Element, osInstance: OverlayScrollbars): void => {\r\n  targetInstanceMap.set(target, osInstance);\r\n  targets.add(target);\r\n};\r\n\r\n/**\r\n * Removes a OverlayScrollbars instance from the given element.\r\n * @param target The element from which its OverlayScrollbars instance shall be removed.\r\n */\r\nexport const removeInstance = (target: Element): void => {\r\n  targetInstanceMap.delete(target);\r\n  targets.delete(target);\r\n};\r\n\r\n/**\r\n * Gets the OverlayScrollbars from the given element or undefined if it doesn't have one.\r\n * @param target The element of which its OverlayScrollbars instance shall be get.\r\n */\r\nexport const getInstance = (target: Element): OverlayScrollbars | undefined =>\r\n  targetInstanceMap.get(target);\r\n\r\n/**\r\n * Gets a Map which represents all active OverayScrollbars instances.\r\n * The Key is the element and the value is the instance.\r\n */\r\nexport const allInstances = (): ReadonlyMap<Element, OverlayScrollbars> => {\r\n  const validTargetInstanceMap: Map<Element, OverlayScrollbars> = new Map();\r\n\r\n  targets.forEach((target: Element) => {\r\n    /* istanbul ignore else */\r\n    if (targetInstanceMap.has(target)) {\r\n      validTargetInstanceMap.set(target, targetInstanceMap.get(target)!);\r\n    }\r\n  });\r\n\r\n  targets.clear();\r\n\r\n  validTargetInstanceMap.forEach((instance: OverlayScrollbars, validTarget: Element) => {\r\n    targets.add(validTarget);\r\n  });\r\n\r\n  return validTargetInstanceMap;\r\n};\r\n","import { OSOptions } from 'options';\r\nimport { createEventListenerHub, XY } from 'support';\r\nimport { PartialOptions } from 'typings';\r\nimport type {\r\n  InitialEventListeners,\r\n  AddEventListener,\r\n  RemoveEventListener,\r\n  TriggerEventListener,\r\n  EventListener,\r\n} from 'support/eventListeners';\r\n/*\r\nonScrollStart               : null,\r\nonScroll                    : null,\r\nonScrollStop                : null,\r\nonOverflowChanged           : null,\r\nonOverflowAmountChanged     : null, // fusion with onOverflowChanged\r\nonDirectionChanged          : null, // gone\r\nonContentSizeChanged        : null, // gone\r\nonHostSizeChanged           : null, // gone\r\n*/\r\n\r\nexport interface OnUpdatedEventListenerArgs {\r\n  updateHints: {\r\n    sizeChanged: boolean;\r\n    hostMutation: boolean;\r\n    contentMutation: boolean;\r\n    directionChanged: boolean;\r\n    heightIntrinsicChanged: boolean;\r\n  };\r\n  changedOptions: PartialOptions<OSOptions>;\r\n  force: boolean;\r\n}\r\n\r\nexport interface OnOverflowChangedEventListenerArgs {\r\n  overflow: XY<boolean>; // whether there is an overflow\r\n  scrollableOverflow: XY<boolean>; // whether there is an scrollable overflow\r\n  amount: XY<number>; // the overflow amount in pixel\r\n  previous: {\r\n    overflow: XY<boolean>;\r\n    scrollableOverflow: XY<boolean>;\r\n    amount: XY<number>;\r\n  };\r\n}\r\n\r\nexport interface OSEventListenersNameArgsMap {\r\n  initialized: undefined;\r\n  initializationWithdrawn: undefined;\r\n  overflowChanged: OnOverflowChangedEventListenerArgs;\r\n  updated: OnUpdatedEventListenerArgs;\r\n  destroyed: undefined;\r\n}\r\n\r\nexport type OSEventListener<\r\n  N extends Extract<keyof OSEventListenersNameArgsMap, string> = Extract<\r\n    keyof OSEventListenersNameArgsMap,\r\n    string\r\n  >\r\n> = EventListener<OSEventListenersNameArgsMap, N>;\r\n\r\nexport type AddOSEventListener = AddEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type RemoveOSEventListener = RemoveEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type TriggerOSEventListener = TriggerEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type InitialOSEventListeners = InitialEventListeners<OSEventListenersNameArgsMap>;\r\n\r\nexport const createOSEventListenerHub = (initialEventListeners?: InitialOSEventListeners) =>\r\n  createEventListenerHub(initialEventListeners);\r\n","import { OSTarget, OSInitializationObject, PartialOptions } from 'typings';\r\nimport { assignDeep, isEmptyObject, each, isFunction, keys, isHTMLElement, WH, XY } from 'support';\r\nimport { createStructureSetup, createScrollbarsSetup } from 'setups';\r\nimport { getOptionsDiff, OSOptions, ReadonlyOSOptions } from 'options';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  getPlugins,\r\n  addPlugin,\r\n  optionsValidationPluginName,\r\n  OSPlugin,\r\n  OptionsValidationPluginInstance,\r\n} from 'plugins';\r\nimport { addInstance, getInstance, removeInstance } from 'instances';\r\nimport {\r\n  createOSEventListenerHub,\r\n  InitialOSEventListeners,\r\n  AddOSEventListener,\r\n  RemoveOSEventListener,\r\n} from 'eventListeners';\r\n\r\nexport interface OverlayScrollbarsStatic {\r\n  (\r\n    target: OSTarget | OSInitializationObject,\r\n    options?: PartialOptions<OSOptions>,\r\n    eventListeners?: InitialOSEventListeners\r\n  ): OverlayScrollbars;\r\n\r\n  extend(osPlugin: OSPlugin | OSPlugin[]): void;\r\n}\r\n\r\nexport interface OverlayScrollbars {\r\n  options(): OSOptions;\r\n  options(newOptions?: PartialOptions<OSOptions>): OSOptions;\r\n\r\n  update(force?: boolean): void;\r\n  destroy(): void;\r\n\r\n  state(): any;\r\n\r\n  on: AddOSEventListener;\r\n  off: RemoveOSEventListener;\r\n}\r\n\r\nconst createOverflowChangedArgs = (overflowAmount: WH<number>, overflowScroll: XY<boolean>) => ({\r\n  amount: {\r\n    x: overflowAmount.w,\r\n    y: overflowAmount.h,\r\n  },\r\n  overflow: {\r\n    x: overflowAmount.w > 0,\r\n    y: overflowAmount.h > 0,\r\n  },\r\n  scrollableOverflow: assignDeep({}, overflowScroll),\r\n});\r\n\r\nexport const OverlayScrollbars: OverlayScrollbarsStatic = (\r\n  target,\r\n  options?,\r\n  eventListeners?\r\n): OverlayScrollbars => {\r\n  const {\r\n    _getDefaultOptions,\r\n    _nativeScrollbarIsOverlaid,\r\n    _addListener: addEnvListener,\r\n  } = getEnvironment();\r\n  const plugins = getPlugins();\r\n  const instanceTarget = isHTMLElement(target) ? target : target.target;\r\n  const potentialInstance = getInstance(instanceTarget);\r\n  if (potentialInstance) {\r\n    return potentialInstance;\r\n  }\r\n\r\n  const optionsValidationPlugin = plugins[\r\n    optionsValidationPluginName\r\n  ] as OptionsValidationPluginInstance;\r\n  const validateOptions = (newOptions?: PartialOptions<OSOptions>) => {\r\n    const opts = newOptions || {};\r\n    const validate = optionsValidationPlugin && optionsValidationPlugin._;\r\n    return validate ? validate(opts, true) : opts;\r\n  };\r\n  const currentOptions: ReadonlyOSOptions = assignDeep(\r\n    {},\r\n    _getDefaultOptions(),\r\n    validateOptions(options)\r\n  );\r\n  const [addEvent, removeEvent, triggerEvent] = createOSEventListenerHub(eventListeners);\r\n\r\n  if (\r\n    _nativeScrollbarIsOverlaid.x &&\r\n    _nativeScrollbarIsOverlaid.y &&\r\n    !currentOptions.nativeScrollbarsOverlaid.initialize\r\n  ) {\r\n    triggerEvent('initializationWithdrawn');\r\n  }\r\n\r\n  const [updateStructure, structureState, destroyStructure] = createStructureSetup(\r\n    target,\r\n    currentOptions\r\n  );\r\n  const [updateScrollbars, , destroyScrollbars] = createScrollbarsSetup(\r\n    target,\r\n    currentOptions,\r\n    structureState._elements\r\n  );\r\n\r\n  const update = (changedOptions: PartialOptions<OSOptions>, force?: boolean) => {\r\n    updateStructure(changedOptions, force);\r\n    updateScrollbars(changedOptions, force);\r\n  };\r\n\r\n  structureState._addOnUpdatedListener((updateHints, changedOptions, force) => {\r\n    const {\r\n      _sizeChanged,\r\n      _contentMutation,\r\n      _hostMutation,\r\n      _directionChanged,\r\n      _heightIntrinsicChanged,\r\n      _overflowAmountChanged,\r\n      _overflowScrollChanged,\r\n    } = updateHints;\r\n    const { _viewportOverflowAmount, _viewportOverflowScroll } = structureState();\r\n\r\n    if (_overflowAmountChanged || _overflowScrollChanged) {\r\n      triggerEvent(\r\n        'overflowChanged',\r\n        assignDeep(\r\n          {},\r\n          createOverflowChangedArgs(_viewportOverflowAmount, _viewportOverflowScroll),\r\n          {\r\n            previous: createOverflowChangedArgs(_viewportOverflowAmount!, _viewportOverflowScroll!),\r\n          }\r\n        )\r\n      );\r\n    }\r\n\r\n    triggerEvent('updated', {\r\n      updateHints: {\r\n        sizeChanged: _sizeChanged,\r\n        contentMutation: _contentMutation,\r\n        hostMutation: _hostMutation,\r\n        directionChanged: _directionChanged,\r\n        heightIntrinsicChanged: _heightIntrinsicChanged,\r\n      },\r\n      changedOptions,\r\n      force,\r\n    });\r\n  });\r\n\r\n  const removeEnvListener = addEnvListener(update.bind(0, {}, true));\r\n\r\n  const instance: OverlayScrollbars = {\r\n    options(newOptions?: PartialOptions<OSOptions>) {\r\n      if (newOptions) {\r\n        const changedOptions = getOptionsDiff(currentOptions, validateOptions(newOptions));\r\n\r\n        if (!isEmptyObject(changedOptions)) {\r\n          assignDeep(currentOptions, changedOptions);\r\n          update(changedOptions);\r\n        }\r\n      }\r\n      return currentOptions;\r\n    },\r\n    on: addEvent,\r\n    off: removeEvent,\r\n    state: () => ({\r\n      _overflowAmount: structureState()._viewportOverflowAmount,\r\n    }),\r\n    update(force?: boolean) {\r\n      update({}, force);\r\n    },\r\n    destroy: () => {\r\n      removeInstance(instanceTarget);\r\n      removeEnvListener();\r\n      removeEvent();\r\n\r\n      destroyScrollbars();\r\n      destroyStructure();\r\n\r\n      triggerEvent('destroyed');\r\n    },\r\n  };\r\n\r\n  each(keys(plugins), (pluginName) => {\r\n    const pluginInstance = plugins[pluginName];\r\n    if (isFunction(pluginInstance)) {\r\n      pluginInstance(OverlayScrollbars, instance);\r\n    }\r\n  });\r\n\r\n  instance.update(true);\r\n\r\n  addInstance(instanceTarget, instance);\r\n\r\n  triggerEvent('initialized');\r\n\r\n  return instance;\r\n};\r\n\r\nOverlayScrollbars.extend = addPlugin;\r\n"],"names":["createCache","options","update","_initialValue","_equal","_alwaysUpdateValues","_value","_previous","cacheUpdateContextual","newValue","force","curr","newVal","changed","cacheUpdateIsolated","getCurrentCache","ElementNodeType","Node","ELEMENT_NODE","Object","prototype","toString","hasOwnProperty","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","Set","forEach","value","elm","isEmptyArray","runEach","args","runFn","fn","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","getSetProp","topLeft","fallback","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","insertedNodes","insertAfter","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","firstLetterToUpper","str","charAt","toUpperCase","slice","getDummyStyle","style","cssPrefixes","jsPrefixes","jsCache","cssCache","cssProperty","uppercasedName","elmStyle","prefix","prefixWithoutDashes","resultPossibilities","resultPossibility","jsAPI","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","removeClass","remove","addClass","add","bind","diffClass","classNameA","classNameB","classNameASplit","split","classNameBSplit","tempObj","equal","a","b","props","propMutation","compareA","compareB","equalWH","equalXY","equalTRBL","equalBCRWH","round","Math","clearTimeouts","id","clearTimeout","noop","debounce","functionToDebounce","timeoutId","maxTimeoutId","prevArguments","latestArguments","_timeout","_maxDelay","_mergeParams","setT","setTimeout","invokeFunctionToDebounce","mergeParms","flush","debouncedFn","arguments","finalTimeout","hasTimeout","finalMaxWait","hasMaxWait","setTimeoutFn","mergeParamsResult","invokedArgs","boundInvoke","_flush","cssNumber","opacity","zindex","parseToZeroOrNumber","toFloat","num","parseFloat","parseInt","Number","isNaN","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","setCSSVal","setProperty","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","topRightBottomLeft","propertyPrefix","propertySuffix","finalPrefix","finalSuffix","top","right","bottom","left","t","r","l","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","fractionalSize","cssHeight","cssWidth","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","off","listener","capture","eventName","removeEventListener","on","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","stopPropagation","preventDefault","stopAndPrevent","x","y","absoluteCoordinates","rect","pageYOffset","pageXOffset","manageListener","createEventListenerHub","initialEventListeners","events","Map","removeEvent","eventSet","currListener","clear","addEvent","set","triggerEvent","event","initialListenerKeys","getPropByPath","path","o","createOptionCheck","changedOptions","createState","initialState","state","newState","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameViewportArrange","classNameContent","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","classNameScrollbar","classNameScrollbarHorizontal","classNameScrollbarVertical","classNameScrollbarTrack","classNameScrollbarHandle","stringify","JSON","_","Error","defaultOptions","resize","paddingAbsolute","updating","elementEvents","attributes","overflow","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","clickScroll","touch","textarea","dynWidth","dynHeight","inheritedAttrs","nativeScrollbarsOverlaid","show","initialize","callbacks","onUpdated","getOptionsDiff","currOptions","newOptions","diff","optionsKeys","concat","optionKey","currOptionValue","newOptionValue","isDiff","environmentInstance","abs","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","getNativeScrollbarSize","body","measureElm","measureElmChild","cSize","oSize","fSize","getNativeScrollbarStyling","testElm","revertClass","ex","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","revertFbxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","revertFbxGlueMax","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","getDefaultInitializationStrategy","nativeScrollbarStyling","_host","_viewport","_padding","_content","_scrollbarsSlot","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","updateNativeScrollbarSizeCache","getNativeScrollbarSizeCache","nativeScrollbarSize","nativeScrollbarIsOverlaid","initializationStrategy","defaultDefaultOptions","env","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_cssCustomProperties","_rtlScrollBehavior","_flexboxGlue","_addListener","delete","_getInitializationStrategy","_setInitializationStrategy","newInitializationStrategy","_getDefaultOptions","_setDefaultOptions","newDefaultOptions","_defaultInitializationStrategy","_defaultDefaultOptions","size","dpr","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","scrollbarSize","scrollbarSizeChanged","getEnvironment","contentArrangeCounter","unwrap","createUniqueViewportArrangeElement","create","staticCreationFromStrategy","initializationValue","strategy","elementClass","dynamicCreationFromStrategy","takeInitializationValue","createStructureSetupElements","hostInitializationStrategy","viewportInitializationStrategy","paddingInitializationStrategy","contentInitializationStrategy","targetIsElm","targetStructureInitialization","targetElement","isTextarea","isBody","ownerDocument","bodyElm","wnd","defaultView","evaluatedTargetObj","_target","host","viewport","padding","content","_viewportArrange","_windowElm","_documentElm","_htmlElm","_bodyElm","_isTextarea","_isBody","_targetIsElm","generatedElements","elementIsGenerated","destroyFns","isTextareaHostGenerated","targetContents","contentSlot","createTrinsicUpdate","structureSetupElements","getState","updateHints","_heightIntrinsic","_heightIntrinsicChanged","height","display","_sizeChanged","_contentMutation","createPaddingUpdate","setState","updatePaddingCache","currentPaddingCache","checkOption","paddingChanged","_directionIsRTL","_directionChanged","paddingAbsoluteChanged","contentMutation","paddingStyleChanged","paddingRelative","paddingHorizontal","paddingVertical","paddingStyle","marginRight","marginBottom","marginLeft","width","viewportStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","_paddingAbsolute","_viewportPaddingStyle","_paddingStyleChanged","max","overlaidScrollbarsHideOffset","whCacheOptions","xyCacheOptions","setAxisOverflowStyle","horizontal","overflowAmount","behavior","styleObj","overflowKey","behaviorIsVisible","behaviorIsVisibleHidden","behaviorIsScroll","hasOverflow","_visible","_behavior","getOverflowAmount","viewportScrollSize","viewportClientSize","sizeFraction","condition","raw","amount","createOverflowUpdate","doViewportArrange","updateSizeFraction","getCurrentSizeFraction","updateViewportScrollSizeCache","getCurrentViewportScrollSizeCache","updateOverflowAmountCache","getCurrentOverflowAmountCache","updateOverflowScrollCache","fixFlexboxGlue","viewportOverflowState","heightIntrinsic","_overflowScroll","_scrollbarsHideOffset","hostCssHeight","hostClientSize","isContentBox","fractionalClientHeight","subtractXScrollbar","getViewportOverflowState","showNativeOverlaidScrollbars","viewportStyleObj","overlaidX","overlaidY","determineOverflow","arrangeHideOffset","scroll","nonScrollbarStylingHideOffset","scrollbarsHideOffset","_scrollbarsHideOffsetArrange","setViewportOverflowState","xVisible","xVisibleBehavior","yVisible","yVisibleBehavior","arrangeViewport","directionIsRTL","arrangeX","arrangeY","hideOffsetX","hideOffsetY","viewportArrangeHorizontalPaddingKey","viewportArrangeHorizontalPaddingValue","viewportArrangeVerticalPaddingValue","fractionalContentWidth","fractionalContenHeight","arrangeSize","sheet","cssRules","insertRule","ruleStyle","hideNativeScrollbars","viewportArrange","viewportPaddingStyle","horizontalMarginKey","viewportHorizontalPaddingKey","horizontalMarginValue","verticalMarginValue","horizontalPaddingValue","verticalPaddingValue","undoViewportArrange","finalViewportOverflowState","finalPaddingStyle","assignProps","prevStyle","_hostMutation","showNativeOverlaidScrollbarsOption","showNativeOverlaidScrollbarsChanged","adjustFlexboxGlue","sizeFractionCache","viewportScrollSizeCache","overflowAmuntCache","preMeasureViewportOverflowState","redoViewportArrange","undoViewportArrangeOverflowState","sizeFractionChanged","viewportScrollSizeChanged","viewportContentSize","arrangedViewportScrollSize","arrangedViewportClientSize","overflowAmountChanged","overflowChanged","viewportArranged","overflowScroll","overflowScrollChanged","_viewportOverflowScroll","_viewportOverflowAmount","_overflowAmountChanged","_overflowScrollChanged","applyForceToCache","cacheValues","prepareUpdateHints","leading","adaptive","finalAdaptive","objKeys","leadingValue","adaptiveValue","createStructureSetupUpdate","updateSegments","initialUpdateHints","acc","adjustScrollOffset","scrollOffsetX","scrollOffsetY","adaptivedUpdateHints","updateSegment","animationStartEventName","scrollEventName","scrollAmount","getElmDirectionIsRTL","domRectHasDimensions","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","getIsDirectionRTL","currVal","updateResizeObserverContentRectCache","onSizeChangedCallbackProxy","sizeChangedContext","isResizeObserverCall","hasDirectionCache","skip","appear","doDirectionScroll","pop","contentRect","currRContentRect","prevContentRect","hasDimensions","hadDimensions","rtl","_directionIsRTLCache","appearCallback","directionIsRTLCache","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionIsRTLCache","directionIsRTLCacheValues","directionIsRTLChanged","isHeightIntrinsic","ioEntryOrSize","isIntersecting","intersectionRatio","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","updateHeightIntrinsicCache","triggerOnTrinsicChangedCallback","updateValue","heightIntrinsicChanged","intersectionObserverInstance","entries","root","onSizeChanged","newSize","createEventContentChange","eventContentChange","map","destroyed","destroy","updateElements","getElements","eventElmList","elements","entry","entryEventNames","entryOff","WeakMap","createDOMObserver","isContentObserver","isConnected","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetChange","_ignoreNestedTargetChange","_ignoreContentChange","destroyEventContentChange","updateEventContentChangeElements","finalAttributes","finalStyleChangingAttributes","observedAttributes","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributeOldValue","attributeFilter","subtree","childList","characterData","takeRecords","ignorePrefix","viewportAttrsFromTarget","baseStyleChangingAttrsTextarea","baseStyleChangingAttrs","addedOrRemovedClass","createStructureSetupObservers","structureSetupUpdate","debounceTimeout","debounceMaxDelay","contentMutationObserver","contentMutationObserverAttr","structureSetupUpdateWithDebouncedAdaptiveUpdateHints","prev","prevSizeChanged","prevHostMutation","prevContentMutation","currSizeChanged","currvHostMutation","currContentMutation","merged","updateViewportAttrsFromHost","attribute","hostAttr","onTrinsicChanged","heightIntrinsicCache","updateFn","directionChanged","onContentMutation","contentChangedTroughEvent","onHostMutation","destroyTrinsicObserver","destroySizeObserver","destroyHostMutationObserver","elementEventsChanged","attributesChanged","debounceValue","debounceChanged","updateContentMutationObserver","timeout","maxWait","initialStructureSetupUpdateState","createStructureSetup","checkOptionsFallback","onUpdatedListeners","getUpdateState","runOnUpdatedListeners","destroyElements","updateStructure","updateObservers","destroyObservers","structureSetupState","_addOnUpdatedListener","_elements","generateScrollbarDOM","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","createScrollbarsSetupElements","environmentScrollbarSlot","initializationScrollbarSlot","scrollbarsSlot","initializationScrollbarSlotResult","evaluatedScrollbarSlot","horizontalScrollbarStructure","verticalScrollbarStructure","horizontalScrollbar","verticalScrollbar","_horizontalScrollbarStructure","_verticalScrollbarStructure","createScrollbarsSetup","scrollbarsSetupState","console","log","pluginRegistry","getPlugins","addPlugin","addedPlugin","plugin","_extends","module","assign","exports","__esModule","templateTypePrefixSuffix","optionsTemplateTypes","numberAllowedValues","oTypes","number","booleanAllowedValues","boolean","arrayNullValues","null","stringArrayNullAllowedValues","string","resizeAllowedValues","overflowAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","function","optionsValidationPluginName","targets","targetInstanceMap","addInstance","osInstance","removeInstance","getInstance","createOSEventListenerHub","createOverflowChangedArgs","scrollableOverflow","OverlayScrollbars","eventListeners","addEnvListener","plugins","instanceTarget","potentialInstance","optionsValidationPlugin","validateOptions","opts","validate","currentOptions","structureState","destroyStructure","updateScrollbars","destroyScrollbars","previous","sizeChanged","hostMutation","removeEnvListener","instance","_overflowAmount","pluginName","pluginInstance","extend"],"mappings":"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"}