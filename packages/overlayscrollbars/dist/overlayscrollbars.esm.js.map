{"version":3,"file":"overlayscrollbars.esm.js","sources":["../src/support/cache.ts","../src/support/utils/types.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/attribute.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/dom/class.ts","../src/support/utils/equal.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/dom/offset.ts","../src/support/eventListeners.ts","../src/setups/setups.ts","../src/classnames.ts","../src/options.ts","../src/environment.ts","../src/setups/structureSetup/structureSetup.elements.ts","../src/setups/structureSetup/updateSegments/trinsicUpdateSegment.ts","../src/setups/structureSetup/updateSegments/paddingUpdateSegment.ts","../src/setups/structureSetup/updateSegments/overflowUpdateSegment.ts","../src/setups/structureSetup/structureSetup.update.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/setups/structureSetup/structureSetup.observers.ts","../src/setups/structureSetup/structureSetup.ts","../src/setups/scrollbarsSetup/scrollbarsSetup.elements.ts","../src/setups/scrollbarsSetup/scrollbarsSetup.ts","../src/plugins/plugins.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/plugins/optionsValidation/validation.ts","../src/plugins/optionsValidation/optionsValidation.ts","../src/instances.ts","../src/eventListeners.ts","../src/overlayscrollbars.ts"],"sourcesContent":["export interface CacheOptions<Value> {\r\n  // initial value of _value.\r\n  _initialValue: Value;\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<Value>;\r\n  // If true always updates _value and _previous, otherwise they update only when they changed.\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport type CacheValues<T> = [value: T, changed: boolean, previous?: T];\r\n\r\nexport type EqualCachePropFunction<Value> = (currentVal: Value, newVal: Value) => boolean;\r\n\r\nexport type CacheUpdater<Value> = (current: Value, previous?: Value) => Value;\r\n\r\nexport type UpdateCacheContextual<Value> = (newValue: Value, force?: boolean) => CacheValues<Value>;\r\n\r\nexport type UpdateCache<Value> = (force?: boolean) => CacheValues<Value>;\r\n\r\nexport type GetCurrentCache<Value> = (force?: boolean) => CacheValues<Value>;\r\n\r\nexport type Cache<Value> = [UpdateCache<Value>, GetCurrentCache<Value>];\r\n\r\nexport type CacheContextual<Value> = [UpdateCacheContextual<Value>, GetCurrentCache<Value>];\r\n\r\nexport function createCache<Value>(options: CacheOptions<Value>): CacheContextual<Value>;\r\nexport function createCache<Value>(\r\n  options: CacheOptions<Value>,\r\n  update: CacheUpdater<Value>\r\n): Cache<Value>;\r\nexport function createCache<Value>(\r\n  options: CacheOptions<Value>,\r\n  update?: CacheUpdater<Value>\r\n): CacheContextual<Value> | Cache<Value> {\r\n  const { _initialValue, _equal, _alwaysUpdateValues } = options;\r\n  let _value: Value = _initialValue;\r\n  let _previous: Value | undefined;\r\n\r\n  const cacheUpdateContextual: UpdateCacheContextual<Value> = (newValue, force?) => {\r\n    const curr = _value;\r\n\r\n    const newVal = newValue;\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return [_value, changed, _previous];\r\n  };\r\n  const cacheUpdateIsolated: UpdateCache<Value> = (force?) =>\r\n    cacheUpdateContextual(update!(_value, _previous), force);\r\n\r\n  const getCurrentCache: GetCurrentCache<Value> = (force?: boolean) => [\r\n    _value,\r\n    !!force, // changed\r\n    _previous,\r\n  ];\r\n\r\n  return [update ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache] as\r\n    | CacheContextual<Value>\r\n    | Cache<Value>;\r\n}\r\n","import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) =>\r\n  isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: any[]) => any {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat)\r\n    ? length > 0 && isObject(obj)\r\n      ? length - 1 in obj\r\n      : true\r\n    : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(\r\n  obj: PlainObject,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: T[], item: T, fromIndex?: number): number =>\r\n  arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: T[], items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): T[] => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items)\r\n    ? Array.prototype.push.apply(array, items as T[])\r\n    : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr?: ArrayLike<T> | Set<T>) => {\r\n  if (Array.from && arr) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: T[] = [];\r\n\r\n  if (arr instanceof Set) {\r\n    arr.forEach((value) => {\r\n      push(result, value);\r\n    });\r\n  } else {\r\n    each(arr, (elm) => {\r\n      push(result, elm);\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: any[] | null | undefined): boolean =>\r\n  !!array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, args?: any[]): void => {\r\n  // eslint-disable-next-line prefer-spread\r\n  const runFn = (fn: RunEachItem) => fn && fn.apply(undefined, args || []);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean =>\r\n  Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W\r\n): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W,\r\n  object4: X\r\n): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W,\r\n  object4: X,\r\n  object5: Y\r\n): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(\r\n  elm: HTMLElement | null,\r\n  attrName: string,\r\n  value?: string\r\n): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | false | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> =>\r\n  elm ? from(elm.childNodes) : [];\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (\r\n  elm: InputElementType,\r\n  highBoundarySelector: string,\r\n  deepBoundarySelector: string\r\n): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | false | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (\r\n  parentElm: Node | false | null | undefined,\r\n  preferredAnchor: Node | null | undefined,\r\n  insertedElms: NodeCollection\r\n): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (\r\n  node: Node | null | undefined,\r\n  insertedNodes: NodeCollection\r\n): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = [\r\n  'WebKit',\r\n  'Moz',\r\n  'O',\r\n  'MS',\r\n  'webkit',\r\n  'moz',\r\n  'o',\r\n  'ms',\r\n];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without it, or and empty string if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n\r\n    // eslint-disable-next-line no-return-assign\r\n    return !(result = resultPossibilities.find(\r\n      (resultPossibility: string) => elmStyle[resultPossibility] !== undefined\r\n    ));\r\n  });\r\n\r\n  // eslint-disable-next-line no-return-assign\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported without it, or an empty string if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  // eslint-disable-next-line no-return-assign\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>(\r\n  'IntersectionObserver'\r\n);\r\nexport const ResizeObserverConstructor = jsAPI<typeof ResizeObserver>('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | false | null | undefined,\r\n  className: string,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | false | null | undefined, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | false | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n * @returns A function which removes the added class name(s).\r\n */\r\nexport const addClass = (\r\n  elm: Element | false | null | undefined,\r\n  className: string\r\n): (() => void) => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n  return removeClass.bind(0, elm, className);\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (\r\n  classNameA: string | null | undefined,\r\n  classNameB: string | null | undefined\r\n) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(\r\n  a: T | undefined,\r\n  b: T | undefined,\r\n  props: Array<keyof T>,\r\n  propMutation?: ((value: any) => any) | null | false\r\n): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      const compareA = propMutation ? propMutation(a[prop]) : a[prop];\r\n      const compareB = propMutation ? propMutation(b[prop]) : b[prop];\r\n      if (compareA !== compareB) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = <T>(a?: WH<T>, b?: WH<T>) => equal<WH<T>>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = <T>(a?: XY<T>, b?: XY<T>) => equal<XY<T>>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n\r\n/**\r\n * Compares two DOM Rects for their equality of their width and height properties\r\n * Also returns false if one of the DOM Rects is undefined or null.\r\n * @param a DOM Rect a.\r\n * @param b DOM Rect b.\r\n * @param round Whether the values should be rounded.\r\n */\r\nexport const equalBCRWH = (a?: DOMRect, b?: DOMRect, round?: boolean) =>\r\n  equal<DOMRect>(a, b, ['width', 'height'], round && ((value) => Math.round(value)));\r\n","import { isNumber, isFunction } from 'support/utils/types';\r\nimport { from } from 'support/utils/array';\r\nimport { rAF, cAF } from 'support/compatibility/apis';\r\n\r\nconst clearTimeouts = (id: number | undefined) => {\r\n  id && window.clearTimeout(id);\r\n  id && cAF!(id);\r\n};\r\n\r\ntype DebounceTiming = number | false | null | undefined;\r\n\r\nexport interface DebounceOptions<FunctionToDebounce extends (...args: any) => any> {\r\n  /**\r\n   * The timeout for debouncing. If null, no debounce is applied.\r\n   */\r\n  _timeout?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * A maximum amount of ms. before the function will be called even with debounce.\r\n   */\r\n  _maxDelay?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * Function which merges parameters for each canceled debounce.\r\n   * If parameters can't be merged the function will return null, otherwise it returns the merged parameters.\r\n   */\r\n  _mergeParams?: (\r\n    prev: Parameters<FunctionToDebounce>,\r\n    curr: Parameters<FunctionToDebounce>\r\n  ) => Parameters<FunctionToDebounce> | false | null | undefined;\r\n}\r\n\r\nexport interface Debounced<FunctionToDebounce extends (...args: any) => any> {\r\n  (...args: Parameters<FunctionToDebounce>): ReturnType<FunctionToDebounce>;\r\n  _flush(): void;\r\n}\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param options Options for debouncing.\r\n */\r\nexport const debounce = <FunctionToDebounce extends (...args: any) => any>(\r\n  functionToDebounce: FunctionToDebounce,\r\n  options?: DebounceOptions<FunctionToDebounce>\r\n): Debounced<FunctionToDebounce> => {\r\n  let timeoutId: number | undefined;\r\n  let maxTimeoutId: number | undefined;\r\n  let prevArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  let latestArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  const { _timeout, _maxDelay, _mergeParams } = options || {};\r\n  const setT = window.setTimeout;\r\n\r\n  const invokeFunctionToDebounce = function (args: IArguments) {\r\n    clearTimeouts(timeoutId);\r\n    clearTimeouts(maxTimeoutId);\r\n    maxTimeoutId = timeoutId = prevArguments = undefined;\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  const mergeParms = (\r\n    curr: Parameters<FunctionToDebounce>\r\n  ): Parameters<FunctionToDebounce> | false | null | undefined =>\r\n    _mergeParams && prevArguments ? _mergeParams(prevArguments, curr) : curr;\r\n\r\n  const flush = () => {\r\n    /* istanbul ignore next */\r\n    if (timeoutId) {\r\n      invokeFunctionToDebounce(mergeParms(latestArguments!) || latestArguments!);\r\n    }\r\n  };\r\n\r\n  const debouncedFn = function () {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    const args: Parameters<FunctionToDebounce> = from(arguments) as Parameters<FunctionToDebounce>;\r\n    const finalTimeout = isFunction(_timeout) ? _timeout() : _timeout;\r\n    const hasTimeout = isNumber(finalTimeout) && finalTimeout >= 0;\r\n\r\n    if (hasTimeout) {\r\n      const finalMaxWait = isFunction(_maxDelay) ? _maxDelay() : _maxDelay;\r\n      const hasMaxWait = isNumber(finalMaxWait) && finalMaxWait >= 0;\r\n      const setTimeoutFn = finalTimeout > 0 ? setT : rAF!;\r\n      const mergeParamsResult = mergeParms(args);\r\n      const invokedArgs = mergeParamsResult || args;\r\n      const boundInvoke = invokeFunctionToDebounce.bind(0, invokedArgs);\r\n\r\n      // if (!mergeParamsResult) {\r\n      //   invokeFunctionToDebounce(prevArguments || args);\r\n      // }\r\n\r\n      clearTimeouts(timeoutId);\r\n      // @ts-ignore\r\n      timeoutId = setTimeoutFn(boundInvoke, finalTimeout as number) as number;\r\n\r\n      if (hasMaxWait && !maxTimeoutId) {\r\n        maxTimeoutId = setT(flush, finalMaxWait as number);\r\n      }\r\n\r\n      prevArguments = latestArguments = invokedArgs;\r\n    } else {\r\n      invokeFunctionToDebounce(args);\r\n    }\r\n  };\r\n  debouncedFn._flush = flush;\r\n\r\n  return debouncedFn as Debounced<FunctionToDebounce>;\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray, isUndefined } from 'support/utils/types';\r\nimport { PlainObject, StyleObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\nconst cssNumber = {\r\n  // animationiterationcount: 1,\r\n  // columncount: 1,\r\n  // fillopacity: 1,\r\n  // flexgrow: 1,\r\n  // flexshrink: 1,\r\n  // fontweight: 1,\r\n  // lineheight: 1,\r\n  // order: 1,\r\n  // orphans: 1,\r\n  // widows: 1,\r\n  // zoom: 1,\r\n  opacity: 1,\r\n  zindex: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number =>\r\n  !cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val;\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null\r\n    ? computedStyle[prop] || computedStyle.getPropertyValue(prop)\r\n    : elm.style[prop];\r\nconst setCSSVal = (\r\n  elm: HTMLElement | false | null | undefined,\r\n  prop: string,\r\n  val: string | number\r\n): void => {\r\n  try {\r\n    if (elm) {\r\n      const { style: elmStyle } = elm;\r\n      if (!isUndefined(elmStyle[prop])) {\r\n        elmStyle[prop] = adaptCSSVal(prop, val);\r\n      } else {\r\n        elmStyle.setProperty(prop, val as string);\r\n      }\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps>\r\n): void;\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: string\r\n): string;\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: Array<string> | string\r\n): { [key: string]: string };\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps> | Array<string> | string\r\n): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns the top right bottom left values of the passed css property.\r\n * @param elm The element of which the values shall be returned.\r\n * @param propertyPrefix The css property prefix. (e.g. \"border\")\r\n * @param propertySuffix The css property suffix. (e.g. \"width\")\r\n */\r\nexport const topRightBottomLeft = (\r\n  elm?: HTMLElement | false | null | undefined,\r\n  propertyPrefix?: string,\r\n  propertySuffix?: string\r\n): TRBL => {\r\n  const finalPrefix = propertyPrefix ? `${propertyPrefix}-` : '';\r\n  const finalSuffix = propertySuffix ? `-${propertySuffix}` : '';\r\n  const top = `${finalPrefix}top${finalSuffix}`;\r\n  const right = `${finalPrefix}right${finalSuffix}`;\r\n  const bottom = `${finalPrefix}bottom${finalSuffix}`;\r\n  const left = `${finalPrefix}left${finalSuffix}`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { style } from 'support/dom/style';\r\n\r\nexport interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean =>\r\n  !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | false | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | false | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the fractional- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the fractional- width and height shall be returned.\r\n */\r\nexport const fractionalSize = (elm: HTMLElement | false | null | undefined): WH => {\r\n  const cssHeight = parseFloat(style(elm, 'height')) || 0;\r\n  const cssWidth = parseFloat(style(elm, 'height')) || 0;\r\n  return {\r\n    w: cssWidth - Math.round(cssWidth),\r\n    h: cssHeight - Math.round(cssHeight),\r\n  };\r\n};\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | false | null | undefined): boolean =>\r\n  elm ? elementHasDimensions(elm as HTMLElement) : false;\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  capture?: boolean\r\n): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event): void => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event): void => evt.preventDefault();\r\n\r\n/**\r\n * Shorthand for the stopPropagation and preventDefault event Method.\r\n * @param evt The event of which the stopPropagation and preventDefault methods shall be called.\r\n */\r\nexport const stopAndPrevent = (evt: Event): void =>\r\n  (stopPropagation(evt) as undefined) || (preventDefault(evt) as undefined);\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","import { isArray } from 'support/utils/types';\r\nimport { keys } from 'support/utils/object';\r\nimport { each, from } from 'support/utils/array';\r\n\r\nexport type EventListener<\r\n  NameArgsMap extends Record<string, any>,\r\n  Name extends Extract<keyof NameArgsMap, string> = Extract<keyof NameArgsMap, string>\r\n> = (...args: NameArgsMap[Name] extends undefined ? [] : [args: NameArgsMap[Name]]) => void;\r\n\r\nexport type EventListenerGroup<\r\n  NameArgsMap extends Record<string, any>,\r\n  Name extends Extract<keyof NameArgsMap, string> = Extract<keyof NameArgsMap, string>\r\n> = EventListener<NameArgsMap, Name> | EventListener<NameArgsMap, Name>[];\r\n\r\nexport type AddEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name: Name,\r\n  listener: EventListenerGroup<NameArgsMap, Name>\r\n) => () => void;\r\n\r\nexport type RemoveEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name?: Name,\r\n  listener?: EventListenerGroup<NameArgsMap, Name>\r\n) => void;\r\n\r\nexport type TriggerEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name: Name,\r\n  ...args: NameArgsMap[Name] extends undefined ? [] : [args: NameArgsMap[Name]]\r\n) => void;\r\n\r\nexport type InitialEventListeners<NameArgsMap extends Record<string, any>> = {\r\n  [K in Extract<keyof NameArgsMap, string>]?: EventListenerGroup<NameArgsMap, K>;\r\n};\r\n\r\nconst manageListener = <NameArgsMap extends Record<string, any>>(\r\n  callback: (listener?: EventListener<NameArgsMap>) => void,\r\n  listener?: EventListener<NameArgsMap> | EventListener<NameArgsMap>[]\r\n) => {\r\n  each(isArray(listener) ? listener : [listener], callback);\r\n};\r\n\r\nexport const createEventListenerHub = <NameArgsMap extends Record<string, any>>(\r\n  initialEventListeners?: InitialEventListeners<NameArgsMap>\r\n): [\r\n  AddEventListener<NameArgsMap>,\r\n  RemoveEventListener<NameArgsMap>,\r\n  TriggerEventListener<NameArgsMap>\r\n] => {\r\n  const events = new Map<Extract<keyof NameArgsMap, string>, Set<EventListener<NameArgsMap>>>();\r\n  const removeEvent: RemoveEventListener<NameArgsMap> = (name?, listener?) => {\r\n    if (name) {\r\n      const eventSet = events.get(name);\r\n      manageListener((currListener) => {\r\n        if (eventSet) {\r\n          eventSet[currListener ? 'delete' : 'clear'](currListener!);\r\n        }\r\n      }, listener as EventListenerGroup<NameArgsMap> | undefined);\r\n    } else {\r\n      events.forEach((eventSet) => {\r\n        eventSet.clear();\r\n      });\r\n      events.clear();\r\n    }\r\n  };\r\n  const addEvent: AddEventListener<NameArgsMap> = (name, listener) => {\r\n    const eventSet = events.get(name) || new Set();\r\n    events.set(name, eventSet);\r\n\r\n    manageListener((currListener) => {\r\n      currListener && eventSet.add(currListener);\r\n    }, listener as EventListenerGroup<NameArgsMap>);\r\n\r\n    return removeEvent.bind(0, name as any, listener as EventListenerGroup<NameArgsMap>);\r\n  };\r\n  const triggerEvent: TriggerEventListener<NameArgsMap> = (name, args?) => {\r\n    const eventSet = events.get(name);\r\n\r\n    each(from(eventSet), (event) => {\r\n      if (args) {\r\n        (event as (args: NameArgsMap[Extract<keyof NameArgsMap, string>]) => void)(args as any);\r\n      } else {\r\n        (event as () => void)();\r\n      }\r\n    });\r\n  };\r\n\r\n  const initialListenerKeys = keys(initialEventListeners) as Extract<keyof NameArgsMap, string>[];\r\n  each(initialListenerKeys, (key) => {\r\n    addEvent(key, initialEventListeners![key] as any);\r\n  });\r\n\r\n  return [addEvent, removeEvent, triggerEvent];\r\n};\r\n","import { assignDeep, hasOwnProperty } from 'support';\r\nimport type { OSOptions, ReadonlyOSOptions } from 'options';\r\nimport type { PartialOptions } from 'typings';\r\n\r\nexport type SetupElements<T extends Record<string, any>> = [elements: T, destroy: () => void];\r\n\r\nexport type SetupUpdate<T = void> = (\r\n  changedOptions: PartialOptions<OSOptions>,\r\n  force?: boolean\r\n) => T;\r\n\r\nexport type SetupUpdateCheckOption = <T>(path: string) => [value: T, changed: boolean];\r\n\r\nexport type SetupUpdateSegment<Hints extends Record<string, any>> = (\r\n  updateHints: Hints,\r\n  checkOption: SetupUpdateCheckOption,\r\n  force: boolean\r\n) => Partial<Hints> | void;\r\n\r\nexport type SetupState<T extends Record<string, any>> = [\r\n  get: () => T,\r\n  set: (newState: Partial<T>) => void\r\n];\r\n\r\nexport type Setup<DynamicState, StaticState extends Record<string, any> = Record<string, any>> = [\r\n  update: SetupUpdate,\r\n  state: (() => DynamicState) & StaticState,\r\n  destroy: () => void\r\n];\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj\r\n    ? path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj)\r\n    : undefined;\r\n\r\nexport const createOptionCheck =\r\n  (\r\n    options: ReadonlyOSOptions,\r\n    changedOptions: PartialOptions<OSOptions>,\r\n    force?: boolean\r\n  ): SetupUpdateCheckOption =>\r\n  (path: string) =>\r\n    [getPropByPath(options, path), force || getPropByPath(changedOptions, path) !== undefined];\r\n\r\nexport const createState = <S>(initialState: S): SetupState<S> => {\r\n  let state: S = initialState;\r\n  return [\r\n    () => state,\r\n    (newState: Partial<S>) => {\r\n      state = assignDeep({}, state, newState);\r\n    },\r\n  ];\r\n};\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const dataAttributeHost = 'data-overlayscrollbars';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameViewportArrange = `${classNameViewport}-arrange`;\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\nexport const classNameOverflowVisible = `os-overflow-visible`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n\r\nexport const classNameScrollbar = 'os-scrollbar';\r\nexport const classNameScrollbarHorizontal = `${classNameScrollbar}-horizontal`;\r\nexport const classNameScrollbarVertical = `${classNameScrollbar}-vertical`;\r\nexport const classNameScrollbarTrack = 'os-scrollbar-track';\r\nexport const classNameScrollbarHandle = 'os-scrollbar-handle';\r\n","import { assignDeep, each, isObject, keys, isArray, hasOwnProperty, isFunction } from 'support';\r\nimport { PartialOptions, ReadonlyOptions } from 'typings';\r\n\r\nconst stringify = (value: any) =>\r\n  JSON.stringify(value, (_, val) => {\r\n    if (isFunction(val)) {\r\n      throw new Error();\r\n    }\r\n    return val;\r\n  });\r\n\r\nexport type ResizeBehavior = 'none' | 'both' | 'horizontal' | 'vertical';\r\n\r\nexport type OverflowBehavior =\r\n  | 'hidden'\r\n  | 'scroll'\r\n  | 'visible'\r\n  | 'visible-hidden'\r\n  | 'visible-scroll';\r\n\r\nexport type VisibilityBehavior = 'visible' | 'hidden' | 'auto';\r\n\r\nexport type AutoHideBehavior = 'never' | 'scroll' | 'leave' | 'move';\r\n\r\nexport type ScrollBehavior = 'always' | 'ifneeded' | 'never';\r\n\r\nexport type BasicEventCallback = (this: any) => void;\r\n\r\nexport type ScrollEventCallback = (this: any, args?: UIEvent) => void;\r\n\r\nexport type OverflowChangedCallback = (this: any, args?: OverflowChangedArgs) => void;\r\n\r\nexport type OverflowAmountChangedCallback = (this: any, args?: OverflowAmountChangedArgs) => void;\r\n\r\nexport type DirectionChangedCallback = (this: any, args?: DirectionChangedArgs) => void;\r\n\r\nexport type SizeChangedCallback = (this: any, args?: SizeChangedArgs) => void;\r\n\r\nexport type UpdatedCallback = (this: any, args?: UpdatedArgs) => void;\r\n\r\nexport interface OSOptions {\r\n  resize: ResizeBehavior;\r\n  paddingAbsolute: boolean;\r\n  updating: {\r\n    elementEvents: Array<[string, string]> | null;\r\n    attributes: string[] | null;\r\n    debounce: number | [number, number] | null;\r\n  };\r\n  overflow: {\r\n    x: OverflowBehavior;\r\n    y: OverflowBehavior;\r\n  };\r\n  scrollbars: {\r\n    visibility: VisibilityBehavior;\r\n    autoHide: AutoHideBehavior;\r\n    autoHideDelay: number;\r\n    dragScroll: boolean;\r\n    clickScroll: boolean;\r\n    touch: boolean;\r\n  };\r\n  textarea: {\r\n    dynWidth: boolean;\r\n    dynHeight: boolean;\r\n    inheritedAttrs: string | Array<string> | null;\r\n  };\r\n  nativeScrollbarsOverlaid: {\r\n    show: boolean;\r\n    initialize: boolean;\r\n  };\r\n  callbacks: {\r\n    onUpdated: (() => any) | null;\r\n  };\r\n  /*\r\n  callbacks?: {\r\n    onInitialized?: BasicEventCallback | null;\r\n    onInitializationWithdrawn?: BasicEventCallback | null;\r\n    onDestroyed?: BasicEventCallback | null;\r\n    onScrollStart?: ScrollEventCallback | null;\r\n    onScroll?: ScrollEventCallback | null;\r\n    onScrollStop?: ScrollEventCallback | null;\r\n    onOverflowChanged?: OverflowChangedCallback | null;\r\n    onOverflowAmountChanged?: OverflowAmountChangedCallback | null;\r\n    onDirectionChanged?: DirectionChangedCallback | null;\r\n    onContentSizeChanged?: SizeChangedCallback | null;\r\n    onHostSizeChanged?: SizeChangedCallback | null;\r\n    onUpdated?: UpdatedCallback | null;\r\n  };\r\n  */\r\n}\r\n\r\nexport type ReadonlyOSOptions = ReadonlyOptions<OSOptions>;\r\n\r\nexport interface OverflowChangedArgs {\r\n  x: boolean;\r\n  y: boolean;\r\n  xScrollable: boolean;\r\n  yScrollable: boolean;\r\n  clipped: boolean;\r\n}\r\n\r\nexport interface OverflowAmountChangedArgs {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface DirectionChangedArgs {\r\n  isRTL: number;\r\n  dir: string;\r\n}\r\n\r\nexport interface SizeChangedArgs {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface UpdatedArgs {\r\n  forced: boolean;\r\n}\r\n\r\nexport const defaultOptions: OSOptions = {\r\n  resize: 'none', // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: false, // true || false\r\n  updating: {\r\n    elementEvents: [['img', 'load']], // array of tuples || null\r\n    attributes: null,\r\n    debounce: [0, 33], // number || number array || null\r\n  },\r\n  overflow: {\r\n    x: 'scroll', // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: 'scroll', // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  scrollbars: {\r\n    visibility: 'auto', // visible || hidden || auto || v || h || a\r\n    autoHide: 'never', // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: 800, // number\r\n    dragScroll: true, // true || false\r\n    clickScroll: false, // true || false\r\n    touch: true, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: false, // true || false\r\n    dynHeight: false, // true || false\r\n    inheritedAttrs: ['style', 'class'], // string || array || null\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: false, // true || false\r\n    initialize: false, // true || false\r\n  },\r\n  callbacks: {\r\n    onUpdated: null,\r\n  },\r\n};\r\n\r\nexport const getOptionsDiff = <T>(\r\n  currOptions: T,\r\n  newOptions: PartialOptions<T>\r\n): PartialOptions<T> => {\r\n  const diff: PartialOptions<T> = {};\r\n  const optionsKeys = keys(newOptions).concat(keys(currOptions));\r\n\r\n  each(optionsKeys, (optionKey) => {\r\n    const currOptionValue = currOptions[optionKey];\r\n    const newOptionValue = newOptions[optionKey];\r\n\r\n    if (isObject(currOptionValue) && isObject(newOptionValue)) {\r\n      assignDeep((diff[optionKey] = {}), getOptionsDiff(currOptionValue, newOptionValue));\r\n    } else if (hasOwnProperty(newOptions, optionKey) && newOptionValue !== currOptionValue) {\r\n      let isDiff = true;\r\n\r\n      if (isArray(currOptionValue) || isArray(newOptionValue)) {\r\n        try {\r\n          if (stringify(currOptionValue) === stringify(newOptionValue)) {\r\n            isDiff = false;\r\n          }\r\n        } catch {}\r\n      }\r\n\r\n      if (isDiff) {\r\n        diff[optionKey] = newOptionValue;\r\n      }\r\n    }\r\n  });\r\n\r\n  return diff;\r\n};\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  fractionalSize,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalBCRWH,\r\n  getBoundingClientRect,\r\n  assignDeep,\r\n  cssProperty,\r\n  createCache,\r\n  equalXY,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { OSOptions, defaultOptions } from 'options';\r\nimport { OSTargetElement, PartialOptions } from 'typings';\r\n\r\ntype StructureInitializationStrategyElementFn<T> =\r\n  | ((target: OSTargetElement) => HTMLElement | T)\r\n  | T;\r\n\r\ntype ScrollbarsInitializationStrategyElementFn<T> =\r\n  | ((target: OSTargetElement, host: HTMLElement, viewport: HTMLElement) => HTMLElement | T)\r\n  | T;\r\n\r\n/**\r\n * A Static element is an element which MUST be generated.\r\n * If null or undefined (or the returned result is null or undefined), the initialization function is generatig the element, otherwise\r\n * the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationStrategyStaticElement = StructureInitializationStrategyElementFn<\r\n  null | undefined\r\n>;\r\n\r\n/**\r\n * A Dynamic element is an element which CAN be generated.\r\n * If boolean (or the returned result is boolean), the generation of the element is forced (or not).\r\n * If the function returns and element, the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationStrategyDynamicElement =\r\n  StructureInitializationStrategyElementFn<boolean>;\r\n\r\nexport interface StructureInitializationStrategy {\r\n  _host: StructureInitializationStrategyStaticElement;\r\n  _viewport: StructureInitializationStrategyStaticElement;\r\n  _padding: StructureInitializationStrategyDynamicElement;\r\n  _content: StructureInitializationStrategyDynamicElement;\r\n}\r\n\r\nexport interface ScrollbarsInitializationStrategy {\r\n  /**\r\n   * The scrollbars slot.  If null or undefined (or the returned result is null or undefined), the initialization function is deciding the element, otherwise\r\n   * the element returned by the function acts as the scrollbars slot.\r\n   */\r\n  _scrollbarsSlot: ScrollbarsInitializationStrategyElementFn<null | undefined>;\r\n}\r\n\r\nexport interface InitializationStrategy\r\n  extends StructureInitializationStrategy,\r\n    ScrollbarsInitializationStrategy {}\r\n\r\nexport type DefaultInitializationStrategy = {\r\n  [K in keyof InitializationStrategy]: Extract<\r\n    InitializationStrategy[K],\r\n    boolean | null | undefined\r\n  >;\r\n};\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  readonly _nativeScrollbarSize: XY;\r\n  readonly _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  readonly _nativeScrollbarStyling: boolean;\r\n  readonly _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  readonly _flexboxGlue: boolean;\r\n  readonly _cssCustomProperties: boolean;\r\n  readonly _defaultInitializationStrategy: DefaultInitializationStrategy;\r\n  readonly _defaultDefaultOptions: OSOptions;\r\n  _addListener(listener: OnEnvironmentChanged): () => void;\r\n  _getInitializationStrategy(): InitializationStrategy;\r\n  _setInitializationStrategy(newInitializationStrategy: Partial<InitializationStrategy>): void;\r\n  _getDefaultOptions(): OSOptions;\r\n  _setDefaultOptions(newDefaultOptions: PartialOptions<OSOptions>): void;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst getNativeScrollbarSize = (\r\n  body: HTMLElement,\r\n  measureElm: HTMLElement,\r\n  measureElmChild: HTMLElement\r\n): XY => {\r\n  appendChildren(body, measureElm);\r\n\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n  const fSize = fractionalSize(measureElmChild);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h + fSize.h,\r\n    y: oSize.w - cSize.w + fSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  const revertClass = addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, cssProperty('scrollbar-width')) === 'none' ||\r\n      window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') ===\r\n        'none';\r\n  } catch (ex) {}\r\n  revertClass();\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (\r\n  parentElm: HTMLElement,\r\n  childElm: HTMLElement\r\n): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  const revertFbxGlue = addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const minOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMin = equalBCRWH(minOffsetsize, minOffsetsizeParent, true);\r\n\r\n  const revertFbxGlueMax = addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const maxOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMax = equalBCRWH(maxOffsetsize, maxOffsetsizeParent, true);\r\n\r\n  revertFbxGlue();\r\n  revertFbxGlueMax();\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst getDefaultInitializationStrategy = (\r\n  nativeScrollbarStyling: boolean\r\n): DefaultInitializationStrategy => ({\r\n  _host: null,\r\n  _viewport: null,\r\n  _padding: !nativeScrollbarStyling,\r\n  _content: false,\r\n  _scrollbarsSlot: null,\r\n});\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const [updateNativeScrollbarSizeCache, getNativeScrollbarSizeCache] = createCache({\r\n    _initialValue: getNativeScrollbarSize(body, envElm, envChildElm),\r\n    _equal: equalXY,\r\n  });\r\n  const [nativeScrollbarSize] = getNativeScrollbarSizeCache();\r\n  const nativeScrollbarStyling = getNativeScrollbarStyling(envElm);\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n  const initializationStrategy = getDefaultInitializationStrategy(nativeScrollbarStyling);\r\n  const defaultDefaultOptions = assignDeep({}, defaultOptions);\r\n\r\n  const env: Environment = {\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _cssCustomProperties: style(envElm, 'zIndex') === '-1',\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener) {\r\n      onChangedListener.add(listener);\r\n      return () => onChangedListener.delete(listener);\r\n    },\r\n    _getInitializationStrategy: assignDeep<InitializationStrategy, InitializationStrategy>.bind(\r\n      0,\r\n      {} as InitializationStrategy,\r\n      initializationStrategy\r\n    ),\r\n    _setInitializationStrategy(newInitializationStrategy) {\r\n      assignDeep(initializationStrategy, newInitializationStrategy);\r\n    },\r\n    _getDefaultOptions: assignDeep<OSOptions, OSOptions>.bind(\r\n      0,\r\n      {} as OSOptions,\r\n      defaultDefaultOptions\r\n    ),\r\n    _setDefaultOptions(newDefaultOptions) {\r\n      assignDeep(defaultDefaultOptions, newDefaultOptions);\r\n    },\r\n    _defaultInitializationStrategy: assignDeep({}, initializationStrategy),\r\n    _defaultDefaultOptions: assignDeep({}, defaultDefaultOptions),\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const [scrollbarSize, scrollbarSizeChanged] = updateNativeScrollbarSizeCache(\r\n            getNativeScrollbarSize(body, envElm, envChildElm)\r\n          );\r\n\r\n          assignDeep(environmentInstance._nativeScrollbarSize, scrollbarSize); // keep the object same!\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSizeChanged) {\r\n            runEach(onChangedListener);\r\n          }\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  indexOf,\r\n  removeElements,\r\n  removeClass,\r\n  push,\r\n  runEach,\r\n  insertBefore,\r\n  attr,\r\n  isBoolean,\r\n  isFunction,\r\n  keys,\r\n  removeAttr,\r\n} from 'support';\r\nimport {\r\n  dataAttributeHost,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameViewportArrange,\r\n  classNameContent,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport {\r\n  getEnvironment,\r\n  StructureInitializationStrategyStaticElement,\r\n  StructureInitializationStrategyDynamicElement,\r\n} from 'environment';\r\nimport { OSTarget, OSTargetElement, StructureInitialization } from 'typings';\r\n\r\nexport type StructureSetupElements = [targetObj: StructureSetupElementsObj, destroy: () => void];\r\n\r\nexport interface StructureSetupElementsObj {\r\n  _target: OSTargetElement;\r\n  _host: HTMLElement;\r\n  _viewport: HTMLElement;\r\n  _padding: HTMLElement | false;\r\n  _content: HTMLElement | false;\r\n  _viewportArrange: HTMLStyleElement | false;\r\n  // ctx ----\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: Document;\r\n  _targetIsElm: boolean;\r\n}\r\n\r\nlet contentArrangeCounter = 0;\r\n\r\nconst unwrap = (elm: HTMLElement | false | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nconst createUniqueViewportArrangeElement = (): HTMLStyleElement | false => {\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _cssCustomProperties } =\r\n    getEnvironment();\r\n  /* istanbul ignore next */\r\n  const create =\r\n    !_cssCustomProperties &&\r\n    !_nativeScrollbarStyling &&\r\n    (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const result = create ? document.createElement('style') : false;\r\n\r\n  if (result) {\r\n    attr(result, 'id', `${classNameViewportArrange}-${contentArrangeCounter}`);\r\n    contentArrangeCounter++;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst staticCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | undefined,\r\n  strategy: StructureInitializationStrategyStaticElement\r\n): HTMLElement => {\r\n  const result =\r\n    initializationValue ||\r\n    (isFunction(strategy) ? strategy(target) : (strategy as null | undefined));\r\n  return result || createDiv();\r\n};\r\n\r\nconst dynamicCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | boolean | undefined,\r\n  strategy: StructureInitializationStrategyDynamicElement\r\n): HTMLElement | false => {\r\n  const takeInitializationValue = isBoolean(initializationValue) || initializationValue;\r\n  const result = takeInitializationValue\r\n    ? (initializationValue as boolean | HTMLElement)\r\n    : isFunction(strategy)\r\n    ? strategy(target)\r\n    : strategy;\r\n\r\n  return result === true ? createDiv() : result;\r\n};\r\n\r\nconst addDataAttrHost = (elm: HTMLElement) => {\r\n  attr(elm, dataAttributeHost, '');\r\n  return removeAttr.bind(0, elm, dataAttributeHost);\r\n};\r\n\r\nexport const createStructureSetupElements = (target: OSTarget): StructureSetupElements => {\r\n  const { _getInitializationStrategy, _nativeScrollbarStyling } = getEnvironment();\r\n  const {\r\n    _host: hostInitializationStrategy,\r\n    _viewport: viewportInitializationStrategy,\r\n    _padding: paddingInitializationStrategy,\r\n    _content: contentInitializationStrategy,\r\n  } = _getInitializationStrategy();\r\n  const targetIsElm = isHTMLElement(target);\r\n  const targetStructureInitialization = target as StructureInitialization;\r\n  const targetElement = targetIsElm\r\n    ? (target as OSTargetElement)\r\n    : targetStructureInitialization.target;\r\n  const isTextarea = is(targetElement, 'textarea');\r\n  const isBody = !isTextarea && is(targetElement, 'body');\r\n  const ownerDocument = targetElement!.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const evaluatedTargetObj: StructureSetupElementsObj = {\r\n    _target: targetElement,\r\n    _host: isTextarea\r\n      ? staticCreationFromStrategy(\r\n          targetElement,\r\n          targetStructureInitialization.host,\r\n          hostInitializationStrategy\r\n        )\r\n      : (targetElement as HTMLElement),\r\n    _viewport: staticCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.viewport,\r\n      viewportInitializationStrategy\r\n    ),\r\n    _padding: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.padding,\r\n      paddingInitializationStrategy\r\n    ),\r\n    _content: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.content,\r\n      contentInitializationStrategy\r\n    ),\r\n    _viewportArrange: createUniqueViewportArrangeElement(),\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n    _targetIsElm: targetIsElm,\r\n  };\r\n  const generatedElements = keys(evaluatedTargetObj).reduce((arr, key: string) => {\r\n    const value = evaluatedTargetObj[key];\r\n    return push(arr, value && !parent(value) ? value : false);\r\n  }, [] as HTMLElement[]);\r\n  const elementIsGenerated = (elm: HTMLElement | false) =>\r\n    elm ? indexOf(generatedElements, elm) > -1 : null;\r\n  const { _target, _host, _padding, _viewport, _content, _viewportArrange } = evaluatedTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextareaHostGenerated = isTextarea && elementIsGenerated(_host);\r\n  const targetContents = isTextarea\r\n    ? _target\r\n    : contents(\r\n        [_content, _viewport, _padding, _host, _target].find(\r\n          (elm) => elementIsGenerated(elm) === false\r\n        )\r\n      );\r\n  const contentSlot = _content || _viewport;\r\n  const removeHostDataAttr = addDataAttrHost(_host);\r\n  const removePaddingClass = addClass(_padding, classNamePadding);\r\n  const removeViewportClass = addClass(_viewport, classNameViewport);\r\n  const removeContentClass = addClass(_content, classNameContent);\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  appendChildren(contentSlot, targetContents);\r\n  appendChildren(_host, _padding);\r\n  appendChildren(_padding || _host, _viewport);\r\n  appendChildren(_viewport, _content);\r\n\r\n  push(destroyFns, () => {\r\n    if (targetIsElm) {\r\n      appendChildren(_host, contents(contentSlot));\r\n      removeElements(_padding || _viewport);\r\n      removeHostDataAttr();\r\n    } else {\r\n      if (elementIsGenerated(_content)) {\r\n        unwrap(_content);\r\n      }\r\n      if (elementIsGenerated(_viewport)) {\r\n        unwrap(_viewport);\r\n      }\r\n      if (elementIsGenerated(_padding)) {\r\n        unwrap(_padding);\r\n      }\r\n      removeHostDataAttr();\r\n      removePaddingClass();\r\n      removeViewportClass();\r\n      removeContentClass();\r\n    }\r\n  });\r\n\r\n  if (_nativeScrollbarStyling) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  }\r\n  if (_viewportArrange) {\r\n    insertBefore(_viewport, _viewportArrange);\r\n    push(destroyFns, removeElements.bind(0, _viewportArrange));\r\n  }\r\n\r\n  return [evaluatedTargetObj, runEach.bind(0, destroyFns)];\r\n};\r\n","import { style } from 'support';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the trinsic behavior of the content element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createTrinsicUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const { _content } = structureSetupElements;\r\n  const [getState] = state;\r\n\r\n  return (updateHints) => {\r\n    const { _heightIntrinsic } = getState();\r\n    const { _heightIntrinsicChanged } = updateHints;\r\n\r\n    if (_heightIntrinsicChanged) {\r\n      style(_content, {\r\n        height: _heightIntrinsic ? '' : '100%',\r\n        display: _heightIntrinsic ? '' : 'inline',\r\n      });\r\n    }\r\n\r\n    return {\r\n      _sizeChanged: _heightIntrinsicChanged,\r\n      _contentMutation: _heightIntrinsicChanged,\r\n    };\r\n  };\r\n};\r\n","import { createCache, topRightBottomLeft, equalTRBL, style, assignDeep } from 'support';\r\nimport { StyleObject } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the padding styling of the padding and viewport element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createPaddingUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const [getState, setState] = state;\r\n  const { _host, _padding, _viewport } = structureSetupElements;\r\n  const [updatePaddingCache, currentPaddingCache] = createCache(\r\n    {\r\n      _equal: equalTRBL,\r\n      _initialValue: topRightBottomLeft(),\r\n    },\r\n    topRightBottomLeft.bind(0, _host, 'padding', '')\r\n  );\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    let [padding, paddingChanged] = currentPaddingCache(force);\r\n    const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n    const { _directionIsRTL } = getState();\r\n    const { _sizeChanged, _contentMutation, _directionChanged } = updateHints;\r\n    const [paddingAbsolute, paddingAbsoluteChanged] = checkOption('paddingAbsolute');\r\n    const contentMutation = !_flexboxGlue && _contentMutation;\r\n\r\n    if (_sizeChanged || paddingChanged || contentMutation) {\r\n      [padding, paddingChanged] = updatePaddingCache(force);\r\n    }\r\n\r\n    const paddingStyleChanged = paddingAbsoluteChanged || _directionChanged || paddingChanged;\r\n\r\n    if (paddingStyleChanged) {\r\n      // if there is no padding element and no scrollbar styling, paddingAbsolute isn't supported\r\n      const paddingRelative = !paddingAbsolute || (!_padding && !_nativeScrollbarStyling);\r\n      const paddingHorizontal = padding.r + padding.l;\r\n      const paddingVertical = padding.t + padding.b;\r\n\r\n      const paddingStyle: StyleObject = {\r\n        marginRight: paddingRelative && !_directionIsRTL ? -paddingHorizontal : 0,\r\n        marginBottom: paddingRelative ? -paddingVertical : 0,\r\n        marginLeft: paddingRelative && _directionIsRTL ? -paddingHorizontal : 0,\r\n        top: paddingRelative ? -padding.t : 0,\r\n        right: paddingRelative ? (_directionIsRTL ? -padding.r : 'auto') : 0,\r\n        left: paddingRelative ? (_directionIsRTL ? 'auto' : -padding.l) : 0,\r\n        width: paddingRelative ? `calc(100% + ${paddingHorizontal}px)` : '',\r\n      };\r\n      const viewportStyle: StyleObject = {\r\n        paddingTop: paddingRelative ? padding.t : 0,\r\n        paddingRight: paddingRelative ? padding.r : 0,\r\n        paddingBottom: paddingRelative ? padding.b : 0,\r\n        paddingLeft: paddingRelative ? padding.l : 0,\r\n      };\r\n\r\n      // if there is no padding element apply the style to the viewport element instead\r\n      style(_padding || _viewport, paddingStyle);\r\n      style(_viewport, viewportStyle);\r\n\r\n      setState({\r\n        _padding: padding,\r\n        _paddingAbsolute: !paddingRelative,\r\n        _viewportPaddingStyle: _padding\r\n          ? viewportStyle\r\n          : assignDeep({}, paddingStyle, viewportStyle),\r\n      });\r\n    }\r\n\r\n    return {\r\n      _paddingStyleChanged: paddingStyleChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  keys,\r\n  attr,\r\n  WH,\r\n  XY,\r\n  style,\r\n  scrollSize,\r\n  fractionalSize,\r\n  equalWH,\r\n  addClass,\r\n  removeClass,\r\n  clientSize,\r\n  noop,\r\n  each,\r\n  equalXY,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameViewportArrange,\r\n  classNameViewportScrollbarStyling,\r\n  classNameOverflowVisible,\r\n  dataAttributeHost,\r\n} from 'classnames';\r\nimport type { StyleObject } from 'typings';\r\nimport type { OverflowBehavior } from 'options';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\ninterface ViewportOverflowState {\r\n  _scrollbarsHideOffset: XY<number>;\r\n  _scrollbarsHideOffsetArrange: XY<boolean>;\r\n  _overflowScroll: XY<boolean>;\r\n}\r\n\r\ntype UndoViewportArrangeResult = [\r\n  redoViewportArrange: () => void,\r\n  overflowState?: ViewportOverflowState\r\n];\r\n\r\nconst { max } = Math;\r\nconst strVisible = 'visible';\r\nconst overlaidScrollbarsHideOffset = 42;\r\nconst whCacheOptions = {\r\n  _equal: equalWH,\r\n  _initialValue: { w: 0, h: 0 },\r\n};\r\nconst xyCacheOptions = {\r\n  _equal: equalXY,\r\n  _initialValue: { x: false, y: false },\r\n};\r\n\r\nconst getOverflowAmount = (\r\n  viewportScrollSize: WH<number>,\r\n  viewportClientSize: WH<number>,\r\n  sizeFraction: WH<number>\r\n) => {\r\n  const tollerance = window.devicePixelRatio % 1 !== 0 ? 1 : 0;\r\n  const amount = {\r\n    w: max(0, viewportScrollSize.w - viewportClientSize.w - max(0, sizeFraction.w)),\r\n    h: max(0, viewportScrollSize.h - viewportClientSize.h - max(0, sizeFraction.h)),\r\n  };\r\n\r\n  return {\r\n    w: amount.w > tollerance ? amount.w : 0,\r\n    h: amount.h > tollerance ? amount.h : 0,\r\n  };\r\n};\r\n\r\nconst conditionalClass = (\r\n  elm: Element | false | null | undefined,\r\n  classNames: string,\r\n  condition: boolean\r\n) => (condition ? addClass(elm, classNames) : removeClass(elm, classNames));\r\n\r\nconst overflowIsVisible = (overflowBehavior: OverflowBehavior) =>\r\n  overflowBehavior.indexOf(strVisible) === 0;\r\n\r\n/**\r\n * Lifecycle with the responsibility to set the correct overflow and scrollbar hiding styles of the viewport element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createOverflowUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const [getState, setState] = state;\r\n  const { _host, _padding, _viewport, _viewportArrange } = structureSetupElements;\r\n  const {\r\n    _nativeScrollbarSize,\r\n    _flexboxGlue,\r\n    _nativeScrollbarStyling,\r\n    _nativeScrollbarIsOverlaid,\r\n  } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n\r\n  const [updateSizeFraction, getCurrentSizeFraction] = createCache<WH<number>>(\r\n    whCacheOptions,\r\n    fractionalSize.bind(0, _host)\r\n  );\r\n\r\n  const [updateViewportScrollSizeCache, getCurrentViewportScrollSizeCache] = createCache<\r\n    WH<number>\r\n  >(whCacheOptions, scrollSize.bind(0, _viewport));\r\n\r\n  const [updateOverflowAmountCache, getCurrentOverflowAmountCache] =\r\n    createCache<WH<number>>(whCacheOptions);\r\n\r\n  const [updateOverflowScrollCache] = createCache<XY<boolean>>(xyCacheOptions);\r\n\r\n  /**\r\n   * Applies a fixed height to the viewport so it can't overflow or underflow the host element.\r\n   * @param viewportOverflowState The current overflow state.\r\n   * @param heightIntrinsic Whether the host height is intrinsic or not.\r\n   */\r\n  const fixFlexboxGlue = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    heightIntrinsic: boolean\r\n  ) => {\r\n    style(_viewport, {\r\n      height: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      const { _paddingAbsolute, _padding: padding } = getState();\r\n      const { _overflowScroll, _scrollbarsHideOffset } = viewportOverflowState;\r\n      const fSize = fractionalSize(_host);\r\n      const hostClientSize = clientSize(_host);\r\n\r\n      // padding subtraction is only needed if padding is absolute or if viewport is content-box\r\n      const isContentBox = style(_viewport, 'boxSizing') === 'content-box';\r\n      const paddingVertical = _paddingAbsolute || isContentBox ? padding.b + padding.t : 0;\r\n      const subtractXScrollbar = !(_nativeScrollbarIsOverlaid.x && isContentBox);\r\n\r\n      style(_viewport, {\r\n        height:\r\n          hostClientSize.h +\r\n          fSize.h +\r\n          (_overflowScroll.x && subtractXScrollbar ? _scrollbarsHideOffset.x : 0) -\r\n          paddingVertical,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the current overflow state of the viewport.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param viewportStyleObj The viewport style object where the overflow scroll property can be read of, or undefined if shall be determined.\r\n   * @returns A object which contains informations about the current overflow state.\r\n   */\r\n  const getViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    viewportStyleObj?: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const { x: overlaidX, y: overlaidY } = _nativeScrollbarIsOverlaid;\r\n    const determineOverflow = !viewportStyleObj;\r\n    const arrangeHideOffset =\r\n      !_nativeScrollbarStyling && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const styleObj = determineOverflow\r\n      ? style(_viewport, ['overflowX', 'overflowY'])\r\n      : viewportStyleObj;\r\n    const scroll = {\r\n      x: styleObj.overflowX === 'scroll',\r\n      y: styleObj.overflowY === 'scroll',\r\n    };\r\n    const nonScrollbarStylingHideOffset = {\r\n      x: overlaidX ? arrangeHideOffset : _nativeScrollbarSize.x,\r\n      y: overlaidY ? arrangeHideOffset : _nativeScrollbarSize.y,\r\n    };\r\n    const scrollbarsHideOffset = {\r\n      x: scroll.x && !_nativeScrollbarStyling ? nonScrollbarStylingHideOffset.x : 0,\r\n      y: scroll.y && !_nativeScrollbarStyling ? nonScrollbarStylingHideOffset.y : 0,\r\n    };\r\n\r\n    return {\r\n      _overflowScroll: scroll,\r\n      _scrollbarsHideOffsetArrange: {\r\n        x: overlaidX && !!arrangeHideOffset,\r\n        y: overlaidY && !!arrangeHideOffset,\r\n      },\r\n      _scrollbarsHideOffset: scrollbarsHideOffset,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Sets the overflow property of the viewport and calculates the a overflow state according to the new parameters.\r\n   * @param showNativeOverlaidScrollbars Whether to show natively overlaid scrollbars.\r\n   * @param overflowAmount The overflow amount.\r\n   * @param overflow The overflow behavior according to the options.\r\n   * @param viewportStyleObj The viewport style object to which the overflow style shall be applied.\r\n   * @returns A object which represents the newly set overflow state.\r\n   */\r\n  const setViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    hasOverflow: XY<boolean>,\r\n    overflowOption: XY<OverflowBehavior>,\r\n    viewportStyleObj: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const setAxisOverflowStyle = (behavior: OverflowBehavior, hasOverflowAxis: boolean) => {\r\n      const overflowVisible = overflowIsVisible(behavior);\r\n      return [\r\n        hasOverflowAxis && !overflowVisible ? behavior : '',\r\n        (hasOverflowAxis && overflowVisible && behavior.replace(`${strVisible}-`, '')) || '',\r\n      ];\r\n    };\r\n\r\n    const [overflowX, visibleBehaviorX] = setAxisOverflowStyle(overflowOption.x, hasOverflow.x);\r\n    const [overflowY, visibleBehaviorY] = setAxisOverflowStyle(overflowOption.y, hasOverflow.y);\r\n\r\n    viewportStyleObj.overflowX = visibleBehaviorX && overflowY ? visibleBehaviorX : overflowX;\r\n    viewportStyleObj.overflowY = visibleBehaviorY && overflowX ? visibleBehaviorY : overflowY;\r\n\r\n    return getViewportOverflowState(showNativeOverlaidScrollbars, viewportStyleObj);\r\n  };\r\n\r\n  /**\r\n   * Sets the styles of the viewport arrange element.\r\n   * @param viewportOverflowState The viewport overflow state according to which the scrollbars shall be hidden.\r\n   * @param viewportScrollSize The content scroll size.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @returns A boolean which indicates whether the viewport arrange element was adjusted.\r\n   */\r\n  const arrangeViewport = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    viewportScrollSize: WH<number>,\r\n    sizeFraction: WH<number>,\r\n    directionIsRTL: boolean\r\n  ) => {\r\n    if (doViewportArrange) {\r\n      const { _viewportPaddingStyle } = getState();\r\n      const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n      const viewportArrangeHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n        ? 'paddingRight'\r\n        : 'paddingLeft';\r\n      const viewportArrangeHorizontalPaddingValue = _viewportPaddingStyle[\r\n        viewportArrangeHorizontalPaddingKey\r\n      ] as number;\r\n      const viewportArrangeVerticalPaddingValue = _viewportPaddingStyle.paddingTop as number;\r\n      const fractionalContentWidth = viewportScrollSize.w + sizeFraction.w;\r\n      const fractionalContenHeight = viewportScrollSize.h + sizeFraction.h;\r\n      const arrangeSize = {\r\n        w:\r\n          hideOffsetY && arrangeY\r\n            ? `${hideOffsetY + fractionalContentWidth - viewportArrangeHorizontalPaddingValue}px`\r\n            : '',\r\n        h:\r\n          hideOffsetX && arrangeX\r\n            ? `${hideOffsetX + fractionalContenHeight - viewportArrangeVerticalPaddingValue}px`\r\n            : '',\r\n      };\r\n\r\n      // adjust content arrange / before element\r\n      if (_viewportArrange) {\r\n        const { sheet } = _viewportArrange;\r\n        if (sheet) {\r\n          const { cssRules } = sheet;\r\n          if (cssRules) {\r\n            if (!cssRules.length) {\r\n              sheet.insertRule(\r\n                `#${attr(_viewportArrange, 'id')} + .${classNameViewportArrange}::before {}`,\r\n                0\r\n              );\r\n            }\r\n\r\n            // @ts-ignore\r\n            const ruleStyle = cssRules[0].style;\r\n\r\n            ruleStyle.width = arrangeSize.w;\r\n            ruleStyle.height = arrangeSize.h;\r\n          }\r\n        }\r\n      } else {\r\n        style<'--os-vaw' | '--os-vah'>(_viewport, {\r\n          '--os-vaw': arrangeSize.w,\r\n          '--os-vah': arrangeSize.h,\r\n        });\r\n      }\r\n    }\r\n\r\n    return doViewportArrange;\r\n  };\r\n\r\n  /**\r\n   * Hides the native scrollbars according to the passed parameters.\r\n   * @param viewportOverflowState The viewport overflow state.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportArrange Whether special styles related to the viewport arrange strategy shall be applied.\r\n   * @param viewportStyleObj The viewport style object to which the needed styles shall be applied.\r\n   */\r\n  const hideNativeScrollbars = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    directionIsRTL: boolean,\r\n    viewportArrange: boolean,\r\n    viewportStyleObj: StyleObject\r\n  ) => {\r\n    const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n    const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n    const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n    const { _viewportPaddingStyle: viewportPaddingStyle } = getState();\r\n    const horizontalMarginKey: keyof StyleObject = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const viewportHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n      ? 'paddingLeft'\r\n      : 'paddingRight';\r\n    const horizontalMarginValue = viewportPaddingStyle[horizontalMarginKey] as number;\r\n    const verticalMarginValue = viewportPaddingStyle.marginBottom as number;\r\n    const horizontalPaddingValue = viewportPaddingStyle[viewportHorizontalPaddingKey] as number;\r\n    const verticalPaddingValue = viewportPaddingStyle.paddingBottom as number;\r\n\r\n    // horizontal\r\n    viewportStyleObj.width = `calc(100% + ${hideOffsetY + horizontalMarginValue * -1}px)`;\r\n    viewportStyleObj[horizontalMarginKey] = -hideOffsetY + horizontalMarginValue;\r\n\r\n    // vertical\r\n    viewportStyleObj.marginBottom = -hideOffsetX + verticalMarginValue;\r\n\r\n    // viewport arrange additional styles\r\n    if (viewportArrange) {\r\n      viewportStyleObj[viewportHorizontalPaddingKey] =\r\n        horizontalPaddingValue + (arrangeY ? hideOffsetY : 0);\r\n      viewportStyleObj.paddingBottom = verticalPaddingValue + (arrangeX ? hideOffsetX : 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes all styles applied because of the viewport arrange strategy.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportOverflowState The currentviewport overflow state or undefined if it has to be determined.\r\n   * @returns A object with a function which applies all the removed styles and the determined viewport vverflow state.\r\n   */\r\n  const undoViewportArrange = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    directionIsRTL: boolean,\r\n    viewportOverflowState?: ViewportOverflowState\r\n  ): UndoViewportArrangeResult => {\r\n    if (doViewportArrange) {\r\n      const finalViewportOverflowState =\r\n        viewportOverflowState || getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      const { _viewportPaddingStyle: viewportPaddingStyle } = getState();\r\n      const { _scrollbarsHideOffsetArrange } = finalViewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const finalPaddingStyle: StyleObject = {};\r\n      const assignProps = (props: string) =>\r\n        each(props.split(' '), (prop) => {\r\n          finalPaddingStyle[prop] = viewportPaddingStyle[prop];\r\n        });\r\n\r\n      if (arrangeX) {\r\n        assignProps('marginBottom paddingTop paddingBottom');\r\n      }\r\n\r\n      if (arrangeY) {\r\n        assignProps('marginLeft marginRight paddingLeft paddingRight');\r\n      }\r\n\r\n      const prevStyle = style(_viewport, keys(finalPaddingStyle));\r\n\r\n      removeClass(_viewport, classNameViewportArrange);\r\n\r\n      if (!_flexboxGlue) {\r\n        finalPaddingStyle.height = '';\r\n      }\r\n\r\n      style(_viewport, finalPaddingStyle);\r\n\r\n      return [\r\n        () => {\r\n          hideNativeScrollbars(\r\n            finalViewportOverflowState,\r\n            directionIsRTL,\r\n            doViewportArrange,\r\n            prevStyle\r\n          );\r\n          style(_viewport, prevStyle);\r\n          addClass(_viewport, classNameViewportArrange);\r\n        },\r\n        finalViewportOverflowState,\r\n      ];\r\n    }\r\n    return [noop];\r\n  };\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    const {\r\n      _sizeChanged,\r\n      _hostMutation,\r\n      _contentMutation,\r\n      _paddingStyleChanged,\r\n      _heightIntrinsicChanged,\r\n      _directionChanged,\r\n    } = updateHints;\r\n    const { _heightIntrinsic, _directionIsRTL } = getState();\r\n    const [showNativeOverlaidScrollbarsOption, showNativeOverlaidScrollbarsChanged] =\r\n      checkOption<boolean>('nativeScrollbarsOverlaid.show');\r\n    const [overflow, overflowChanged] = checkOption<XY<OverflowBehavior>>('overflow');\r\n    const showNativeOverlaidScrollbars =\r\n      showNativeOverlaidScrollbarsOption &&\r\n      _nativeScrollbarIsOverlaid.x &&\r\n      _nativeScrollbarIsOverlaid.y;\r\n    const adjustFlexboxGlue =\r\n      !_flexboxGlue &&\r\n      (_sizeChanged ||\r\n        _contentMutation ||\r\n        _hostMutation ||\r\n        showNativeOverlaidScrollbarsChanged ||\r\n        _heightIntrinsicChanged);\r\n    const overflowXVisible = overflowIsVisible(overflow.x);\r\n    const overflowYVisible = overflowIsVisible(overflow.y);\r\n    const overflowVisible = overflowXVisible || overflowYVisible;\r\n\r\n    let sizeFractionCache = getCurrentSizeFraction(force);\r\n    let viewportScrollSizeCache = getCurrentViewportScrollSizeCache(force);\r\n    let overflowAmuntCache = getCurrentOverflowAmountCache(force);\r\n    let updateHintsReturn;\r\n    let preMeasureViewportOverflowState: ViewportOverflowState | undefined;\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      conditionalClass(_viewport, classNameViewportScrollbarStyling, !showNativeOverlaidScrollbars);\r\n    }\r\n\r\n    if (adjustFlexboxGlue) {\r\n      preMeasureViewportOverflowState = getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      fixFlexboxGlue(preMeasureViewportOverflowState, _heightIntrinsic);\r\n    }\r\n\r\n    if (overflowVisible) {\r\n      removeClass(_viewport, classNameOverflowVisible);\r\n    }\r\n\r\n    if (\r\n      _sizeChanged ||\r\n      _paddingStyleChanged ||\r\n      _contentMutation ||\r\n      _directionChanged ||\r\n      showNativeOverlaidScrollbarsChanged\r\n    ) {\r\n      const [redoViewportArrange, undoViewportArrangeOverflowState] = undoViewportArrange(\r\n        showNativeOverlaidScrollbars,\r\n        _directionIsRTL,\r\n        preMeasureViewportOverflowState\r\n      );\r\n      const [sizeFraction, sizeFractionChanged] = (sizeFractionCache = updateSizeFraction(force));\r\n      const [viewportScrollSize, viewportScrollSizeChanged] = (viewportScrollSizeCache =\r\n        updateViewportScrollSizeCache(force));\r\n      const viewportclientSize = clientSize(_viewport);\r\n      let arrangedViewportScrollSize = viewportScrollSize;\r\n      let arrangedViewportClientSize = viewportclientSize;\r\n\r\n      redoViewportArrange();\r\n\r\n      // if re measure is required (only required if content arrange strategy is used)\r\n      if (\r\n        (viewportScrollSizeChanged || sizeFractionChanged || showNativeOverlaidScrollbarsChanged) &&\r\n        undoViewportArrangeOverflowState &&\r\n        !showNativeOverlaidScrollbars &&\r\n        arrangeViewport(\r\n          undoViewportArrangeOverflowState,\r\n          viewportScrollSize,\r\n          sizeFraction,\r\n          _directionIsRTL\r\n        )\r\n      ) {\r\n        arrangedViewportClientSize = clientSize(_viewport);\r\n        arrangedViewportScrollSize = scrollSize(_viewport);\r\n      }\r\n\r\n      overflowAmuntCache = updateOverflowAmountCache(\r\n        getOverflowAmount(\r\n          {\r\n            w: max(viewportScrollSize.w, arrangedViewportScrollSize.w),\r\n            h: max(viewportScrollSize.h, arrangedViewportScrollSize.h),\r\n          }, // scroll size\r\n          {\r\n            w: arrangedViewportClientSize.w + max(0, viewportclientSize.w - viewportScrollSize.w),\r\n            h: arrangedViewportClientSize.h + max(0, viewportclientSize.h - viewportScrollSize.h),\r\n          }, // client size\r\n          sizeFraction\r\n        ),\r\n        force\r\n      );\r\n    }\r\n\r\n    const [overflowAmount, overflowAmountChanged] = overflowAmuntCache;\r\n    const [viewportScrollSize, viewportScrollSizeChanged] = viewportScrollSizeCache;\r\n    const [sizeFraction, sizeFractionChanged] = sizeFractionCache;\r\n    const hasOverflow = {\r\n      x: overflowAmount.w > 0,\r\n      y: overflowAmount.h > 0,\r\n    };\r\n    const removeClipping =\r\n      (overflowXVisible && overflowYVisible && (hasOverflow.x || hasOverflow.y)) ||\r\n      (overflowXVisible && hasOverflow.x && !hasOverflow.y) ||\r\n      (overflowYVisible && hasOverflow.y && !hasOverflow.x);\r\n\r\n    if (\r\n      _paddingStyleChanged ||\r\n      _directionChanged ||\r\n      sizeFractionChanged ||\r\n      viewportScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: StyleObject = {\r\n        marginRight: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n        width: '',\r\n        overflowY: '',\r\n        overflowX: '',\r\n      };\r\n      const viewportOverflowState = setViewportOverflowState(\r\n        showNativeOverlaidScrollbars,\r\n        hasOverflow,\r\n        overflow,\r\n        viewportStyle\r\n      );\r\n      const viewportArranged = arrangeViewport(\r\n        viewportOverflowState,\r\n        viewportScrollSize,\r\n        sizeFraction,\r\n        _directionIsRTL\r\n      );\r\n      const [overflowScroll, overflowScrollChanged] = updateOverflowScrollCache(\r\n        viewportOverflowState._overflowScroll\r\n      );\r\n      hideNativeScrollbars(viewportOverflowState, _directionIsRTL, viewportArranged, viewportStyle);\r\n\r\n      if (adjustFlexboxGlue) {\r\n        fixFlexboxGlue(viewportOverflowState, _heightIntrinsic);\r\n      }\r\n\r\n      style(_viewport, viewportStyle);\r\n\r\n      setState({\r\n        _overflowScroll: overflowScroll,\r\n        _overflowAmount: overflowAmount,\r\n        _hasOverflow: hasOverflow,\r\n      });\r\n\r\n      updateHintsReturn = {\r\n        _overflowAmountChanged: overflowAmountChanged,\r\n        _overflowScrollChanged: overflowScrollChanged,\r\n      };\r\n    }\r\n\r\n    attr(_host, dataAttributeHost, removeClipping ? 'overflowVisible' : '');\r\n    conditionalClass(_padding, classNameOverflowVisible, removeClipping);\r\n    conditionalClass(_viewport, classNameOverflowVisible, overflowVisible);\r\n\r\n    return updateHintsReturn;\r\n  };\r\n};\r\n","import { each, isNumber, scrollLeft, scrollTop, assignDeep, keys } from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  createTrinsicUpdate,\r\n  createPaddingUpdate,\r\n  createOverflowUpdate,\r\n} from 'setups/structureSetup/updateSegments';\r\nimport type { SetupState, SetupUpdateSegment, SetupUpdateCheckOption } from 'setups';\r\nimport type { StructureSetupState } from 'setups/structureSetup';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\n\r\nexport type CreateStructureUpdateSegment = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>\r\n) => StructureSetupUpdateSegment;\r\n\r\nexport type StructureSetupUpdateSegment = SetupUpdateSegment<StructureSetupUpdateHints>;\r\n\r\nexport type StructureSetupUpdate = (\r\n  checkOption: SetupUpdateCheckOption,\r\n  updateHints: Partial<StructureSetupUpdateHints>,\r\n  force?: boolean\r\n) => StructureSetupUpdateHints;\r\n\r\nexport interface StructureSetupUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _directionChanged: boolean;\r\n  _heightIntrinsicChanged: boolean;\r\n  _overflowScrollChanged: boolean;\r\n  _overflowAmountChanged: boolean;\r\n  _paddingStyleChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n}\r\n\r\nconst prepareUpdateHints = <T extends StructureSetupUpdateHints>(\r\n  leading: Required<T>,\r\n  adaptive?: Partial<T>,\r\n  force?: boolean\r\n): Required<T> => {\r\n  const result = {};\r\n  const finalAdaptive = adaptive || {};\r\n  const objKeys = keys(leading).concat(keys(finalAdaptive));\r\n\r\n  each(objKeys, (key) => {\r\n    const leadingValue = leading[key];\r\n    const adaptiveValue = finalAdaptive[key];\r\n    result[key] = !!(force || leadingValue || adaptiveValue);\r\n  });\r\n\r\n  return result as Required<T>;\r\n};\r\n\r\nexport const createStructureSetupUpdate = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>\r\n): StructureSetupUpdate => {\r\n  const { _viewport } = structureSetupElements;\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _flexboxGlue } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n\r\n  const updateSegments: StructureSetupUpdateSegment[] = [\r\n    createTrinsicUpdate(structureSetupElements, state),\r\n    createPaddingUpdate(structureSetupElements, state),\r\n    createOverflowUpdate(structureSetupElements, state),\r\n  ];\r\n\r\n  return (\r\n    checkOption: SetupUpdateCheckOption,\r\n    updateHints: Partial<StructureSetupUpdateHints>,\r\n    force?: boolean\r\n  ) => {\r\n    const initialUpdateHints = prepareUpdateHints(\r\n      assignDeep(\r\n        {\r\n          _sizeChanged: false,\r\n          _paddingStyleChanged: false,\r\n          _directionChanged: false,\r\n          _heightIntrinsicChanged: false,\r\n          _overflowScrollChanged: false,\r\n          _overflowAmountChanged: false,\r\n          _hostMutation: false,\r\n          _contentMutation: false,\r\n        },\r\n        updateHints\r\n      ),\r\n      {},\r\n      force\r\n    );\r\n    const adjustScrollOffset = doViewportArrange || !_flexboxGlue;\r\n    const scrollOffsetX = adjustScrollOffset && scrollLeft(_viewport);\r\n    const scrollOffsetY = adjustScrollOffset && scrollTop(_viewport);\r\n\r\n    let adaptivedUpdateHints: Required<StructureSetupUpdateHints> = initialUpdateHints;\r\n    each(updateSegments, (updateSegment) => {\r\n      adaptivedUpdateHints = prepareUpdateHints<StructureSetupUpdateHints>(\r\n        adaptivedUpdateHints,\r\n        updateSegment(adaptivedUpdateHints, checkOption, !!force) || {},\r\n        force\r\n      );\r\n    });\r\n\r\n    if (isNumber(scrollOffsetX)) {\r\n      scrollLeft(_viewport, scrollOffsetX);\r\n    }\r\n    if (isNumber(scrollOffsetY)) {\r\n      scrollTop(_viewport, scrollOffsetY);\r\n    }\r\n\r\n    return adaptivedUpdateHints;\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  stopAndPrevent,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  isBoolean,\r\n  removeClass,\r\n  isObject,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\nexport interface SizeObserverOptions {\r\n  _direction?: boolean;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserverCallbackParams {\r\n  _sizeChanged: boolean;\r\n  _directionIsRTLCache?: CacheValues<boolean>;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport type DestroySizeObserver = () => void;\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst getElmDirectionIsRTL = (elm: HTMLElement): boolean => style(elm, 'direction') === 'rtl';\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\n/**\r\n * Creates a size observer which observes any size, padding, border, margin and box-sizing changes of the target element. Depending on the options also direction and appear can be observed.\r\n * @param target The target element which shall be observed.\r\n * @param onSizeChangedCallback The callback which gets called after a size change was detected.\r\n * @param options The options for size detection, whether to observe also direction and appear.\r\n * @returns A object which represents the instance of the size observer.\r\n */\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (params: SizeObserverCallbackParams) => any,\r\n  options?: SizeObserverOptions\r\n): DestroySizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } =\r\n    options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(\r\n    `<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`\r\n  );\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const getIsDirectionRTL = getElmDirectionIsRTL.bind(0, sizeObserver);\r\n  const [updateResizeObserverContentRectCache] = createCache<DOMRectReadOnly | undefined>({\r\n    _initialValue: undefined,\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (\r\n    sizeChangedContext?: CacheValues<boolean> | ResizeObserverEntry[] | Event | boolean\r\n  ) => {\r\n    const isResizeObserverCall =\r\n      isArray(sizeChangedContext) &&\r\n      sizeChangedContext.length > 0 &&\r\n      isObject(sizeChangedContext[0]);\r\n\r\n    const hasDirectionCache =\r\n      !isResizeObserverCall && isBoolean((sizeChangedContext as CacheValues<boolean>)[0]);\r\n\r\n    let skip = false;\r\n    let appear: boolean | number | undefined = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isResizeObserverCall) {\r\n      const [currRContentRect, , prevContentRect] = updateResizeObserverContentRectCache(\r\n        (sizeChangedContext as ResizeObserverEntry[]).pop()!.contentRect\r\n      );\r\n      const hasDimensions = domRectHasDimensions(currRContentRect);\r\n      const hadDimensions = domRectHasDimensions(prevContentRect);\r\n      skip = !prevContentRect || !hasDimensions; // skip on initial RO. call or if display is none\r\n      appear = !hadDimensions && hasDimensions;\r\n\r\n      doDirectionScroll = !skip; // direction scroll when not skipping\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      [, doDirectionScroll] = sizeChangedContext as CacheValues<boolean>; // direction scroll when DirectionCache changed, false otherwise\r\n    }\r\n    // else if it triggered with appear from polyfill\r\n    else {\r\n      appear = sizeChangedContext === true;\r\n    }\r\n\r\n    if (observeDirectionChange && doDirectionScroll) {\r\n      const rtl = hasDirectionCache\r\n        ? (sizeChangedContext as CacheValues<boolean>)[0]\r\n        : getElmDirectionIsRTL(sizeObserver);\r\n      scrollLeft(\r\n        sizeObserver,\r\n        rtl\r\n          ? rtlScrollBehavior.n\r\n            ? -scrollAmount\r\n            : rtlScrollBehavior.i\r\n            ? 0\r\n            : scrollAmount\r\n          : scrollAmount\r\n      );\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback({\r\n        _sizeChanged: !hasDirectionCache,\r\n        _directionIsRTLCache: hasDirectionCache\r\n          ? (sizeChangedContext as CacheValues<boolean>)\r\n          : undefined,\r\n        _appear: !!appear,\r\n      });\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange\r\n    ? onSizeChangedCallbackProxy\r\n    : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => {\r\n      resizeObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(observerElementChildrenRoot);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = (appear?: unknown) => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy(appear === true);\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event | false) => {\r\n      currSize = offsetSize(observerElementChildrenRoot);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent) {\r\n        stopAndPrevent(scrollEvent);\r\n\r\n        if (isDirty && !rAFId) {\r\n          cAF!(rAFId);\r\n          rAFId = rAF!(onResized);\r\n        }\r\n      } else {\r\n        onResized(scrollEvent === false);\r\n      }\r\n\r\n      reset();\r\n    };\r\n\r\n    push(offListeners, [\r\n      on(expandElement, scrollEventName, onScroll),\r\n      on(shrinkElement, scrollEventName, onScroll),\r\n    ]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n\r\n    reset();\r\n\r\n    appearCallback = observeAppearChange ? onScroll.bind(0, false) : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(\r\n      {\r\n        _initialValue: !getIsDirectionRTL(), // invert current value to trigger initial change\r\n      },\r\n      getIsDirectionRTL\r\n    );\r\n    const [updateDirectionIsRTLCache] = directionIsRTLCache;\r\n\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        const [directionIsRTL, directionIsRTLChanged] = directionIsRTLCacheValues;\r\n\r\n        if (directionIsRTLChanged) {\r\n          removeClass(listenerElement, 'ltr rtl');\r\n          if (directionIsRTL) {\r\n            addClass(listenerElement, 'rtl');\r\n          } else {\r\n            addClass(listenerElement, 'ltr');\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        stopAndPrevent(event);\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(sizeObserver);\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDiv,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport type DestroyTrinsicObserver = () => void;\r\n\r\nconst isHeightIntrinsic = (ioEntryOrSize: IntersectionObserverEntry | WH<number>): boolean =>\r\n  (ioEntryOrSize as WH<number>).h === 0 ||\r\n  (ioEntryOrSize as IntersectionObserverEntry).isIntersecting ||\r\n  (ioEntryOrSize as IntersectionObserverEntry).intersectionRatio > 0;\r\n\r\n/**\r\n * Creates a trinsic observer which observes changes to intrinsic or extrinsic sizing for the height of the target element.\r\n * @param target The element which shall be observed.\r\n * @param onTrinsicChangedCallback The callback which gets called after a change was detected.\r\n * @returns A object which represents the instance of the trinsic observer.\r\n */\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): DestroyTrinsicObserver => {\r\n  const trinsicObserver = createDiv(classNameTrinsicObserver);\r\n  const offListeners: (() => void)[] = [];\r\n  const [updateHeightIntrinsicCache] = createCache({\r\n    _initialValue: false,\r\n  });\r\n\r\n  const triggerOnTrinsicChangedCallback = (\r\n    updateValue?: IntersectionObserverEntry | WH<number>\r\n  ) => {\r\n    if (updateValue) {\r\n      const heightIntrinsic = updateHeightIntrinsicCache(isHeightIntrinsic(updateValue));\r\n      const [, heightIntrinsicChanged] = heightIntrinsic;\r\n\r\n      if (heightIntrinsicChanged) {\r\n        onTrinsicChangedCallback(heightIntrinsic);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          triggerOnTrinsicChangedCallback(entries.pop());\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => {\r\n      intersectionObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const onSizeChanged = () => {\r\n      const newSize = offsetSize(trinsicObserver);\r\n      triggerOnTrinsicChangedCallback(newSize);\r\n    };\r\n    push(offListeners, createSizeObserver(trinsicObserver, onSizeChanged));\r\n    onSizeChanged();\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(trinsicObserver);\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n} from 'support';\r\n\r\ntype DOMContentObserverCallback = (contentChangedTroughEvent: boolean) => any;\r\n\r\ntype DOMTargetObserverCallback = (targetChangedAttrs: string[], targetStyleChanged: boolean) => any;\r\n\r\ninterface DOMObserverOptionsBase {\r\n  _attributes?: string[];\r\n  _styleChangingAttributes?: string[];\r\n}\r\n\r\ninterface DOMContentObserverOptions extends DOMObserverOptionsBase {\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname(s) | function returning eventname(s)] -> eventnames divided by whitespaces\r\n  _nestedTargetSelector?: string;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange; // function which will prevent marking certain dom changes as content change if it returns true\r\n  _ignoreNestedTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed on nested targets if it returns true\r\n}\r\n\r\ninterface DOMTargetObserverOptions extends DOMObserverOptionsBase {\r\n  _ignoreTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed if it returns true\r\n}\r\n\r\ntype ContentChangeArrayItem = [string?, string?] | null | undefined;\r\n\r\nexport type DOMObserverEventContentChange =\r\n  | Array<ContentChangeArrayItem>\r\n  | false\r\n  | null\r\n  | undefined;\r\n\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions?: DOMContentObserverOptions\r\n) => boolean;\r\n\r\nexport type DOMObserverIgnoreTargetChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\n\r\nexport type DOMObserverCallback<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverCallback\r\n  : DOMTargetObserverCallback;\r\n\r\nexport type DOMObserverOptions<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverOptions\r\n  : DOMTargetObserverOptions;\r\n\r\nexport type DOMObserver = [destroy: () => void, update: () => void];\r\n\r\ntype EventContentChangeUpdateElement = (getElements?: (selector: string) => Node[]) => void;\r\ntype EventContentChange = [destroy: () => void, updateElements: EventContentChangeUpdateElement];\r\n\r\n/**\r\n * Creates a set of helper functions to observe events of elements inside the target element.\r\n * @param target The target element of which the children elements shall be observed. (not only direct children but also nested ones)\r\n * @param eventContentChange The event content change array. (array of tuples: selector and eventname(s))\r\n * @param callback Callback which is called if one of the elements emits the corresponding event.\r\n * @returns A object which contains a set of helper functions to destroy and update the observation of elements.\r\n */\r\nconst createEventContentChange = (\r\n  target: Element,\r\n  callback: (...args: any) => any,\r\n  eventContentChange?: DOMObserverEventContentChange\r\n): EventContentChange => {\r\n  let map: WeakMap<Node, [string, () => any]> | undefined; // weak map to prevent memory leak for detached elements\r\n  let destroyed = false;\r\n  const destroy = () => {\r\n    destroyed = true;\r\n  };\r\n  const updateElements: EventContentChangeUpdateElement = (getElements?) => {\r\n    if (eventContentChange) {\r\n      const eventElmList = eventContentChange.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventNames = item[1];\r\n          const elements =\r\n            eventNames &&\r\n            selector &&\r\n            (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements && elements.length && eventNames && isString(eventNames)) {\r\n            push(arr, [elements, eventNames.trim()], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) =>\r\n        each(item[0], (elm) => {\r\n          const eventNames = item[1];\r\n          const entry = map!.get(elm);\r\n\r\n          if (entry) {\r\n            const entryEventNames = entry[0];\r\n            const entryOff = entry[1];\r\n\r\n            // in case an already registered element is registered again, unregister the previous events\r\n            if (entryEventNames === eventNames) {\r\n              entryOff();\r\n            }\r\n          }\r\n\r\n          const off = on(elm, eventNames, (event: Event) => {\r\n            if (destroyed) {\r\n              off();\r\n              map!.delete(elm);\r\n            } else {\r\n              callback(event);\r\n            }\r\n          });\r\n          map!.set(elm, [eventNames, off]);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    map = new WeakMap();\r\n    updateElements();\r\n  }\r\n\r\n  return [destroy, updateElements];\r\n};\r\n\r\n/**\r\n * Creates a DOM observer which observes DOM changes to either the target element or its children.\r\n * @param target The element which shall be observed.\r\n * @param isContentObserver Whether this observer is just observing the target or just the targets children. (not only direct children but also nested ones)\r\n * @param callback The callback which gets called if a change was detected.\r\n * @param options The options for DOM change detection.\r\n * @returns A object which represents the instance of the DOM observer.\r\n */\r\nexport const createDOMObserver = <ContentObserver extends boolean>(\r\n  target: HTMLElement,\r\n  isContentObserver: ContentObserver,\r\n  callback: DOMObserverCallback<ContentObserver>,\r\n  options?: DOMObserverOptions<ContentObserver>\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetChange,\r\n    _ignoreNestedTargetChange,\r\n    _ignoreContentChange,\r\n  } = (options as DOMContentObserverOptions & DOMTargetObserverOptions) || {};\r\n  const [destroyEventContentChange, updateEventContentChangeElements] = createEventContentChange(\r\n    target,\r\n    debounce(\r\n      () => {\r\n        if (isConnected) {\r\n          (callback as DOMContentObserverCallback)(true);\r\n        }\r\n      },\r\n      { _timeout: 33, _maxDelay: 99 }\r\n    ),\r\n    _eventContentChange\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes);\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange =\r\n      (isContentObserver ? _ignoreNestedTargetChange : _ignoreTargetChange) || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue =\r\n        isAttributesType && isString(attributeName)\r\n          ? attr(mutationTarget as HTMLElement, attributeName!)\r\n          : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const styleChangingAttrChanged =\r\n        indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      // if is content observer and something changed in children\r\n      if (isContentObserver && !targetIsMutationTarget) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged;\r\n        const isNestedTarget =\r\n          contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged =\r\n          baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      // if is target observer and target attr changed\r\n      if (\r\n        !isContentObserver &&\r\n        targetIsMutationTarget &&\r\n        attributeChanged &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n      ) {\r\n        push(targetChangedAttrs, attributeName!);\r\n        targetStyleChanged = targetStyleChanged || styleChangingAttrChanged;\r\n      }\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      // adds / removes the new elements from the event content change\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n\r\n    if (isContentObserver) {\r\n      contentChanged && (callback as DOMContentObserverCallback)(false);\r\n    } else if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged) {\r\n      (callback as DOMTargetObserverCallback)(targetChangedAttrs, targetStyleChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: isContentObserver,\r\n    childList: isContentObserver,\r\n    characterData: isContentObserver,\r\n  });\r\n  isConnected = true;\r\n\r\n  return [\r\n    () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  ];\r\n};\r\n","import {\r\n  diffClass,\r\n  debounce,\r\n  isArray,\r\n  isNumber,\r\n  each,\r\n  indexOf,\r\n  isString,\r\n  attr,\r\n  removeAttr,\r\n  CacheValues,\r\n  keys,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport { createSizeObserver, SizeObserverCallbackParams } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver, DOMObserver } from 'observers/domObserver';\r\nimport type { SetupState, SetupUpdateCheckOption } from 'setups';\r\nimport type { StructureSetupState } from 'setups/structureSetup';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type {\r\n  StructureSetupUpdate,\r\n  StructureSetupUpdateHints,\r\n} from 'setups/structureSetup/structureSetup.update';\r\n\r\nexport type StructureSetupObserversUpdate = (checkOption: SetupUpdateCheckOption) => void;\r\n\r\nexport type StructureSetupObservers = [\r\n  updateObserverOptions: StructureSetupObserversUpdate,\r\n  destroy: () => void\r\n];\r\n\r\ntype ExcludeFromTuple<T extends readonly any[], E> = T extends [infer F, ...infer R]\r\n  ? [F] extends [E]\r\n    ? ExcludeFromTuple<R, E>\r\n    : [F, ...ExcludeFromTuple<R, E>]\r\n  : [];\r\n\r\n// const hostSelector = `.${classNameHost}`;\r\n\r\n// TODO: observer textarea attrs if textarea\r\n// TODO: test _ignoreContentChange & _ignoreNestedTargetChange for content dom observer\r\n// TODO: test _ignoreTargetChange for target dom observer\r\n\r\n// const viewportSelector = `.${classNameViewport}`;\r\n// const contentSelector = `.${classNameContent}`;\r\nconst ignorePrefix = 'os-';\r\nconst viewportAttrsFromTarget = ['tabindex'];\r\nconst baseStyleChangingAttrsTextarea = ['wrap', 'cols', 'rows'];\r\nconst baseStyleChangingAttrs = ['id', 'class', 'style', 'open'];\r\n\r\nconst ignoreTargetChange = (\r\n  target: Node,\r\n  attrName: string,\r\n  oldValue: string | null,\r\n  newValue: string | null\r\n) => {\r\n  if (attrName === 'class' && oldValue && newValue) {\r\n    const diff = diffClass(oldValue, newValue);\r\n    return !!diff.find((addedOrRemovedClass) => addedOrRemovedClass.indexOf(ignorePrefix) !== 0);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const createStructureSetupObservers = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>,\r\n  structureSetupUpdate: (\r\n    ...args: ExcludeFromTuple<Parameters<StructureSetupUpdate>, Parameters<StructureSetupUpdate>[0]>\r\n  ) => any\r\n): StructureSetupObservers => {\r\n  let debounceTimeout: number | false | undefined;\r\n  let debounceMaxDelay: number | false | undefined;\r\n  let contentMutationObserver: DOMObserver | undefined;\r\n  const [, setState] = state;\r\n  const { _host, _viewport, _content, _isTextarea } = structureSetupElements;\r\n  const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n  const contentMutationObserverAttr = _isTextarea\r\n    ? baseStyleChangingAttrsTextarea\r\n    : baseStyleChangingAttrs.concat(baseStyleChangingAttrsTextarea);\r\n  const structureSetupUpdateWithDebouncedAdaptiveUpdateHints = debounce(structureSetupUpdate, {\r\n    _timeout: () => debounceTimeout,\r\n    _maxDelay: () => debounceMaxDelay,\r\n    _mergeParams(prev, curr) {\r\n      const [prevObj] = prev;\r\n      const [currObj] = curr;\r\n      return [\r\n        keys(prevObj)\r\n          .concat(keys(currObj))\r\n          .reduce((obj, key) => {\r\n            obj[key] = prevObj[key] || currObj[key];\r\n            return obj;\r\n          }, {}),\r\n      ] as [Partial<StructureSetupUpdateHints>];\r\n    },\r\n  });\r\n\r\n  const updateViewportAttrsFromHost = (attributes?: string[]) => {\r\n    each(attributes || viewportAttrsFromTarget, (attribute) => {\r\n      if (indexOf(viewportAttrsFromTarget, attribute) > -1) {\r\n        const hostAttr = attr(_host, attribute);\r\n        if (isString(hostAttr)) {\r\n          attr(_viewport, attribute, hostAttr);\r\n        } else {\r\n          removeAttr(_viewport, attribute);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsicCache: CacheValues<boolean>) => {\r\n    const [heightIntrinsic, heightIntrinsicChanged] = heightIntrinsicCache;\r\n    setState({ _heightIntrinsic: heightIntrinsic });\r\n    structureSetupUpdate({ _heightIntrinsicChanged: heightIntrinsicChanged });\r\n  };\r\n  const onSizeChanged = ({\r\n    _sizeChanged,\r\n    _directionIsRTLCache,\r\n    _appear,\r\n  }: SizeObserverCallbackParams) => {\r\n    const updateFn =\r\n      !_sizeChanged || _appear\r\n        ? structureSetupUpdate\r\n        : structureSetupUpdateWithDebouncedAdaptiveUpdateHints;\r\n\r\n    let directionChanged = false;\r\n    if (_directionIsRTLCache) {\r\n      const [directionIsRTL, directionIsRTLChanged] = _directionIsRTLCache;\r\n      directionChanged = directionIsRTLChanged;\r\n      setState({ _directionIsRTL: directionIsRTL });\r\n    }\r\n\r\n    updateFn({ _sizeChanged, _directionChanged: directionChanged });\r\n  };\r\n  const onContentMutation = (contentChangedTroughEvent: boolean) => {\r\n    // if contentChangedTroughEvent is true its already debounced\r\n    const updateFn = contentChangedTroughEvent\r\n      ? structureSetupUpdate\r\n      : structureSetupUpdateWithDebouncedAdaptiveUpdateHints;\r\n    updateFn({\r\n      _contentMutation: true,\r\n    });\r\n  };\r\n  const onHostMutation = (targetChangedAttrs: string[], targetStyleChanged: boolean) => {\r\n    if (targetStyleChanged) {\r\n      structureSetupUpdateWithDebouncedAdaptiveUpdateHints({\r\n        _hostMutation: true,\r\n      });\r\n    } else {\r\n      updateViewportAttrsFromHost(targetChangedAttrs);\r\n    }\r\n  };\r\n\r\n  const destroyTrinsicObserver =\r\n    (_content || !_flexboxGlue) && createTrinsicObserver(_host, onTrinsicChanged);\r\n  const destroySizeObserver = createSizeObserver(_host, onSizeChanged, {\r\n    _appear: true,\r\n    _direction: !_nativeScrollbarStyling,\r\n  });\r\n  const [destroyHostMutationObserver] = createDOMObserver(_host, false, onHostMutation, {\r\n    _styleChangingAttributes: baseStyleChangingAttrs,\r\n    _attributes: baseStyleChangingAttrs.concat(viewportAttrsFromTarget),\r\n    _ignoreTargetChange: ignoreTargetChange,\r\n  });\r\n\r\n  updateViewportAttrsFromHost();\r\n\r\n  return [\r\n    (checkOption) => {\r\n      const [elementEvents, elementEventsChanged] = checkOption<Array<[string, string]> | null>(\r\n        'updating.elementEvents'\r\n      );\r\n      const [attributes, attributesChanged] = checkOption<string[] | null>('updating.attributes');\r\n      const [debounceValue, debounceChanged] = checkOption<Array<number> | number | null>(\r\n        'updating.debounce'\r\n      );\r\n      const updateContentMutationObserver = elementEventsChanged || attributesChanged;\r\n\r\n      if (updateContentMutationObserver) {\r\n        if (contentMutationObserver) {\r\n          contentMutationObserver[1](); // update\r\n          contentMutationObserver[0](); // destroy\r\n        }\r\n        contentMutationObserver = createDOMObserver(\r\n          _content || _viewport,\r\n          true,\r\n          onContentMutation,\r\n          {\r\n            _styleChangingAttributes: contentMutationObserverAttr.concat(attributes || []),\r\n            _attributes: contentMutationObserverAttr.concat(attributes || []),\r\n            _eventContentChange: elementEvents,\r\n            _ignoreNestedTargetChange: ignoreTargetChange,\r\n            // _nestedTargetSelector: hostSelector,\r\n            /*\r\n          _ignoreContentChange: (mutation, isNestedTarget) => {\r\n            const { target, attributeName } = mutation;\r\n            return isNestedTarget\r\n              ? false\r\n              : attributeName\r\n              ? liesBetween(target as Element, hostSelector, viewportSelector) || liesBetween(target as Element, hostSelector, contentSelector)\r\n              : false;\r\n          },\r\n          */\r\n          }\r\n        );\r\n      }\r\n\r\n      if (debounceChanged) {\r\n        structureSetupUpdateWithDebouncedAdaptiveUpdateHints._flush();\r\n        if (isArray(debounceValue)) {\r\n          const timeout = debounceValue[0];\r\n          const maxWait = debounceValue[1];\r\n          debounceTimeout = isNumber(timeout) ? timeout : false;\r\n          debounceMaxDelay = isNumber(maxWait) ? maxWait : false;\r\n        } else if (isNumber(debounceValue)) {\r\n          debounceTimeout = debounceValue;\r\n          debounceMaxDelay = false;\r\n        } else {\r\n          debounceTimeout = false;\r\n          debounceMaxDelay = false;\r\n        }\r\n      }\r\n    },\r\n    () => {\r\n      contentMutationObserver && contentMutationObserver[0](); // destroy\r\n      destroyTrinsicObserver && destroyTrinsicObserver();\r\n      destroySizeObserver();\r\n      destroyHostMutationObserver();\r\n    },\r\n  ];\r\n};\r\n","import { runEach } from 'support';\r\nimport { createState, createOptionCheck } from 'setups/setups';\r\nimport { createStructureSetupElements } from 'setups/structureSetup/structureSetup.elements';\r\nimport { createStructureSetupUpdate } from 'setups/structureSetup/structureSetup.update';\r\nimport { createStructureSetupObservers } from 'setups/structureSetup/structureSetup.observers';\r\nimport type { StructureSetupUpdateHints } from 'setups/structureSetup/structureSetup.update';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type { TRBL, XY, WH } from 'support';\r\nimport type { OSOptions, ReadonlyOSOptions } from 'options';\r\nimport type { Setup } from 'setups';\r\nimport type { OSTarget, PartialOptions, StyleObject } from 'typings';\r\n\r\nexport interface StructureSetupState {\r\n  _padding: TRBL;\r\n  _paddingAbsolute: boolean;\r\n  _viewportPaddingStyle: StyleObject;\r\n  _overflowScroll: XY<boolean>;\r\n  _overflowAmount: WH<number>;\r\n  _hasOverflow: XY<boolean>;\r\n  _heightIntrinsic: boolean;\r\n  _directionIsRTL: boolean;\r\n}\r\n\r\nexport interface StructureSetupStaticState {\r\n  _elements: StructureSetupElementsObj;\r\n  _addOnUpdatedListener: (listener: OnUpdatedListener) => void;\r\n}\r\n\r\nexport type OnUpdatedListener = (\r\n  updateHints: StructureSetupUpdateHints,\r\n  changedOptions: PartialOptions<OSOptions>,\r\n  force: boolean\r\n) => void;\r\n\r\nconst initialStructureSetupUpdateState: StructureSetupState = {\r\n  _padding: {\r\n    t: 0,\r\n    r: 0,\r\n    b: 0,\r\n    l: 0,\r\n  },\r\n  _paddingAbsolute: false,\r\n  _viewportPaddingStyle: {\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n    marginLeft: 0,\r\n    paddingTop: 0,\r\n    paddingRight: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 0,\r\n  },\r\n  _overflowAmount: {\r\n    w: 0,\r\n    h: 0,\r\n  },\r\n  _overflowScroll: {\r\n    x: false,\r\n    y: false,\r\n  },\r\n  _hasOverflow: {\r\n    x: false,\r\n    y: false,\r\n  },\r\n  _heightIntrinsic: false,\r\n  _directionIsRTL: false,\r\n};\r\n\r\nexport const createStructureSetup = (\r\n  target: OSTarget,\r\n  options: ReadonlyOSOptions\r\n): Setup<StructureSetupState, StructureSetupStaticState> => {\r\n  const checkOptionsFallback = createOptionCheck(options, {});\r\n  const state = createState(initialStructureSetupUpdateState);\r\n  const onUpdatedListeners = new Set<OnUpdatedListener>();\r\n  const [getState] = state;\r\n  const runOnUpdatedListeners = (\r\n    updateHints: StructureSetupUpdateHints,\r\n    changedOptions?: PartialOptions<OSOptions>,\r\n    force?: boolean\r\n  ) => {\r\n    runEach(onUpdatedListeners, [updateHints, changedOptions || {}, !!force]);\r\n  };\r\n\r\n  const [elements, destroyElements] = createStructureSetupElements(target);\r\n  const updateStructure = createStructureSetupUpdate(elements, state);\r\n  const [updateObservers, destroyObservers] = createStructureSetupObservers(\r\n    elements,\r\n    state,\r\n    (updateHints) => {\r\n      runOnUpdatedListeners(updateStructure(checkOptionsFallback, updateHints));\r\n    }\r\n  );\r\n\r\n  const structureSetupState = getState.bind(0) as (() => StructureSetupState) &\r\n    StructureSetupStaticState;\r\n  structureSetupState._addOnUpdatedListener = (listener) => {\r\n    onUpdatedListeners.add(listener);\r\n  };\r\n  structureSetupState._elements = elements;\r\n\r\n  return [\r\n    (changedOptions, force?) => {\r\n      const checkOption = createOptionCheck(options, changedOptions, force);\r\n      updateObservers(checkOption);\r\n      runOnUpdatedListeners(updateStructure(checkOption, {}, force));\r\n    },\r\n    structureSetupState,\r\n    () => {\r\n      onUpdatedListeners.clear();\r\n      destroyObservers();\r\n      destroyElements();\r\n    },\r\n  ];\r\n};\r\n","import { appendChildren, createDiv, removeElements, isFunction } from 'support';\r\nimport {\r\n  classNameScrollbar,\r\n  classNameScrollbarHorizontal,\r\n  classNameScrollbarVertical,\r\n  classNameScrollbarTrack,\r\n  classNameScrollbarHandle,\r\n} from 'classnames';\r\nimport { getEnvironment, ScrollbarsInitializationStrategy } from 'environment';\r\nimport { OSTarget, ScrollbarsInitialization } from 'typings';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\n\r\nexport interface ScrollbarStructure {\r\n  _scrollbar: HTMLElement;\r\n  _track: HTMLElement;\r\n  _handle: HTMLElement;\r\n}\r\n\r\nexport interface ScrollbarsSetupElementsObj {\r\n  _horizontalScrollbarStructure: ScrollbarStructure;\r\n  _verticalScrollbarStructure: ScrollbarStructure;\r\n}\r\n\r\nexport type ScrollbarsSetupElements = [elements: ScrollbarsSetupElementsObj, destroy: () => void];\r\n\r\nconst generateScrollbarDOM = (scrollbarClassName: string): ScrollbarStructure => {\r\n  const scrollbar = createDiv(`${classNameScrollbar} ${scrollbarClassName}`);\r\n  const track = createDiv(classNameScrollbarTrack);\r\n  const handle = createDiv(classNameScrollbarHandle);\r\n\r\n  appendChildren(scrollbar, track);\r\n  appendChildren(track, handle);\r\n\r\n  return {\r\n    _scrollbar: scrollbar,\r\n    _track: track,\r\n    _handle: handle,\r\n  };\r\n};\r\n\r\nexport const createScrollbarsSetupElements = (\r\n  target: OSTarget,\r\n  structureSetupElements: StructureSetupElementsObj\r\n): ScrollbarsSetupElements => {\r\n  const { _getInitializationStrategy } = getEnvironment();\r\n  const { _scrollbarsSlot: environmentScrollbarSlot } =\r\n    _getInitializationStrategy() as ScrollbarsInitializationStrategy;\r\n  const { _target, _host, _viewport, _targetIsElm } = structureSetupElements;\r\n  const initializationScrollbarSlot =\r\n    !_targetIsElm && (target as ScrollbarsInitialization).scrollbarsSlot;\r\n  const initializationScrollbarSlotResult = isFunction(initializationScrollbarSlot)\r\n    ? initializationScrollbarSlot(_target, _host, _viewport)\r\n    : initializationScrollbarSlot;\r\n  const evaluatedScrollbarSlot =\r\n    initializationScrollbarSlotResult ||\r\n    (isFunction(environmentScrollbarSlot)\r\n      ? environmentScrollbarSlot(_target, _host, _viewport)\r\n      : environmentScrollbarSlot) ||\r\n    _host;\r\n\r\n  const horizontalScrollbarStructure = generateScrollbarDOM(classNameScrollbarHorizontal);\r\n  const verticalScrollbarStructure = generateScrollbarDOM(classNameScrollbarVertical);\r\n\r\n  const { _scrollbar: horizontalScrollbar } = horizontalScrollbarStructure;\r\n  const { _scrollbar: verticalScrollbar } = verticalScrollbarStructure;\r\n\r\n  appendChildren(evaluatedScrollbarSlot, horizontalScrollbar);\r\n  appendChildren(evaluatedScrollbarSlot, verticalScrollbar);\r\n\r\n  return [\r\n    {\r\n      _horizontalScrollbarStructure: horizontalScrollbarStructure,\r\n      _verticalScrollbarStructure: verticalScrollbarStructure,\r\n    },\r\n    removeElements.bind(0, [horizontalScrollbar, verticalScrollbar]),\r\n  ];\r\n};\r\n","import { createState, createOptionCheck } from 'setups/setups';\r\nimport {\r\n  createScrollbarsSetupElements,\r\n  ScrollbarsSetupElementsObj,\r\n} from 'setups/scrollbarsSetup/scrollbarsSetup.elements';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type { ReadonlyOSOptions } from 'options';\r\nimport type { Setup } from 'setups';\r\nimport type { OSTarget } from 'typings';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface ScrollbarsSetupState {}\r\n\r\nexport interface ScrollbarsSetupStaticState {\r\n  _elements: ScrollbarsSetupElementsObj;\r\n}\r\n\r\nexport const createScrollbarsSetup = (\r\n  target: OSTarget,\r\n  options: ReadonlyOSOptions,\r\n  structureSetupElements: StructureSetupElementsObj\r\n): Setup<ScrollbarsSetupState, ScrollbarsSetupStaticState> => {\r\n  const state = createState({});\r\n  const [getState] = state;\r\n\r\n  const [elements, destroyElements] = createScrollbarsSetupElements(target, structureSetupElements);\r\n\r\n  const scrollbarsSetupState = getState.bind(0) as (() => ScrollbarsSetupState) &\r\n    ScrollbarsSetupStaticState;\r\n  scrollbarsSetupState._elements = elements;\r\n\r\n  return [\r\n    (changedOptions, force?) => {\r\n      const checkOption = createOptionCheck(options, changedOptions, force);\r\n      // eslint-disable-next-line no-console\r\n      console.log(checkOption);\r\n    },\r\n    scrollbarsSetupState,\r\n    () => {\r\n      destroyElements();\r\n    },\r\n  ];\r\n};\r\n","import { assignDeep, each, isArray } from 'support';\r\nimport { OverlayScrollbars, OverlayScrollbarsStatic } from 'overlayscrollbars';\r\n\r\nexport type OSPluginInstance =\r\n  | Record<string, unknown>\r\n  | ((staticObj: OverlayScrollbarsStatic, instanceObj: OverlayScrollbars) => void);\r\nexport type OSPlugin<T extends OSPluginInstance = any> = [string, T];\r\n\r\nconst pluginRegistry: Record<string, OSPluginInstance> = {};\r\n\r\nexport const getPlugins = () => assignDeep({}, pluginRegistry);\r\n\r\nexport const addPlugin = (addedPlugin: OSPlugin | OSPlugin[]) =>\r\n  each((isArray(addedPlugin) ? addedPlugin : [addedPlugin]) as OSPlugin[], (plugin) => {\r\n    pluginRegistry[plugin[0]] = plugin[1];\r\n  });\r\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { PlainObject, PartialOptions } from 'typings';\r\n\r\nexport type OptionsObjectType = Record<string, unknown>;\r\nexport type OptionsFunctionType = (this: unknown, ...args: unknown[]) => unknown;\r\nexport type OptionsTemplateType<T extends OptionsTemplateNativeTypes> = ExtractPropsKey<\r\n  OptionsTemplateTypeMap,\r\n  T\r\n>;\r\nexport type OptionsTemplateTypes = keyof OptionsTemplateTypeMap;\r\nexport type OptionsTemplateNativeTypes = OptionsTemplateTypeMap[keyof OptionsTemplateTypeMap];\r\n\r\nexport type OptionsTemplateValue<T extends OptionsTemplateNativeTypes = string> = T extends string\r\n  ? string extends T\r\n    ? OptionsTemplateValueNonEnum<T>\r\n    : string\r\n  : OptionsTemplateValueNonEnum<T>;\r\n\r\nexport type OptionsTemplate<T> = {\r\n  [P in keyof T]: T[P] extends OptionsObjectType\r\n    ? OptionsTemplate<T[P]>\r\n    : T[P] extends OptionsTemplateNativeTypes\r\n    ? OptionsTemplateValue<T[P]>\r\n    : never;\r\n};\r\n\r\nexport type OptionsValidationResult<T> = [\r\n  PartialOptions<T>, // validated\r\n  Record<string, unknown> // foreign\r\n];\r\n\r\ntype OptionsTemplateTypeMap = {\r\n  __TPL_boolean_TYPE__: boolean;\r\n  __TPL_number_TYPE__: number;\r\n  __TPL_string_TYPE__: string;\r\n  __TPL_array_TYPE__: Array<any> | ReadonlyArray<any>;\r\n  __TPL_function_TYPE__: OptionsFunctionType;\r\n  __TPL_null_TYPE__: null;\r\n  __TPL_object_TYPE__: OptionsObjectType;\r\n};\r\n\r\ntype OptionsTemplateValueNonEnum<T extends OptionsTemplateNativeTypes> =\r\n  | OptionsTemplateType<T>\r\n  | [OptionsTemplateType<T>, ...Array<OptionsTemplateTypes>];\r\n\r\ntype ExtractPropsKey<T, TProps extends T[keyof T]> = {\r\n  [P in keyof T]: TProps extends T[P] ? P : never;\r\n}[keyof T];\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<OptionsObjectType>;\r\n  readonly function: OptionsTemplateType<OptionsFunctionType>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = [\r\n  'boolean',\r\n  'number',\r\n  'string',\r\n  'array',\r\n  'object',\r\n  'function',\r\n  'null',\r\n].reduce((result, item) => {\r\n  result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n  return result;\r\n}, {} as OptionsTemplateTypesDictionary);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param template The template according to which the options object shall be validated.\r\n * @param options The options object which shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  template: OptionsTemplate<T>,\r\n  options: PartialOptions<T>,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: PartialOptions<T> = {};\r\n  const optionsCopy: PartialOptions<T> = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> =\r\n      template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const [validated, foreign] = validateRecursive(\r\n        templateValue as T,\r\n        optionsValue,\r\n        doWriteErrors,\r\n        propPrefix + prop\r\n      );\r\n      validatedOptions[prop] = validated as any;\r\n      optionsCopy[prop] = foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        validatedOptions[prop] = optionsValue;\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${\r\n            errorEnumStrings.length > 0\r\n              ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].`\r\n              : ''\r\n          }`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return [validatedOptions, optionsCopy]; // optionsCopy equals now to foreign options\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a tuple which looks like:\r\n * [\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n * ]\r\n * @param template The template according to which the options object shall be validated.\r\n * @param options The options object which shall be validated.\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  template: OptionsTemplate<T>,\r\n  options: PartialOptions<T>,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => validateRecursive<T>(template, options, doWriteErrors);\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n","import { OSPlugin } from 'plugins';\r\nimport {\r\n  OSOptions,\r\n  ResizeBehavior,\r\n  OverflowBehavior,\r\n  VisibilityBehavior,\r\n  AutoHideBehavior,\r\n} from 'options';\r\nimport {\r\n  validateOptions,\r\n  OptionsTemplate,\r\n  OptionsTemplateValue,\r\n  optionsTemplateTypes as oTypes,\r\n} from 'plugins/optionsValidation/validation';\r\nimport { PartialOptions } from 'typings';\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst booleanAllowedValues: OptionsTemplateValue<boolean> = oTypes.boolean;\r\nconst arrayNullValues: OptionsTemplateValue<Array<unknown> | null> = [oTypes.array, oTypes.null];\r\nconst stringArrayNullAllowedValues: OptionsTemplateValue<string | ReadonlyArray<string> | null> = [\r\n  oTypes.string,\r\n  oTypes.array,\r\n  oTypes.null,\r\n];\r\nconst resizeAllowedValues: OptionsTemplateValue<ResizeBehavior> = 'none both horizontal vertical';\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> =\r\n  'hidden scroll visible visible-hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> =\r\n  'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> =\r\n  'never scroll leavemove';\r\n\r\nconst optionsTemplate: OptionsTemplate<OSOptions> = {\r\n  resize: resizeAllowedValues, // none || both  || horizontal || vertical || n || b ||\r\n  paddingAbsolute: booleanAllowedValues, // true || false\r\n  updating: {\r\n    elementEvents: arrayNullValues, // array of tuples || null\r\n    attributes: arrayNullValues,\r\n    debounce: [oTypes.number, oTypes.array, oTypes.null], // number || number array || null\r\n  },\r\n  overflow: {\r\n    x: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n    y: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n  },\r\n  scrollbars: {\r\n    visibility: scrollbarsVisibilityAllowedValues, // visible || hidden || auto || v ||\r\n    autoHide: scrollbarsAutoHideAllowedValues, // never || scroll || leave || move ||\r\n    autoHideDelay: numberAllowedValues, // number\r\n    dragScroll: booleanAllowedValues, // true || false\r\n    clickScroll: booleanAllowedValues, // true || false\r\n    touch: booleanAllowedValues, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: booleanAllowedValues, // true || false\r\n    dynHeight: booleanAllowedValues, // true || false\r\n    inheritedAttrs: stringArrayNullAllowedValues, // string || array || nul\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanAllowedValues, // true || false\r\n    initialize: booleanAllowedValues, // true || false\r\n  },\r\n  callbacks: {\r\n    onUpdated: [oTypes.function, oTypes.null],\r\n  },\r\n};\r\n\r\nexport type OptionsValidationPluginInstance = {\r\n  _: (options: PartialOptions<OSOptions>, doWriteErrors?: boolean) => PartialOptions<OSOptions>;\r\n};\r\n\r\nexport const optionsValidationPluginName = '__osOptionsValidationPlugin';\r\n\r\nexport const optionsValidationPlugin: OSPlugin<OptionsValidationPluginInstance> = [\r\n  optionsValidationPluginName,\r\n  {\r\n    _: (options: PartialOptions<OSOptions>, doWriteErrors?: boolean) => {\r\n      const [validated, foreign] = validateOptions(optionsTemplate, options, doWriteErrors);\r\n      return { ...foreign, ...validated };\r\n    },\r\n  },\r\n];\r\n","import { OverlayScrollbars } from 'overlayscrollbars';\r\n\r\nconst targets: Set<Element> = new Set();\r\nconst targetInstanceMap: WeakMap<Element, OverlayScrollbars> = new WeakMap();\r\n\r\n/**\r\n * Adds the given OverlayScrollbars instance to the given element.\r\n * @param target The element which is the target of the OverlayScrollbars instance.\r\n * @param osInstance The OverlayScrollbars instance.\r\n */\r\nexport const addInstance = (target: Element, osInstance: OverlayScrollbars): void => {\r\n  targetInstanceMap.set(target, osInstance);\r\n  targets.add(target);\r\n};\r\n\r\n/**\r\n * Removes a OverlayScrollbars instance from the given element.\r\n * @param target The element from which its OverlayScrollbars instance shall be removed.\r\n */\r\nexport const removeInstance = (target: Element): void => {\r\n  targetInstanceMap.delete(target);\r\n  targets.delete(target);\r\n};\r\n\r\n/**\r\n * Gets the OverlayScrollbars from the given element or undefined if it doesn't have one.\r\n * @param target The element of which its OverlayScrollbars instance shall be get.\r\n */\r\nexport const getInstance = (target: Element): OverlayScrollbars | undefined =>\r\n  targetInstanceMap.get(target);\r\n\r\n/**\r\n * Gets a Map which represents all active OverayScrollbars instances.\r\n * The Key is the element and the value is the instance.\r\n */\r\nexport const allInstances = (): ReadonlyMap<Element, OverlayScrollbars> => {\r\n  const validTargetInstanceMap: Map<Element, OverlayScrollbars> = new Map();\r\n\r\n  targets.forEach((target: Element) => {\r\n    /* istanbul ignore else */\r\n    if (targetInstanceMap.has(target)) {\r\n      validTargetInstanceMap.set(target, targetInstanceMap.get(target)!);\r\n    }\r\n  });\r\n\r\n  targets.clear();\r\n\r\n  validTargetInstanceMap.forEach((instance: OverlayScrollbars, validTarget: Element) => {\r\n    targets.add(validTarget);\r\n  });\r\n\r\n  return validTargetInstanceMap;\r\n};\r\n","import { OSOptions } from 'options';\r\nimport { createEventListenerHub, XY } from 'support';\r\nimport { PartialOptions } from 'typings';\r\nimport type {\r\n  InitialEventListeners,\r\n  AddEventListener,\r\n  RemoveEventListener,\r\n  TriggerEventListener,\r\n  EventListener,\r\n} from 'support/eventListeners';\r\n/*\r\nonScrollStart               : null,\r\nonScroll                    : null,\r\nonScrollStop                : null,\r\nonOverflowChanged           : null,\r\nonOverflowAmountChanged     : null, // fusion with onOverflowChanged\r\nonDirectionChanged          : null, // gone\r\nonContentSizeChanged        : null, // gone\r\nonHostSizeChanged           : null, // gone\r\n*/\r\n\r\nexport interface OnUpdatedEventListenerArgs {\r\n  updateHints: {\r\n    sizeChanged: boolean;\r\n    directionChanged: boolean;\r\n    heightIntrinsicChanged: boolean;\r\n    overflowAmountChanged: boolean;\r\n    overflowScrollChanged: boolean;\r\n    hostMutation: boolean;\r\n    contentMutation: boolean;\r\n  };\r\n  changedOptions: PartialOptions<OSOptions>;\r\n  force: boolean;\r\n}\r\n\r\nexport interface OnOverflowChangedEventListenerArgs {\r\n  overflow: XY<boolean>; // whether there is an overflow\r\n  scrollableOverflow: XY<boolean>; // whether there is an scrollable overflow\r\n  amount: XY<number>; // the overflow amount in pixel\r\n  previous: {\r\n    overflow: XY<boolean>;\r\n    scrollableOverflow: XY<boolean>;\r\n    amount: XY<number>;\r\n  };\r\n}\r\n\r\nexport interface OSEventListenersNameArgsMap {\r\n  initialized: undefined;\r\n  initializationWithdrawn: undefined;\r\n  overflowChanged: OnOverflowChangedEventListenerArgs;\r\n  updated: OnUpdatedEventListenerArgs;\r\n  destroyed: undefined;\r\n}\r\n\r\nexport type OSEventListener<\r\n  N extends Extract<keyof OSEventListenersNameArgsMap, string> = Extract<\r\n    keyof OSEventListenersNameArgsMap,\r\n    string\r\n  >\r\n> = EventListener<OSEventListenersNameArgsMap, N>;\r\n\r\nexport type AddOSEventListener = AddEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type RemoveOSEventListener = RemoveEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type TriggerOSEventListener = TriggerEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type InitialOSEventListeners = InitialEventListeners<OSEventListenersNameArgsMap>;\r\n\r\nexport const createOSEventListenerHub = (initialEventListeners?: InitialOSEventListeners) =>\r\n  createEventListenerHub(initialEventListeners);\r\n","import { OSTarget, OSInitializationObject, PartialOptions } from 'typings';\r\nimport { assignDeep, isEmptyObject, each, isFunction, keys, isHTMLElement, WH, XY } from 'support';\r\nimport { createStructureSetup, createScrollbarsSetup } from 'setups';\r\nimport { getOptionsDiff, OSOptions, ReadonlyOSOptions } from 'options';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  getPlugins,\r\n  addPlugin,\r\n  optionsValidationPluginName,\r\n  OSPlugin,\r\n  OptionsValidationPluginInstance,\r\n} from 'plugins';\r\nimport { addInstance, getInstance, removeInstance } from 'instances';\r\nimport {\r\n  createOSEventListenerHub,\r\n  InitialOSEventListeners,\r\n  AddOSEventListener,\r\n  RemoveOSEventListener,\r\n} from 'eventListeners';\r\n\r\nexport interface OverlayScrollbarsStatic {\r\n  (\r\n    target: OSTarget | OSInitializationObject,\r\n    options?: PartialOptions<OSOptions>,\r\n    eventListeners?: InitialOSEventListeners\r\n  ): OverlayScrollbars;\r\n\r\n  extend(osPlugin: OSPlugin | OSPlugin[]): void;\r\n}\r\n\r\nexport interface OverlayScrollbars {\r\n  options(): OSOptions;\r\n  options(newOptions?: PartialOptions<OSOptions>): OSOptions;\r\n\r\n  update(force?: boolean): void;\r\n  destroy(): void;\r\n\r\n  state(): any;\r\n\r\n  on: AddOSEventListener;\r\n  off: RemoveOSEventListener;\r\n}\r\n\r\nconst createOverflowChangedArgs = (\r\n  overflowAmount: WH<number>,\r\n  hasOverflow: XY<boolean>,\r\n  overflowScroll: XY<boolean>\r\n) => ({\r\n  amount: {\r\n    x: overflowAmount.w,\r\n    y: overflowAmount.h,\r\n  },\r\n  overflow: hasOverflow,\r\n  scrollableOverflow: assignDeep({}, overflowScroll),\r\n});\r\n\r\nexport const OverlayScrollbars: OverlayScrollbarsStatic = (\r\n  target,\r\n  options?,\r\n  eventListeners?\r\n): OverlayScrollbars => {\r\n  const {\r\n    _getDefaultOptions,\r\n    _nativeScrollbarIsOverlaid,\r\n    _addListener: addEnvListener,\r\n  } = getEnvironment();\r\n  const plugins = getPlugins();\r\n  const instanceTarget = isHTMLElement(target) ? target : target.target;\r\n  const potentialInstance = getInstance(instanceTarget);\r\n  if (potentialInstance) {\r\n    return potentialInstance;\r\n  }\r\n\r\n  const optionsValidationPlugin = plugins[\r\n    optionsValidationPluginName\r\n  ] as OptionsValidationPluginInstance;\r\n  const validateOptions = (newOptions?: PartialOptions<OSOptions>) => {\r\n    const opts = newOptions || {};\r\n    const validate = optionsValidationPlugin && optionsValidationPlugin._;\r\n    return validate ? validate(opts, true) : opts;\r\n  };\r\n  const currentOptions: ReadonlyOSOptions = assignDeep(\r\n    {},\r\n    _getDefaultOptions(),\r\n    validateOptions(options)\r\n  );\r\n  const [addEvent, removeEvent, triggerEvent] = createOSEventListenerHub(eventListeners);\r\n\r\n  if (\r\n    _nativeScrollbarIsOverlaid.x &&\r\n    _nativeScrollbarIsOverlaid.y &&\r\n    !currentOptions.nativeScrollbarsOverlaid.initialize\r\n  ) {\r\n    triggerEvent('initializationWithdrawn');\r\n  }\r\n\r\n  const [updateStructure, structureState, destroyStructure] = createStructureSetup(\r\n    target,\r\n    currentOptions\r\n  );\r\n  const [updateScrollbars, , destroyScrollbars] = createScrollbarsSetup(\r\n    target,\r\n    currentOptions,\r\n    structureState._elements\r\n  );\r\n\r\n  const update = (changedOptions: PartialOptions<OSOptions>, force?: boolean) => {\r\n    updateStructure(changedOptions, force);\r\n    updateScrollbars(changedOptions, force);\r\n  };\r\n\r\n  structureState._addOnUpdatedListener((updateHints, changedOptions, force) => {\r\n    const {\r\n      _sizeChanged,\r\n      _directionChanged,\r\n      _heightIntrinsicChanged,\r\n      _overflowAmountChanged,\r\n      _overflowScrollChanged,\r\n      _contentMutation,\r\n      _hostMutation,\r\n    } = updateHints;\r\n    const { _overflowAmount, _overflowScroll, _hasOverflow } = structureState();\r\n\r\n    if (_overflowAmountChanged || _overflowScrollChanged) {\r\n      triggerEvent(\r\n        'overflowChanged',\r\n        assignDeep({}, createOverflowChangedArgs(_overflowAmount, _hasOverflow, _overflowScroll), {\r\n          previous: createOverflowChangedArgs(_overflowAmount!, _hasOverflow, _overflowScroll!),\r\n        })\r\n      );\r\n    }\r\n\r\n    triggerEvent('updated', {\r\n      updateHints: {\r\n        sizeChanged: _sizeChanged,\r\n        directionChanged: _directionChanged,\r\n        heightIntrinsicChanged: _heightIntrinsicChanged,\r\n        overflowAmountChanged: _overflowAmountChanged,\r\n        overflowScrollChanged: _overflowScrollChanged,\r\n        contentMutation: _contentMutation,\r\n        hostMutation: _hostMutation,\r\n      },\r\n      changedOptions,\r\n      force,\r\n    });\r\n  });\r\n\r\n  const removeEnvListener = addEnvListener(update.bind(0, {}, true));\r\n\r\n  const instance: OverlayScrollbars = {\r\n    options(newOptions?: PartialOptions<OSOptions>) {\r\n      if (newOptions) {\r\n        const changedOptions = getOptionsDiff(currentOptions, validateOptions(newOptions));\r\n\r\n        if (!isEmptyObject(changedOptions)) {\r\n          assignDeep(currentOptions, changedOptions);\r\n          update(changedOptions);\r\n        }\r\n      }\r\n      return currentOptions;\r\n    },\r\n    on: addEvent,\r\n    off: removeEvent,\r\n    state: () => ({\r\n      _overflowAmount: structureState()._overflowAmount,\r\n    }),\r\n    update(force?: boolean) {\r\n      update({}, force);\r\n    },\r\n    destroy: () => {\r\n      removeInstance(instanceTarget);\r\n      removeEnvListener();\r\n      removeEvent();\r\n\r\n      destroyScrollbars();\r\n      destroyStructure();\r\n\r\n      triggerEvent('destroyed');\r\n    },\r\n  };\r\n\r\n  each(keys(plugins), (pluginName) => {\r\n    const pluginInstance = plugins[pluginName];\r\n    if (isFunction(pluginInstance)) {\r\n      pluginInstance(OverlayScrollbars, instance);\r\n    }\r\n  });\r\n\r\n  instance.update(true);\r\n\r\n  addInstance(instanceTarget, instance);\r\n\r\n  triggerEvent('initialized');\r\n\r\n  return instance;\r\n};\r\n\r\nOverlayScrollbars.extend = addPlugin;\r\n"],"names":["createCache","options","update","_initialValue","_equal","_alwaysUpdateValues","_value","_previous","cacheUpdateContextual","newValue","force","curr","newVal","changed","cacheUpdateIsolated","getCurrentCache","ElementNodeType","Node","ELEMENT_NODE","toString","hasOwnProperty","Object","prototype","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","Set","forEach","value","elm","isEmptyArray","runEach","args","runFn","fn","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","getSetProp","topLeft","fallback","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","insertedNodes","insertAfter","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","firstLetterToUpper","str","charAt","toUpperCase","slice","getDummyStyle","style","cssPrefixes","jsPrefixes","jsCache","cssCache","cssProperty","uppercasedName","elmStyle","prefix","prefixWithoutDashes","resultPossibilities","resultPossibility","jsAPI","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","removeClass","remove","addClass","add","bind","diffClass","classNameA","classNameB","classNameASplit","split","classNameBSplit","tempObj","equal","a","b","props","propMutation","compareA","compareB","equalWH","equalXY","equalTRBL","equalBCRWH","round","Math","clearTimeouts","id","clearTimeout","noop","debounce","functionToDebounce","timeoutId","maxTimeoutId","prevArguments","latestArguments","_timeout","_maxDelay","_mergeParams","setT","setTimeout","invokeFunctionToDebounce","mergeParms","flush","debouncedFn","arguments","finalTimeout","hasTimeout","finalMaxWait","hasMaxWait","setTimeoutFn","mergeParamsResult","invokedArgs","boundInvoke","_flush","cssNumber","opacity","zindex","parseToZeroOrNumber","toFloat","num","parseFloat","parseInt","Number","isNaN","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","setCSSVal","setProperty","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","topRightBottomLeft","propertyPrefix","propertySuffix","finalPrefix","finalSuffix","top","right","bottom","left","t","r","l","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","fractionalSize","cssHeight","cssWidth","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","off","listener","capture","eventName","removeEventListener","on","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","stopPropagation","preventDefault","stopAndPrevent","x","y","absoluteCoordinates","rect","pageYOffset","pageXOffset","manageListener","createEventListenerHub","initialEventListeners","events","Map","removeEvent","eventSet","currListener","clear","addEvent","set","triggerEvent","event","initialListenerKeys","getPropByPath","path","o","createOptionCheck","changedOptions","createState","initialState","state","newState","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","dataAttributeHost","classNamePadding","classNameViewport","classNameViewportArrange","classNameContent","classNameViewportScrollbarStyling","classNameOverflowVisible","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","classNameScrollbar","classNameScrollbarHorizontal","classNameScrollbarVertical","classNameScrollbarTrack","classNameScrollbarHandle","stringify","JSON","_","Error","defaultOptions","resize","paddingAbsolute","updating","elementEvents","attributes","overflow","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","clickScroll","touch","textarea","dynWidth","dynHeight","inheritedAttrs","nativeScrollbarsOverlaid","show","initialize","callbacks","onUpdated","getOptionsDiff","currOptions","newOptions","diff","optionsKeys","concat","optionKey","currOptionValue","newOptionValue","isDiff","environmentInstance","abs","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","getNativeScrollbarSize","body","measureElm","measureElmChild","cSize","oSize","fSize","getNativeScrollbarStyling","testElm","revertClass","ex","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","revertFbxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","revertFbxGlueMax","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","getDefaultInitializationStrategy","nativeScrollbarStyling","_host","_viewport","_padding","_content","_scrollbarsSlot","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","updateNativeScrollbarSizeCache","getNativeScrollbarSizeCache","nativeScrollbarSize","nativeScrollbarIsOverlaid","initializationStrategy","defaultDefaultOptions","env","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_cssCustomProperties","_rtlScrollBehavior","_flexboxGlue","_addListener","delete","_getInitializationStrategy","_setInitializationStrategy","newInitializationStrategy","_getDefaultOptions","_setDefaultOptions","newDefaultOptions","_defaultInitializationStrategy","_defaultDefaultOptions","size","dpr","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","scrollbarSize","scrollbarSizeChanged","getEnvironment","contentArrangeCounter","unwrap","createUniqueViewportArrangeElement","create","staticCreationFromStrategy","initializationValue","strategy","dynamicCreationFromStrategy","takeInitializationValue","addDataAttrHost","createStructureSetupElements","hostInitializationStrategy","viewportInitializationStrategy","paddingInitializationStrategy","contentInitializationStrategy","targetIsElm","targetStructureInitialization","targetElement","isTextarea","isBody","ownerDocument","bodyElm","wnd","defaultView","evaluatedTargetObj","_target","host","viewport","padding","content","_viewportArrange","_windowElm","_documentElm","_htmlElm","_bodyElm","_isTextarea","_isBody","_targetIsElm","generatedElements","elementIsGenerated","destroyFns","isTextareaHostGenerated","targetContents","contentSlot","removeHostDataAttr","removePaddingClass","removeViewportClass","removeContentClass","createTrinsicUpdate","structureSetupElements","getState","updateHints","_heightIntrinsic","_heightIntrinsicChanged","height","display","_sizeChanged","_contentMutation","createPaddingUpdate","setState","updatePaddingCache","currentPaddingCache","checkOption","paddingChanged","_directionIsRTL","_directionChanged","paddingAbsoluteChanged","contentMutation","paddingStyleChanged","paddingRelative","paddingHorizontal","paddingVertical","paddingStyle","marginRight","marginBottom","marginLeft","width","viewportStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","_paddingAbsolute","_viewportPaddingStyle","_paddingStyleChanged","max","strVisible","overlaidScrollbarsHideOffset","whCacheOptions","xyCacheOptions","getOverflowAmount","viewportScrollSize","viewportClientSize","sizeFraction","tollerance","amount","conditionalClass","condition","overflowIsVisible","overflowBehavior","createOverflowUpdate","doViewportArrange","updateSizeFraction","getCurrentSizeFraction","updateViewportScrollSizeCache","getCurrentViewportScrollSizeCache","updateOverflowAmountCache","getCurrentOverflowAmountCache","updateOverflowScrollCache","fixFlexboxGlue","viewportOverflowState","heightIntrinsic","_overflowScroll","_scrollbarsHideOffset","hostClientSize","isContentBox","subtractXScrollbar","getViewportOverflowState","showNativeOverlaidScrollbars","viewportStyleObj","overlaidX","overlaidY","determineOverflow","arrangeHideOffset","styleObj","scroll","nonScrollbarStylingHideOffset","scrollbarsHideOffset","_scrollbarsHideOffsetArrange","setViewportOverflowState","hasOverflow","overflowOption","setAxisOverflowStyle","behavior","hasOverflowAxis","overflowVisible","visibleBehaviorX","visibleBehaviorY","arrangeViewport","directionIsRTL","arrangeX","arrangeY","hideOffsetX","hideOffsetY","viewportArrangeHorizontalPaddingKey","viewportArrangeHorizontalPaddingValue","viewportArrangeVerticalPaddingValue","fractionalContentWidth","fractionalContenHeight","arrangeSize","sheet","cssRules","insertRule","ruleStyle","hideNativeScrollbars","viewportArrange","viewportPaddingStyle","horizontalMarginKey","viewportHorizontalPaddingKey","horizontalMarginValue","verticalMarginValue","horizontalPaddingValue","verticalPaddingValue","undoViewportArrange","finalViewportOverflowState","finalPaddingStyle","assignProps","prevStyle","_hostMutation","showNativeOverlaidScrollbarsOption","showNativeOverlaidScrollbarsChanged","overflowChanged","adjustFlexboxGlue","overflowXVisible","overflowYVisible","sizeFractionCache","viewportScrollSizeCache","overflowAmuntCache","updateHintsReturn","preMeasureViewportOverflowState","redoViewportArrange","undoViewportArrangeOverflowState","sizeFractionChanged","viewportScrollSizeChanged","viewportclientSize","arrangedViewportScrollSize","arrangedViewportClientSize","overflowAmount","overflowAmountChanged","removeClipping","viewportArranged","overflowScroll","overflowScrollChanged","_overflowAmount","_hasOverflow","_overflowAmountChanged","_overflowScrollChanged","prepareUpdateHints","leading","adaptive","finalAdaptive","objKeys","leadingValue","adaptiveValue","createStructureSetupUpdate","updateSegments","initialUpdateHints","adjustScrollOffset","scrollOffsetX","scrollOffsetY","adaptivedUpdateHints","updateSegment","animationStartEventName","scrollEventName","scrollAmount","getElmDirectionIsRTL","domRectHasDimensions","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","getIsDirectionRTL","updateResizeObserverContentRectCache","currVal","onSizeChangedCallbackProxy","sizeChangedContext","isResizeObserverCall","hasDirectionCache","skip","appear","doDirectionScroll","currRContentRect","prevContentRect","pop","contentRect","hasDimensions","hadDimensions","rtl","_directionIsRTLCache","appearCallback","directionIsRTLCache","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionIsRTLCache","directionIsRTLCacheValues","directionIsRTLChanged","isHeightIntrinsic","ioEntryOrSize","isIntersecting","intersectionRatio","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","updateHeightIntrinsicCache","triggerOnTrinsicChangedCallback","updateValue","heightIntrinsicChanged","intersectionObserverInstance","entries","root","onSizeChanged","newSize","createEventContentChange","eventContentChange","map","destroyed","destroy","updateElements","getElements","eventElmList","elements","entry","entryEventNames","entryOff","WeakMap","createDOMObserver","isContentObserver","isConnected","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetChange","_ignoreNestedTargetChange","_ignoreContentChange","destroyEventContentChange","updateEventContentChangeElements","finalAttributes","finalStyleChangingAttributes","observedAttributes","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributeOldValue","attributeFilter","subtree","childList","characterData","takeRecords","ignorePrefix","viewportAttrsFromTarget","baseStyleChangingAttrsTextarea","baseStyleChangingAttrs","addedOrRemovedClass","createStructureSetupObservers","structureSetupUpdate","debounceTimeout","debounceMaxDelay","contentMutationObserver","contentMutationObserverAttr","structureSetupUpdateWithDebouncedAdaptiveUpdateHints","prev","prevObj","currObj","updateViewportAttrsFromHost","attribute","hostAttr","onTrinsicChanged","heightIntrinsicCache","updateFn","directionChanged","onContentMutation","contentChangedTroughEvent","onHostMutation","destroyTrinsicObserver","destroySizeObserver","destroyHostMutationObserver","elementEventsChanged","attributesChanged","debounceValue","debounceChanged","updateContentMutationObserver","timeout","maxWait","initialStructureSetupUpdateState","createStructureSetup","checkOptionsFallback","onUpdatedListeners","runOnUpdatedListeners","destroyElements","updateStructure","updateObservers","destroyObservers","structureSetupState","_addOnUpdatedListener","_elements","generateScrollbarDOM","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","createScrollbarsSetupElements","environmentScrollbarSlot","initializationScrollbarSlot","scrollbarsSlot","initializationScrollbarSlotResult","evaluatedScrollbarSlot","horizontalScrollbarStructure","verticalScrollbarStructure","horizontalScrollbar","verticalScrollbar","_horizontalScrollbarStructure","_verticalScrollbarStructure","createScrollbarsSetup","scrollbarsSetupState","console","log","pluginRegistry","getPlugins","addPlugin","addedPlugin","plugin","_extends","module","assign","exports","__esModule","templateTypePrefixSuffix","optionsTemplateTypes","numberAllowedValues","oTypes","number","booleanAllowedValues","boolean","arrayNullValues","null","stringArrayNullAllowedValues","string","resizeAllowedValues","overflowAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","function","optionsValidationPluginName","targets","targetInstanceMap","addInstance","osInstance","removeInstance","getInstance","createOSEventListenerHub","createOverflowChangedArgs","scrollableOverflow","OverlayScrollbars","eventListeners","addEnvListener","plugins","instanceTarget","potentialInstance","optionsValidationPlugin","validateOptions","opts","validate","currentOptions","structureState","destroyStructure","updateScrollbars","destroyScrollbars","previous","sizeChanged","hostMutation","removeEnvListener","instance","pluginName","pluginInstance","extend"],"mappings":"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"}