{"version":3,"file":"overlayscrollbars.esm.js","sources":["../src/support/utils/types.ts","../src/support/dom/attribute.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/class.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/utils/equal.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/offset.ts","../src/support/cache/cache.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/support/options/validation.ts","../src/support/options/transformation.ts","../src/classnames.ts","../src/environment/environment.ts","../src/setups/structureSetup.ts","../src/lifecycles/lifecycleUpdateFunction.ts","../src/lifecycles/overflowLifecycle.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/lifecycles/lifecycleHub.ts","../src/options/options.ts","../src/overlayscrollbars/overlayscrollbars.ts","../src/index.ts"],"sourcesContent":["import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) => {\r\n  return isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n};\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: Array<unknown>) => unknown {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat) ? (length > 0 && isObject(obj) ? length - 1 in obj : true) : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value?: string): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(obj: PlainObject, callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: Array<T>, item: T, fromIndex?: number): number => arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: Array<T>, items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): Array<T> => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items) ? Array.prototype.push.apply(array, items as Array<T>) : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr: ArrayLike<T>) => {\r\n  if (Array.from) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: Array<T> = [];\r\n\r\n  each(arr, (elm) => {\r\n    push(result, elm);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: Array<any> | null | undefined) => array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, p1?: unknown): void => {\r\n  const runFn = (fn: RunEachItem) => fn && fn(p1);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | null | undefined,\r\n  className: string,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | null | undefined, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n */\r\nexport const addClass = (elm: Element | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n};\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (classNameA: string | null | undefined, classNameB: string | null | undefined) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> => (elm ? from(elm.childNodes) : []);\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (elm: InputElementType, highBoundarySelector: string, deepBoundarySelector: string): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (parentElm: Node | null | undefined, preferredAnchor: Node | null | undefined, insertedElms: NodeCollection): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","export interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean => !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null | undefined): boolean => (elm ? elementHasDimensions(elm as HTMLElement) : false);\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(target: EventTarget, eventNames: string, listener: (event: T) => any, capture?: boolean): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event) => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event) => evt.preventDefault();\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(a: T | undefined, b: T | undefined, props: Array<keyof T>): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      if (a[prop] !== b[prop]) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = (a?: WH, b?: WH) => equal<WH>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = (a?: XY, b?: XY) => equal<XY>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = ['WebKit', 'Moz', 'O', 'MS', 'webkit', 'moz', 'o', 'ms'];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without, or undefined if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string | undefined => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n    result = resultPossibilities.find((resultPossibility: string) => elmStyle[resultPossibility] !== undefined);\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported wuthout, or undefined if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string | undefined => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>('IntersectionObserver');\r\nexport const ResizeObserverConstructor: any | undefined = jsAPI('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isNumber } from 'support/utils/types';\r\nimport { cAF, rAF } from 'support/compatibility/apis';\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param timeout The timeout for debouncing. If 0 or lower animation frame is used for debouncing, a timeout otherwise.\r\n * @param maxWait A maximum amount of ms. before the function will be called even with debounce.\r\n */\r\nexport const debounce = (functionToDebounce: (...args: any) => any, timeout?: number, maxWait?: number) => {\r\n  let timeoutId: number | void;\r\n  let lastCallTime: number;\r\n  const hasTimeout = isNumber(timeout) && timeout > 0;\r\n  const hasMaxWait = isNumber(maxWait) && maxWait > 0;\r\n  const cancel = hasTimeout ? window.clearTimeout : cAF!;\r\n  const set = hasTimeout ? window.setTimeout : rAF!;\r\n  const setFn = function (args: IArguments) {\r\n    lastCallTime = hasMaxWait ? performance.now() : 0;\r\n    timeoutId && cancel(timeoutId);\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  return function () {\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const boundSetFn = setFn.bind(this, arguments); // eslint-disable-line\r\n    const forceCall = hasMaxWait ? performance.now() - lastCallTime >= maxWait! : false;\r\n\r\n    timeoutId && cancel(timeoutId);\r\n    timeoutId = forceCall ? boundSetFn() : (set(boundSetFn, timeout!) as number);\r\n  };\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\ntype CssStyles = { [key: string]: string | number };\r\nconst cssNumber = {\r\n  animationiterationcount: 1,\r\n  columncount: 1,\r\n  fillopacity: 1,\r\n  flexgrow: 1,\r\n  flexshrink: 1,\r\n  fontweight: 1,\r\n  lineheight: 1,\r\n  opacity: 1,\r\n  order: 1,\r\n  orphans: 1,\r\n  widows: 1,\r\n  zindex: 1,\r\n  zoom: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number => (!cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val);\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null ? computedStyle.getPropertyValue(prop) : elm.style[prop];\r\nconst setCSSVal = (elm: HTMLElement | null | undefined, prop: string, val: string | number): void => {\r\n  try {\r\n    if (elm && elm.style[prop] !== undefined) {\r\n      elm.style[prop] = adaptCSSVal(prop, val);\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style(elm: HTMLElement | null | undefined, styles: CssStyles): void;\r\nexport function style(elm: HTMLElement | null | undefined, styles: string): string;\r\nexport function style(elm: HTMLElement | null | undefined, styles: Array<string> | string): { [key: string]: string };\r\nexport function style(elm: HTMLElement | null | undefined, styles: CssStyles | Array<string> | string): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | null): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns a top\r\n * @param elm\r\n * @param property\r\n */\r\nexport const topRightBottomLeft = (elm: HTMLElement | null | undefined, property?: string): TRBL => {\r\n  const finalProp = property || '';\r\n  const top = `${finalProp}-top`;\r\n  const right = `${finalProp}-right`;\r\n  const bottom = `${finalProp}-bottom`;\r\n  const left = `${finalProp}-left`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","export interface CacheValues<T> {\r\n  readonly _value?: T;\r\n  readonly _previous?: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport interface CacheOptions<T> {\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<T>;\r\n  // Initial value for _value\r\n  _initialValue?: T;\r\n  // If true updates always _value and _previous, otherwise they update only when changed\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport interface Cache<T, C = undefined> {\r\n  _current: (force?: boolean) => CacheValues<T>;\r\n  _update: CacheUpdate<T, C>;\r\n}\r\n\r\nexport type CacheUpdate<T, C> = undefined extends C\r\n  ? (force?: boolean | 0, context?: C) => CacheValues<T>\r\n  : (force: boolean | 0, context: C) => CacheValues<T>;\r\n\r\nexport type UpdateCachePropFunction<T, C> = undefined extends C\r\n  ? (context?: C, current?: T, previous?: T) => T\r\n  : C extends T\r\n  ? ((context: C, current?: T, previous?: T) => T) | 0\r\n  : (context: C, current?: T, previous?: T) => T;\r\n\r\nexport type EqualCachePropFunction<T> = (currentVal?: T, newVal?: T) => boolean;\r\n\r\nexport const createCache = <T, C = undefined>(update: UpdateCachePropFunction<T, C>, options?: CacheOptions<T>): Cache<T, C> => {\r\n  const { _equal, _initialValue, _alwaysUpdateValues } = options || {};\r\n  let _value: T | undefined = _initialValue;\r\n  let _previous: T | undefined;\r\n\r\n  const cacheUpdate = ((force?: boolean | 0, context?: C) => {\r\n    const curr = _value;\r\n    // @ts-ignore\r\n    // update can only not be a function if C extends T as described in \"UpdateCachePropFunction\" type definition\r\n    // if C extends T the cast (context as T) is perfectly valid\r\n    const newVal = update ? update(context, _value, _previous) : (context as T);\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return {\r\n      _value,\r\n      _previous,\r\n      _changed: changed,\r\n    };\r\n  }) as CacheUpdate<T, C>;\r\n\r\n  return {\r\n    _update: cacheUpdate,\r\n    _current: (force?: boolean) => ({\r\n      _value,\r\n      _previous,\r\n      _changed: !!force,\r\n    }),\r\n  };\r\n};\r\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { OptionsTemplate, OptionsTemplateTypes, OptionsTemplateType, Func, OptionsValidationResult, OptionsValidated } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\n\r\nconst { stringify } = JSON;\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = ['boolean', 'number', 'string', 'array', 'object', 'function', 'null'].reduce(\r\n  (result, item) => {\r\n    result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n    return result;\r\n  },\r\n  {} as OptionsTemplateTypesDictionary\r\n);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff: T,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: OptionsValidated<T> = {};\r\n  const optionsCopy: T = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsDiffValue: any = isUndefined(optionsDiff[prop]) ? {} : optionsDiff[prop];\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> = template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const validatedResult = validateRecursive(optionsValue, templateValue as PlainObject, optionsDiffValue, doWriteErrors, propPrefix + prop);\r\n      validatedOptions[prop] = validatedResult._validated as any;\r\n      optionsCopy[prop] = validatedResult._foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        const doStringifyComparison = isArray(optionsValue) || isPlainObject(optionsValue);\r\n        if (doStringifyComparison ? stringify(optionsValue) !== stringify(optionsDiffValue) : optionsValue !== optionsDiffValue) {\r\n          validatedOptions[prop] = optionsValue;\r\n        }\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${errorEnumStrings.length > 0 ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].` : ''}`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    _foreign: optionsCopy,\r\n    _validated: validatedOptions,\r\n  };\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff?: T | null,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => {\r\n  /*\r\n    if (!isEmptyObject(foreign) && doWriteErrors)\r\n        console.warn(`The following options are discarded due to invalidity:\\r\\n ${window.JSON.stringify(foreign, null, 2)}`);\r\n\r\n    //add values, which aren't specified in the template, to the finished validated object to prevent them from being discarded\r\n    if (keepForeignProps) {\r\n        Object.assign(result.validated, foreign);\r\n    }\r\n    */\r\n  return validateRecursive<T>(options, template, optionsDiff || ({} as T), doWriteErrors || false);\r\n};\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<Record<string, unknown>>;\r\n  readonly function: OptionsTemplateType<Func>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n","import { OptionsTemplate, OptionsWithOptionsTemplate, OptionsTemplateTypes } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\nimport { isArray } from 'support/utils/types';\r\nimport { each, keys } from 'support/utils';\r\n\r\nexport interface OptionsWithOptionsTemplateTransformation<T extends Required<T>> {\r\n  _template: OptionsTemplate<T>;\r\n  _options: T;\r\n}\r\n\r\n/**\r\n * Transforms the given OptionsWithOptionsTemplate<T> object to its corresponding generic (T) Object or its corresponding Template object.\r\n * @param optionsWithOptionsTemplate The OptionsWithOptionsTemplate<T> object which shall be converted.\r\n * @param toTemplate True if the given OptionsWithOptionsTemplate<T> shall be converted to its corresponding Template object.\r\n */\r\nexport function transformOptions<T extends Required<T>>(\r\n  optionsWithOptionsTemplate: OptionsWithOptionsTemplate<T>\r\n): OptionsWithOptionsTemplateTransformation<T> {\r\n  const result: any = {\r\n    _template: {},\r\n    _options: {},\r\n  };\r\n\r\n  each(keys(optionsWithOptionsTemplate), (key: Extract<keyof T, string>) => {\r\n    const val: PlainObject | OptionsTemplateTypes | Array<OptionsTemplateTypes> = optionsWithOptionsTemplate[key];\r\n\r\n    if (isArray(val)) {\r\n      result._template[key] = val[1];\r\n      result._options[key] = val[0];\r\n    } else {\r\n      //  if (isObject(val))\r\n      const tmpResult = transformOptions(val as OptionsWithOptionsTemplate<typeof val>);\r\n      result._template[key] = tmpResult._template;\r\n      result._options[key] = tmpResult._options;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameContent = 'os-content';\r\nexport const classNameContentArrange = `${classNameContent}-arrange`;\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalWH,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  _autoUpdateLoop: boolean;\r\n  _nativeScrollbarSize: XY;\r\n  _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  _nativeScrollbarStyling: boolean;\r\n  _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  _flexboxGlue: boolean;\r\n  _addListener(listener: OnEnvironmentChanged): void;\r\n  _removeListener(listener: OnEnvironmentChanged): void;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst getNativeScrollbarSize = (body: HTMLElement, measureElm: HTMLElement): XY => {\r\n  appendChildren(body, measureElm);\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h,\r\n    y: oSize.w - cSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, 'scrollbar-width') === 'none' || window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n  } catch (ex) {}\r\n\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (parentElm: HTMLElement, childElm: HTMLElement): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = offsetSize(parentElm);\r\n  const minOffsetsize = offsetSize(childElm);\r\n  const supportsMin = equalWH(minOffsetsize, minOffsetsizeParent);\r\n\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = offsetSize(parentElm);\r\n  const maxOffsetsize = offsetSize(childElm);\r\n  const supportsMax = equalWH(maxOffsetsize, maxOffsetsizeParent);\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const nativeScrollbarSize = getNativeScrollbarSize(body, envElm);\r\n  const nativeScrollbarStyling = false; //getNativeScrollbarStyling(envElm); TODO: Re-enable\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n\r\n  const env: Environment = {\r\n    _autoUpdateLoop: false,\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.add(listener);\r\n    },\r\n    _removeListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.delete(listener);\r\n    },\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n    let scrollbarSize = nativeScrollbarSize;\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const newScrollbarSize = (environmentInstance._nativeScrollbarSize = getNativeScrollbarSize(body, envElm));\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSize.x !== newScrollbarSize.x || scrollbarSize.y !== newScrollbarSize.y) {\r\n            runEach(onChangedListener);\r\n          }\r\n\r\n          scrollbarSize = newScrollbarSize;\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  isUndefined,\r\n  removeElements,\r\n  removeClass,\r\n  push,\r\n  runEach,\r\n  prependChildren,\r\n} from 'support';\r\nimport {\r\n  classNameHost,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameContent,\r\n  classNameContentArrange,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { getEnvironment } from 'environment';\r\nimport { OSTarget, OSTargetObject, InternalVersionOf, OSTargetElement } from 'typings';\r\n\r\nexport interface OSTargetContext {\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: HTMLDocument;\r\n}\r\n\r\nexport interface PreparedOSTargetObject extends Required<InternalVersionOf<OSTargetObject>> {\r\n  _host: HTMLElement;\r\n  _contentArrange: HTMLElement | null;\r\n}\r\n\r\nexport interface StructureSetup {\r\n  _targetObj: PreparedOSTargetObject;\r\n  _targetCtx: OSTargetContext;\r\n  _destroy: () => void;\r\n}\r\n\r\nconst unwrap = (elm: HTMLElement | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nexport const createStructureSetup = (target: OSTarget | OSTargetObject): StructureSetup => {\r\n  const targetIsElm = isHTMLElement(target);\r\n  const osTargetObj: InternalVersionOf<OSTargetObject> = targetIsElm\r\n    ? ({} as InternalVersionOf<OSTargetObject>)\r\n    : {\r\n        _host: (target as OSTargetObject).host,\r\n        _target: (target as OSTargetObject).target,\r\n        _padding: (target as OSTargetObject).padding,\r\n        _viewport: (target as OSTargetObject).viewport,\r\n        _content: (target as OSTargetObject).content,\r\n      };\r\n\r\n  if (targetIsElm) {\r\n    const padding = createDiv(classNamePadding);\r\n    const viewport = createDiv(classNameViewport);\r\n    const content = createDiv(classNameContent);\r\n\r\n    appendChildren(padding, viewport);\r\n    appendChildren(viewport, content);\r\n\r\n    osTargetObj._target = target as OSTargetElement;\r\n    osTargetObj._padding = padding;\r\n    osTargetObj._viewport = viewport;\r\n    osTargetObj._content = content;\r\n  }\r\n\r\n  let { _target, _padding, _viewport, _content } = osTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextarea = is(_target, 'textarea');\r\n  const isBody = !isTextarea && is(_target, 'body');\r\n  const _host = (isTextarea ? osTargetObj._host || createDiv() : _target) as HTMLElement;\r\n  const getTargetContents = (contentSlot: HTMLElement) => (isTextarea ? (_target as HTMLTextAreaElement) : contents(contentSlot as HTMLElement));\r\n  const isTextareaHostGenerated = isTextarea && _host !== osTargetObj._host;\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  if (targetIsElm) {\r\n    appendChildren(_content!, getTargetContents(_target));\r\n    appendChildren(_host, _padding);\r\n\r\n    push(destroyFns, () => {\r\n      appendChildren(_host, contents(_content));\r\n      removeElements(_padding);\r\n      removeClass(_host, classNameHost);\r\n    });\r\n  } else {\r\n    const contentContainingElm = _content || _viewport || _padding || _host;\r\n    const createPadding = isUndefined(_padding);\r\n    const createViewport = isUndefined(_viewport);\r\n    const createContent = isUndefined(_content);\r\n    const targetContents = getTargetContents(contentContainingElm);\r\n\r\n    _padding = osTargetObj._padding = createPadding ? createDiv() : _padding;\r\n    _viewport = osTargetObj._viewport = createViewport ? createDiv() : _viewport;\r\n    _content = osTargetObj._content = createContent ? createDiv() : _content;\r\n\r\n    appendChildren(_host, _padding);\r\n    appendChildren(_padding || _host, _viewport);\r\n    appendChildren(_viewport, _content);\r\n\r\n    const contentSlot = _content || _viewport;\r\n    appendChildren(contentSlot, targetContents);\r\n\r\n    push(destroyFns, () => {\r\n      if (createContent) {\r\n        unwrap(_content);\r\n      }\r\n      if (createViewport) {\r\n        unwrap(_viewport);\r\n      }\r\n      if (createPadding) {\r\n        unwrap(_padding);\r\n      }\r\n      removeClass(_host, classNameHost);\r\n      removeClass(_padding, classNamePadding);\r\n      removeClass(_viewport, classNameViewport);\r\n      removeClass(_content, classNameContent);\r\n    });\r\n  }\r\n\r\n  addClass(_host, classNameHost);\r\n  addClass(_padding, classNamePadding);\r\n  addClass(_viewport, classNameViewport);\r\n  addClass(_content, classNameContent);\r\n\r\n  const ownerDocument: HTMLDocument = _target.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const ctx: OSTargetContext = {\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n  };\r\n  // @ts-ignore\r\n  const obj: PreparedOSTargetObject = {\r\n    ...osTargetObj,\r\n    _host,\r\n  };\r\n\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n  if (_nativeScrollbarStyling) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  } else if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n    if (obj._content) {\r\n      const contentArrangeElm = createDiv(classNameContentArrange);\r\n\r\n      prependChildren(_viewport, contentArrangeElm);\r\n      push(destroyFns, removeElements.bind(0, contentArrangeElm));\r\n\r\n      obj._contentArrange = contentArrangeElm;\r\n    }\r\n  }\r\n\r\n  return {\r\n    _targetObj: obj,\r\n    _targetCtx: ctx,\r\n    _destroy: () => {\r\n      runEach(destroyFns);\r\n    },\r\n  };\r\n};\r\n","import { CacheValues, OptionsValidated, hasOwnProperty } from 'support';\r\nimport { Options } from 'options';\r\nimport { LifecycleHub } from 'lifecycles/lifecycleHub';\r\n\r\nexport interface LifecycleAdaptiveUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n}\r\n\r\nexport interface LifecycleUpdateHints extends LifecycleAdaptiveUpdateHints {\r\n  _directionIsRTL: CacheValues<boolean>;\r\n  _heightIntrinsic: CacheValues<boolean>;\r\n}\r\n\r\nexport type LifecycleUpdateFunction = (\r\n  updateHints: LifecycleUpdateHints,\r\n  changedOptions?: OptionsValidated<Options> | null,\r\n  force?: boolean\r\n) => Partial<LifecycleAdaptiveUpdateHints>;\r\n\r\nexport interface LifecycleOptionInfo<T> {\r\n  readonly _value: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport type LifecycleCheckOption = <T>(path: string) => LifecycleOptionInfo<T>;\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj && path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj);\r\n\r\n/**\r\n * Creates a update function for a lifecycle.\r\n * @param lifecycleHub The LifecycleHub which is managing this lifecylce.\r\n * @param updateFunction The update function where cache and options updates are handled. Has two arguments which are the changedOptions and the changedCache objects.\r\n */\r\nexport const createLifecycleUpdateFunction = (\r\n  lifecycleHub: LifecycleHub,\r\n  updateFunction: (\r\n    force: boolean,\r\n    updateHints: LifecycleUpdateHints,\r\n    checkOption: LifecycleCheckOption\r\n  ) => Partial<LifecycleAdaptiveUpdateHints> | void\r\n): LifecycleUpdateFunction => {\r\n  return (updateHints: LifecycleUpdateHints, changedOptions?: OptionsValidated<Options> | null, force?: boolean) => {\r\n    const checkOption: LifecycleCheckOption = (path) => ({\r\n      _value: getPropByPath(lifecycleHub._options, path),\r\n      _changed: force || getPropByPath(changedOptions, path) !== undefined,\r\n    });\r\n    return updateFunction(!!force, updateHints, checkOption) || {};\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  WH,\r\n  XY,\r\n  equalXY,\r\n  style,\r\n  scrollSize,\r\n  offsetSize,\r\n  CacheValues,\r\n  equalWH,\r\n  scrollLeft,\r\n  scrollTop,\r\n  addClass,\r\n  removeClass,\r\n} from 'support';\r\nimport { createLifecycleUpdateFunction, LifecycleUpdateFunction } from 'lifecycles/lifecycleUpdateFunction';\r\nimport { LifecycleHub } from 'lifecycles/lifecycleHub';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverflowBehavior } from 'options';\r\nimport { PlainObject } from 'typings';\r\nimport { classNameViewportScrollbarStyling } from 'classnames';\r\n\r\nconst overlaidScrollbarsHideOffset = 42;\r\nconst overlaidScrollbarsHideBorderStyle = `${overlaidScrollbarsHideOffset}px solid transparent`;\r\ninterface OverflowAmountCacheContext {\r\n  _contentScrollSize: WH<number>;\r\n  _viewportSize: WH<number>;\r\n}\r\n\r\nexport const createOverflowLifecycle = (lifecycleHub: LifecycleHub): LifecycleUpdateFunction => {\r\n  const { _host, _padding, _viewport, _content, _contentArrange } = lifecycleHub._structureSetup._targetObj;\r\n  const { _update: updateContentScrollSizeCache, _current: getCurrentContentScrollSizeCache } = createCache<WH<number>>(\r\n    () => scrollSize(_content || _viewport),\r\n    { _equal: equalWH }\r\n  );\r\n  const { _update: updateOverflowAmountCache, _current: getCurrentOverflowAmountCache } = createCache<XY<number>, OverflowAmountCacheContext>(\r\n    (ctx) => ({\r\n      x: Math.max(0, Math.round((ctx._contentScrollSize.w - ctx._viewportSize.w) * 100) / 100),\r\n      y: Math.max(0, Math.round((ctx._contentScrollSize.h - ctx._viewportSize.h) * 100) / 100),\r\n    }),\r\n    { _equal: equalXY }\r\n  );\r\n\r\n  const setViewportOverflowStyle = (horizontal: boolean, amount: number, behavior: OverflowBehavior, styleObj: PlainObject) => {\r\n    const overflowKey = horizontal ? 'overflowX' : 'overflowY';\r\n    //const scrollMaxKey = horizontal ? 'scrollLeftMax' : 'scrollTopMax';\r\n    const behaviorIsScroll = behavior === 'scroll';\r\n    const behaviorIsVisibleScroll = behavior === 'visible-scroll';\r\n    const hideOverflow = behaviorIsScroll || behavior === 'hidden';\r\n    //const scrollMax = _viewport[scrollMaxKey];\r\n    //const scrollMaxOverflow = isNumber(scrollMax) ? scrollMax > 0 : true;\r\n    const applyStyle = amount > 0 && hideOverflow;\r\n\r\n    if (applyStyle) {\r\n      styleObj[overflowKey] = behavior;\r\n    }\r\n\r\n    return {\r\n      _visible: !applyStyle,\r\n      _behavior: behaviorIsVisibleScroll ? 'scroll' : 'hidden',\r\n    };\r\n  };\r\n\r\n  const hideNativeScrollbars = (\r\n    contentScrollSize: WH<number>,\r\n    showNativeOverlaidScrollbars: boolean,\r\n    directionIsRTL: boolean,\r\n    viewportStyleObj: PlainObject,\r\n    contentStyleObj: PlainObject\r\n  ) => {\r\n    const { _nativeScrollbarSize, _nativeScrollbarIsOverlaid, _nativeScrollbarStyling } = getEnvironment();\r\n    const { x: overlaidX, y: overlaidY } = _nativeScrollbarIsOverlaid;\r\n    const scrollX = viewportStyleObj.overflowX === 'scroll';\r\n    const scrollY = viewportStyleObj.overflowY === 'scroll';\r\n    const horizontalMarginKey = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const horizontalBorderKey = directionIsRTL ? 'borderLeft' : 'borderRight';\r\n    const overlaidHideOffset = _content && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const scrollbarsHideOffset = {\r\n      x: overlaidX ? overlaidHideOffset : _nativeScrollbarSize.x,\r\n      y: overlaidY ? overlaidHideOffset : _nativeScrollbarSize.y,\r\n    };\r\n\r\n    if (!_nativeScrollbarStyling) {\r\n      if (scrollX) {\r\n        viewportStyleObj.marginBottom = -scrollbarsHideOffset.x;\r\n\r\n        contentStyleObj.borderBottom = overlaidX && overlaidHideOffset ? overlaidScrollbarsHideBorderStyle : '';\r\n      }\r\n      if (scrollY) {\r\n        viewportStyleObj.maxWidth = `calc(100% + ${scrollbarsHideOffset.y}px)`;\r\n        viewportStyleObj[horizontalMarginKey] = -scrollbarsHideOffset.y;\r\n\r\n        contentStyleObj[horizontalBorderKey] = overlaidY && overlaidHideOffset ? overlaidScrollbarsHideBorderStyle : '';\r\n      }\r\n\r\n      if (_contentArrange) {\r\n        style(_contentArrange, {\r\n          width: scrollY && !showNativeOverlaidScrollbars ? overlaidHideOffset + contentScrollSize.w : '',\r\n          height: scrollX && !showNativeOverlaidScrollbars ? overlaidHideOffset + contentScrollSize.h : '',\r\n        });\r\n      }\r\n    }\r\n\r\n    return {\r\n      _scrollbarsHideOffset: scrollbarsHideOffset,\r\n      _scroll: {\r\n        x: scrollX,\r\n        y: scrollY,\r\n      },\r\n    };\r\n  };\r\n\r\n  const setFlexboxGlueStyle = (heightIntrinsic: boolean, scrollX: boolean, scrollbarsHideOffsetX: number) => {\r\n    const offsetLeft = scrollLeft(_viewport);\r\n    const offsetTop = scrollTop(_viewport);\r\n\r\n    style(_viewport, {\r\n      maxHeight: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      style(_viewport, {\r\n        maxHeight: _host.clientHeight + (scrollX ? scrollbarsHideOffsetX : 0),\r\n      });\r\n    }\r\n\r\n    scrollLeft(_viewport, offsetLeft);\r\n    scrollTop(_viewport, offsetTop);\r\n  };\r\n\r\n  return createLifecycleUpdateFunction(lifecycleHub, (force, updateHints, checkOption) => {\r\n    const { _directionIsRTL, _heightIntrinsic, _sizeChanged, _hostMutation, _contentMutation } = updateHints;\r\n    const { _flexboxGlue, _nativeScrollbarStyling, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n    const { _value: showNativeOverlaidScrollbarsOption, _changed: showNativeOverlaidScrollbarsChanged } = checkOption<boolean>(\r\n      'nativeScrollbarsOverlaid.show'\r\n    );\r\n    const adjustFlexboxGlue = !_flexboxGlue && (_sizeChanged || _contentMutation || _hostMutation || showNativeOverlaidScrollbarsChanged);\r\n    const showNativeOverlaidScrollbars = showNativeOverlaidScrollbarsOption && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\r\n    let overflowAmuntCache: CacheValues<XY<number>> = getCurrentOverflowAmountCache();\r\n    let contentScrollSizeCache: CacheValues<WH<number>> = getCurrentContentScrollSizeCache();\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      if (showNativeOverlaidScrollbars) {\r\n        removeClass(_viewport, classNameViewportScrollbarStyling);\r\n      } else {\r\n        addClass(_viewport, classNameViewportScrollbarStyling);\r\n      }\r\n    }\r\n\r\n    if (_sizeChanged || _contentMutation) {\r\n      const viewportOffsetSize = offsetSize(_padding);\r\n      const contentClientSize = offsetSize(_content || _viewport);\r\n      const contentArrangeOffsetSize = offsetSize(_contentArrange);\r\n\r\n      contentScrollSizeCache = updateContentScrollSizeCache(force);\r\n      const { _value: contentScrollSize } = contentScrollSizeCache;\r\n      overflowAmuntCache = updateOverflowAmountCache(force, {\r\n        _contentScrollSize: {\r\n          w: Math.max(contentScrollSize!.w, contentArrangeOffsetSize.w),\r\n          h: Math.max(contentScrollSize!.h, contentArrangeOffsetSize.h),\r\n        },\r\n        _viewportSize: {\r\n          w: viewportOffsetSize.w + Math.max(0, contentClientSize.w - contentScrollSize!.w),\r\n          h: viewportOffsetSize.h + Math.max(0, contentClientSize.h - contentScrollSize!.h),\r\n        },\r\n      });\r\n    }\r\n\r\n    const { _value: directionIsRTL, _changed: directionChanged } = _directionIsRTL;\r\n    const { _value: contentScrollSize, _changed: contentScrollSizeChanged } = contentScrollSizeCache;\r\n    const { _value: overflowAmount, _changed: overflowAmountChanged } = overflowAmuntCache;\r\n    const { _value: overflow, _changed: overflowChanged } = checkOption<{\r\n      x: OverflowBehavior;\r\n      y: OverflowBehavior;\r\n    }>('overflow');\r\n    const adjustDirection = directionChanged && !_nativeScrollbarStyling;\r\n\r\n    if (\r\n      contentScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      adjustDirection ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: PlainObject = {\r\n        overflowY: '',\r\n        overflowX: '',\r\n        marginTop: '',\r\n        marginRight: '',\r\n        marginBottom: '',\r\n        marginLeft: '',\r\n        maxWidth: '',\r\n      };\r\n      const contentStyle: PlainObject = {\r\n        borderTop: '',\r\n        borderRight: '',\r\n        borderBottom: '',\r\n        borderLeft: '',\r\n      };\r\n\r\n      const { _visible: xVisible, _behavior: xVisibleBehavior } = setViewportOverflowStyle(true, overflowAmount!.x, overflow.x, viewportStyle);\r\n      const { _visible: yVisible, _behavior: yVisibleBehavior } = setViewportOverflowStyle(false, overflowAmount!.y, overflow.y, viewportStyle);\r\n\r\n      if (xVisible && !yVisible) {\r\n        viewportStyle.overflowX = xVisibleBehavior;\r\n      }\r\n      if (yVisible && !xVisible) {\r\n        viewportStyle.overflowY = yVisibleBehavior;\r\n      }\r\n\r\n      const { _scrollbarsHideOffset, _scroll } = hideNativeScrollbars(\r\n        contentScrollSize!,\r\n        showNativeOverlaidScrollbars,\r\n        directionIsRTL!,\r\n        viewportStyle,\r\n        contentStyle\r\n      );\r\n\r\n      if (adjustFlexboxGlue) {\r\n        setFlexboxGlueStyle(!!_heightIntrinsic._value, _scroll.x, _scrollbarsHideOffset.x);\r\n      }\r\n\r\n      // TODO: enlargen viewport if div too small for firefox scrollbar hiding behavior\r\n      // TODO: Test without content\r\n      // TODO: Test without padding\r\n      // TODO: hide host || padding overflow if scroll x or y\r\n\r\n      style(_viewport, viewportStyle);\r\n      style(_content, contentStyle);\r\n    }\r\n  });\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  preventDefault,\r\n  stopPropagation,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  indexOf,\r\n  each,\r\n  isBoolean,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\ninterface SizeObserverEntry {\r\n  contentRect: DOMRectReadOnly;\r\n}\r\n\r\nexport type SizeObserverOptions = { _direction?: boolean; _appear?: boolean };\r\n\r\nexport interface SizeObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _directionIsRTL: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst directionIsRTLMap = {\r\n  direction: ['rtl'],\r\n  // 'writing-mode': ['sideways-rl', 'tb', 'tb-rl', 'vertical-rl'],\r\n};\r\nconst directionIsRTL = (elm: HTMLElement): boolean => {\r\n  let isRTL = false;\r\n  const styles = style(elm, ['direction' /* , 'writing-mode' */]);\r\n  each(styles, (value, key) => {\r\n    isRTL = isRTL || indexOf(directionIsRTLMap[key], value) > -1;\r\n  });\r\n  return isRTL;\r\n};\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (directionIsRTLCache?: CacheValues<boolean>) => any,\r\n  options?: SizeObserverOptions\r\n): SizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } = options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(`<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`);\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const { _update: updateResizeObserverContentRectCache } = createCache<DOMRectReadOnly, DOMRectReadOnly>(0, {\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (sizeChangedContext?: CacheValues<boolean> | SizeObserverEntry[] | Event) => {\r\n    const hasDirectionCache = sizeChangedContext && isBoolean((sizeChangedContext as CacheValues<boolean>)._value);\r\n\r\n    let skip = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isArray(sizeChangedContext) && sizeChangedContext.length > 0) {\r\n      const { _previous, _value, _changed } = updateResizeObserverContentRectCache(0, sizeChangedContext.pop()!.contentRect);\r\n      skip = !_previous || !domRectHasDimensions(_value); // skip on initial RO. call or if display is none\r\n      doDirectionScroll = !skip && _changed; // direction scroll when not skipping and changing from display: none to block, false otherwise\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      doDirectionScroll = (sizeChangedContext as CacheValues<boolean>)._changed; // direction scroll when DirectionCache changed, false toherwise\r\n    }\r\n\r\n    if (observeDirectionChange) {\r\n      const rtl = hasDirectionCache ? (sizeChangedContext as CacheValues<boolean>)._value : directionIsRTL(sizeObserver);\r\n      scrollLeft(sizeObserver, rtl ? (rtlScrollBehavior.n ? -scrollAmount : rtlScrollBehavior.i ? 0 : scrollAmount) : scrollAmount);\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback(hasDirectionCache ? (sizeChangedContext as CacheValues<boolean>) : undefined);\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange ? onSizeChangedCallbackProxy : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => resizeObserverInstance.disconnect());\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(listenerElement);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = () => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy();\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event) => {\r\n      currSize = offsetSize(listenerElement);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent && isDirty && !rAFId) {\r\n        cAF!(rAFId);\r\n        rAFId = rAF!(onResized);\r\n      } else if (!scrollEvent) {\r\n        onResized();\r\n      }\r\n\r\n      reset();\r\n\r\n      if (scrollEvent) {\r\n        preventDefault(scrollEvent);\r\n        stopPropagation(scrollEvent);\r\n      }\r\n      return false;\r\n    };\r\n\r\n    push(offListeners, [on(expandElement, scrollEventName, onScroll), on(shrinkElement, scrollEventName, onScroll)]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n    reset();\r\n    appearCallback = observeAppearChange ? () => onScroll() : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(() => directionIsRTL(sizeObserver));\r\n    const { _update: updateDirectionIsRTLCache } = directionIsRTLCache;\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        const { _value, _changed } = directionIsRTLCacheValues;\r\n        if (_changed) {\r\n          if (_value) {\r\n            style(listenerElement, { left: 'auto', right: 0 });\r\n          } else {\r\n            style(listenerElement, { left: 0, right: 'auto' });\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        preventDefault(event);\r\n        stopPropagation(event);\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(sizeObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _directionIsRTL: directionIsRTLCache\r\n          ? directionIsRTLCache._current(force)\r\n          : {\r\n              _value: false,\r\n              _previous: false,\r\n              _changed: false,\r\n            },\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDOM,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport interface TrinsicObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _heightIntrinsic: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): TrinsicObserver => {\r\n  const trinsicObserver = createDOM(`<div class=\"${classNameTrinsicObserver}\"></div>`)[0] as HTMLElement;\r\n  const offListeners: (() => void)[] = [];\r\n  const { _update: updateHeightIntrinsicCache, _current: getCurrentHeightIntrinsicCache } = createCache<\r\n    boolean,\r\n    IntersectionObserverEntry | WH<number>\r\n  >(\r\n    (ioEntryOrSize: IntersectionObserverEntry | WH<number>) =>\r\n      (ioEntryOrSize! as WH<number>).h === 0 ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).isIntersecting ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).intersectionRatio > 0,\r\n    {\r\n      _initialValue: false,\r\n    }\r\n  );\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          const last = entries.pop();\r\n          if (last) {\r\n            const heightIntrinsic = updateHeightIntrinsicCache(0, last);\r\n\r\n            if (heightIntrinsic._changed) {\r\n              onTrinsicChangedCallback(heightIntrinsic);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => intersectionObserverInstance.disconnect());\r\n  } else {\r\n    push(\r\n      offListeners,\r\n      createSizeObserver(trinsicObserver, () => {\r\n        const newSize = offsetSize(trinsicObserver);\r\n        const heightIntrinsicCache = updateHeightIntrinsicCache(0, newSize);\r\n\r\n        if (heightIntrinsicCache._changed) {\r\n          onTrinsicChangedCallback(heightIntrinsicCache);\r\n        }\r\n      })._destroy\r\n    );\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(trinsicObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _heightIntrinsic: getCurrentHeightIntrinsicCache(force),\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  off,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n  isUndefined,\r\n  isFunction,\r\n} from 'support';\r\n\r\ntype StringNullUndefined = string | null | undefined;\r\nexport type DOMObserverEventContentChange =\r\n  | Array<[StringNullUndefined, ((elms: Node[]) => string) | StringNullUndefined] | null | undefined>\r\n  | false\r\n  | null\r\n  | undefined;\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions: DOMObserverOptions | undefined\r\n) => boolean;\r\nexport type DOMObserverIgnoreTargetAttrChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\nexport interface DOMObserverOptions {\r\n  _observeContent?: boolean; // do observe children and trigger content change\r\n  _attributes?: string[]; // observed attributes\r\n  _styleChangingAttributes?: string[]; // list of attributes that trigger a contentChange or a targetStyleChange if changed\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname]\r\n  _nestedTargetSelector?: string;\r\n  _ignoreTargetAttrChange?: DOMObserverIgnoreTargetAttrChange;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange;\r\n}\r\nexport interface DOMObserver {\r\n  _disconnect: () => void;\r\n  _updateEventContentChange: (newEventContentChange?: DOMObserverEventContentChange) => void;\r\n  _update: () => void;\r\n}\r\n\r\n// const styleChangingAttributes = ['id', 'class', 'style', 'open'];\r\n// const mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n\r\nconst createEventContentChange = (\r\n  target: Element,\r\n  eventContentChange: DOMObserverEventContentChange,\r\n  map: Map<Node, string>,\r\n  callback: (...args: any) => any\r\n) => {\r\n  let eventContentChangeRef: DOMObserverEventContentChange;\r\n  const addEvent = (elm: Node, eventName: string) => {\r\n    const entry = map.get(elm);\r\n    const newEntry = isUndefined(entry);\r\n    const registerEvent = () => {\r\n      map.set(elm, eventName);\r\n      on(elm, eventName, callback);\r\n    };\r\n\r\n    if (!newEntry && eventName !== entry) {\r\n      off(elm, entry!, callback);\r\n      registerEvent();\r\n    } else if (newEntry) {\r\n      registerEvent();\r\n    }\r\n  };\r\n  const _destroy = () => {\r\n    map.forEach((eventName: string, elm: Node) => {\r\n      off(elm, eventName, callback);\r\n    });\r\n    map.clear();\r\n  };\r\n  const _updateElements = (getElements?: (selector: string) => Node[]) => {\r\n    if (eventContentChangeRef) {\r\n      const eventElmList = eventContentChangeRef.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventName = item[1];\r\n          const elements = eventName && selector && (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements) {\r\n            push(arr, [elements, isFunction(eventName) ? eventName(elements) : eventName!], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) => {\r\n        const elements = item[0];\r\n        const eventName = item[1];\r\n\r\n        each(elements, (elm) => {\r\n          addEvent(elm, eventName);\r\n        });\r\n      });\r\n    }\r\n  };\r\n  const _update = (newEventContentChange: DOMObserverEventContentChange) => {\r\n    eventContentChangeRef = newEventContentChange;\r\n    _destroy();\r\n    _updateElements();\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    _update(eventContentChange);\r\n  }\r\n\r\n  return {\r\n    _destroy,\r\n    _updateElements,\r\n    _update,\r\n  };\r\n};\r\n\r\nexport const createDOMObserver = (\r\n  target: HTMLElement,\r\n  callback: (targetChangedAttrs: string[], targetStyleChanged: boolean, contentChanged: boolean) => any,\r\n  options?: DOMObserverOptions\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _observeContent,\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetAttrChange: _ignoreTargetChange,\r\n    _ignoreContentChange,\r\n  } = options || {};\r\n  const {\r\n    _updateElements: updateEventContentChangeElements,\r\n    _destroy: destroyEventContentChange,\r\n    _update: updateEventContentChange,\r\n  } = createEventContentChange(\r\n    target,\r\n    _observeContent && _eventContentChange,\r\n    new Map<Node, string>(),\r\n    debounce(() => {\r\n      if (isConnected) {\r\n        callback([], false, true);\r\n      }\r\n    }, 84)\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes); // TODO: observer textarea attrs if textarea\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange = _ignoreTargetChange || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue = isAttributesType && isString(attributeName) ? attr(mutationTarget as HTMLElement, attributeName!) : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const targetAttrChanged =\r\n        attributeChanged &&\r\n        targetIsMutationTarget &&\r\n        !_observeContent &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null);\r\n      const styleChangingAttrChanged = indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      if (targetAttrChanged) {\r\n        push(targetChangedAttrs, attributeName!);\r\n      }\r\n      if (_observeContent) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged && !targetIsMutationTarget;\r\n        const isNestedTarget = contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged = baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      targetStyleChanged = targetStyleChanged || (targetAttrChanged && styleChangingAttrChanged);\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n    if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged || contentChanged) {\r\n      callback(targetChangedAttrs, targetStyleChanged, contentChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: _observeContent,\r\n    childList: _observeContent,\r\n    characterData: _observeContent,\r\n  });\r\n  isConnected = true;\r\n\r\n  return {\r\n    _disconnect: () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    _updateEventContentChange: (newEventContentChange?: DOMObserverEventContentChange) => {\r\n      updateEventContentChange(isConnected && _observeContent && newEventContentChange);\r\n    },\r\n    _update: () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  };\r\n};\r\n","import { CacheValues, each, push, validateOptions, assignDeep, isEmptyObject, OptionsValidated } from 'support';\r\nimport { Options } from 'options';\r\nimport { getEnvironment, Environment } from 'environment';\r\nimport { StructureSetup } from 'setups/structureSetup';\r\nimport { createStructureLifecycle } from 'lifecycles/structureLifecycle';\r\nimport { createOverflowLifecycle } from 'lifecycles/overflowLifecycle';\r\nimport { LifecycleUpdateFunction, LifecycleUpdateHints } from 'lifecycles/lifecycleUpdateFunction';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver } from 'observers/domObserver';\r\n\r\nexport interface LifecycleHubInstance {\r\n  _update(changedOptions?: OptionsValidated<Options> | null, force?: boolean): void;\r\n  _destroy(): void;\r\n}\r\n\r\nexport interface LifecycleHub {\r\n  _options: Options;\r\n  _structureSetup: StructureSetup;\r\n}\r\n\r\nconst attrs = ['id', 'class', 'style', 'open'];\r\nconst directionIsRTLCacheValuesFallback: CacheValues<boolean> = {\r\n  _value: false,\r\n  _previous: false,\r\n  _changed: false,\r\n};\r\nconst heightIntrinsicCacheValuesFallback: CacheValues<boolean> = {\r\n  _value: false,\r\n  _previous: false,\r\n  _changed: false,\r\n};\r\n\r\nexport const createLifecycleHub = (options: Options, structureSetup: StructureSetup): LifecycleHubInstance => {\r\n  const { _host, _viewport, _content } = structureSetup._targetObj;\r\n  const {\r\n    _nativeScrollbarStyling,\r\n    _flexboxGlue,\r\n    _addListener: addEnvironmentListener,\r\n    _removeListener: removeEnvironmentListener,\r\n  } = getEnvironment();\r\n  const lifecycles: LifecycleUpdateFunction[] = [];\r\n  const instance: LifecycleHub = {\r\n    _options: options,\r\n    _structureSetup: structureSetup,\r\n  };\r\n\r\n  // push(lifecycles, createStructureLifecycle(instance));\r\n  push(lifecycles, createOverflowLifecycle(instance));\r\n\r\n  const runLifecycles = (updateHints?: Partial<LifecycleUpdateHints> | null, changedOptions?: OptionsValidated<Options> | null, force?: boolean) => {\r\n    let { _directionIsRTL, _heightIntrinsic, _sizeChanged = force || false, _hostMutation = force || false, _contentMutation = force || false } =\r\n      updateHints || {};\r\n    const finalDirectionIsRTL =\r\n      _directionIsRTL || (sizeObserver ? sizeObserver._getCurrentCacheValues(force)._directionIsRTL : directionIsRTLCacheValuesFallback);\r\n    const finalHeightIntrinsic =\r\n      _heightIntrinsic || (trinsicObserver ? trinsicObserver._getCurrentCacheValues(force)._heightIntrinsic : heightIntrinsicCacheValuesFallback);\r\n\r\n    each(lifecycles, (lifecycle) => {\r\n      const { _sizeChanged: adaptiveSizeChanged, _hostMutation: adaptiveHostMutation, _contentMutation: adaptiveContentMutation } = lifecycle(\r\n        {\r\n          _directionIsRTL: finalDirectionIsRTL,\r\n          _heightIntrinsic: finalHeightIntrinsic,\r\n          _sizeChanged,\r\n          _hostMutation,\r\n          _contentMutation,\r\n        },\r\n        changedOptions,\r\n        force\r\n      );\r\n\r\n      _sizeChanged = adaptiveSizeChanged || _sizeChanged;\r\n      _hostMutation = adaptiveHostMutation || _hostMutation;\r\n      _contentMutation = adaptiveContentMutation || _contentMutation;\r\n    });\r\n  };\r\n\r\n  const onSizeChanged = (directionIsRTL?: CacheValues<boolean>) => {\r\n    const sizeChanged = !directionIsRTL;\r\n    runLifecycles({\r\n      _directionIsRTL: directionIsRTL,\r\n      _sizeChanged: sizeChanged,\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsic: CacheValues<boolean>) => {\r\n    runLifecycles({\r\n      _heightIntrinsic: heightIntrinsic,\r\n    });\r\n  };\r\n  const onHostMutation = () => {\r\n    // TODO: rAF only here because IE\r\n    requestAnimationFrame(() => {\r\n      runLifecycles({\r\n        _hostMutation: true,\r\n      });\r\n    });\r\n  };\r\n  const onContentMutation = () => {\r\n    // TODO: rAF only here because IE\r\n    requestAnimationFrame(() => {\r\n      runLifecycles({\r\n        _contentMutation: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const sizeObserver = createSizeObserver(_host, onSizeChanged, { _appear: true, _direction: !_nativeScrollbarStyling });\r\n  const trinsicObserver = createTrinsicObserver(_host, onTrinsicChanged);\r\n  const hostMutationObserver = createDOMObserver(_host, onHostMutation, {\r\n    _styleChangingAttributes: attrs,\r\n    _attributes: attrs,\r\n  });\r\n  const contentMutationObserver = createDOMObserver(_content || _viewport, onContentMutation, {\r\n    _observeContent: true,\r\n    _styleChangingAttributes: attrs,\r\n    _attributes: attrs,\r\n    _eventContentChange: options!.updating!.elementEvents as [string, string][],\r\n    /*\r\n      _nestedTargetSelector: hostSelector,\r\n      _ignoreContentChange: (mutation, isNestedTarget) => {\r\n        const { target, attributeName } = mutation;\r\n        return isNestedTarget ? false : attributeName ? liesBetween(target as Element, hostSelector, '.content') : false;\r\n      },\r\n      _ignoreTargetAttrChange: (target, attrName, oldValue, newValue) => {\r\n        if (attrName === 'class' && oldValue && newValue) {\r\n          const diff = diffClass(oldValue, newValue);\r\n          const ignore = diff.length === 1 && diff[0].startsWith(ignorePrefix);\r\n          return ignore;\r\n        }\r\n        return false;\r\n      },\r\n      */\r\n  });\r\n\r\n  const updateAll = (changedOptions?: OptionsValidated<Options> | null, force?: boolean) => {\r\n    runLifecycles(null, changedOptions, force);\r\n  };\r\n  const envUpdateListener = updateAll.bind(null, null, true);\r\n  addEnvironmentListener(envUpdateListener);\r\n\r\n  console.log('flexboxGlue', _flexboxGlue);\r\n\r\n  return {\r\n    _update: updateAll,\r\n    _destroy() {\r\n      removeEnvironmentListener(envUpdateListener);\r\n    },\r\n  };\r\n};\r\n","import {\r\n  optionsTemplateTypes as oTypes,\r\n  transformOptions,\r\n  OptionsTemplateValue,\r\n  OptionsWithOptionsTemplateValue,\r\n  OptionsWithOptionsTemplate,\r\n  Func,\r\n} from 'support/options';\r\nimport { ResizeBehavior, OverflowBehavior, VisibilityBehavior, AutoHideBehavior, Options } from 'options';\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst stringArrayNullAllowedValues: OptionsTemplateValue<string | ReadonlyArray<string> | null> = [oTypes.string, oTypes.array, oTypes.null];\r\nconst booleanTrueTemplate: OptionsWithOptionsTemplateValue<boolean> = [true, oTypes.boolean];\r\nconst booleanFalseTemplate: OptionsWithOptionsTemplateValue<boolean> = [false, oTypes.boolean];\r\n// const callbackTemplate: OptionsWithOptionsTemplateValue<Func | null> = [null, [oTypes.function, oTypes.null]];\r\nconst resizeAllowedValues: OptionsTemplateValue<ResizeBehavior> = 'none both horizontal vertical';\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> = 'visible-hidden visible-scroll scroll hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> = 'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> = 'never scroll leavemove';\r\n\r\n/**\r\n * A object which serves as \"default options object\" and \"options template object\".\r\n * I combined these two into one object so that I don't have to define two separate big objects, instead I define one big object.\r\n *\r\n * The property value is a tuple:\r\n * the first value is the default value\r\n * the second value is the template value\r\n * Example:\r\n * {\r\n *  a: ['default', [Type.string, Type.null]],\r\n *  b: [250, Type.number]\r\n * }\r\n * Property \"a\" has a default value of 'default' and it can be a string or null\r\n * Property \"b\" has a default value of 250 and it can be number\r\n */\r\nconst defaultOptionsWithTemplate: OptionsWithOptionsTemplate<Required<Options>> = {\r\n  resize: ['none', resizeAllowedValues], // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: booleanFalseTemplate, // true || false\r\n  updating: {\r\n    elementEvents: [[['img', 'load']], [oTypes.array, oTypes.null]], // array of tuples || null\r\n    contentMutationDebounce: [80, numberAllowedValues], // number\r\n    hostMutationDebounce: [0, numberAllowedValues], // number\r\n    resizeDebounce: [0, numberAllowedValues], // number\r\n  },\r\n  overflow: {\r\n    x: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  scrollbars: {\r\n    visibility: ['auto', scrollbarsVisibilityAllowedValues], // visible || hidden || auto || v || h || a\r\n    autoHide: ['never', scrollbarsAutoHideAllowedValues], // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: [800, numberAllowedValues], // number\r\n    dragScroll: booleanTrueTemplate, // true || false\r\n    clickScroll: booleanFalseTemplate, // true || false\r\n    touch: booleanTrueTemplate, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: booleanFalseTemplate, // true || false\r\n    dynHeight: booleanFalseTemplate, // true || false\r\n    inheritedAttrs: [['style', 'class'], stringArrayNullAllowedValues], // string || array || null\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanFalseTemplate, // true || false\r\n    initialize: booleanFalseTemplate, // true || false\r\n  },\r\n  /*\r\n  callbacks: {\r\n    onInitialized: callbackTemplate, // null || function\r\n    onInitializationWithdrawn: callbackTemplate, // null || function\r\n    onDestroyed: callbackTemplate, // null || function\r\n    onScrollStart: callbackTemplate, // null || function\r\n    onScroll: callbackTemplate, // null || function\r\n    onScrollStop: callbackTemplate, // null || function\r\n    onOverflowChanged: callbackTemplate, // null || function\r\n    onOverflowAmountChanged: callbackTemplate, // null || function\r\n    onDirectionChanged: callbackTemplate, // null || function\r\n    onContentSizeChanged: callbackTemplate, // null || function\r\n    onHostSizeChanged: callbackTemplate, // null || function\r\n    onUpdated: callbackTemplate, // null || function\r\n  },\r\n  */\r\n};\r\n\r\nexport const { _template: optionsTemplate, _options: defaultOptions } = transformOptions(defaultOptionsWithTemplate);\r\n","import { OSTarget, OSTargetObject } from 'typings';\r\n\r\nimport { validateOptions, assignDeep, isEmptyObject } from 'support';\r\nimport { createStructureSetup, StructureSetup } from 'setups/structureSetup';\r\nimport { createLifecycleHub } from 'lifecycles/lifecycleHub';\r\nimport { Options, defaultOptions, optionsTemplate } from 'options';\r\n\r\nconst OverlayScrollbars = (target: OSTarget | OSTargetObject, options?: Options, extensions?: any): any => {\r\n  const currentOptions: Required<Options> = assignDeep(\r\n    {},\r\n    defaultOptions,\r\n    validateOptions<Options>(options || ({} as Options), optionsTemplate, null, true)._validated\r\n  );\r\n  const structureSetup: StructureSetup = createStructureSetup(target);\r\n  const lifecycleHub = createLifecycleHub(currentOptions, structureSetup);\r\n  const instance = {\r\n    options(newOptions?: Options) {\r\n      if (newOptions) {\r\n        const { _validated: _changedOptions } = validateOptions(newOptions, optionsTemplate, currentOptions, true);\r\n\r\n        if (!isEmptyObject(_changedOptions)) {\r\n          assignDeep(currentOptions, _changedOptions);\r\n          lifecycleHub._update(_changedOptions);\r\n        }\r\n      }\r\n      return currentOptions;\r\n    },\r\n    update(force?: boolean) {\r\n      lifecycleHub._update(null, force);\r\n    },\r\n  };\r\n\r\n  instance.update(true);\r\n\r\n  return instance;\r\n};\r\n\r\nexport { OverlayScrollbars };\r\n","import { createDOM } from 'support/dom';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverlayScrollbars } from 'overlayscrollbars/overlayscrollbars';\r\n\r\nconst abc = {\r\n  a: 1,\r\n  b: 1,\r\n  c: 1,\r\n};\r\n\r\nexport default () => {\r\n  return [\r\n    getEnvironment(),\r\n    OverlayScrollbars(document.body),\r\n    createDOM(\r\n      '\\\r\n    <div class=\"os-host\">\\\r\n        <div class=\"os-resize-observer-host\"></div>\\\r\n        <div class=\"os-padding\">\\\r\n            <div class=\"os-viewport\">\\\r\n                <div class=\"os-content\">\\\r\n                    fdfhdfgh\\\r\n                </div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar os-scrollbar-horizontal\">\\\r\n            <div class=\"os-scrollbar-track\">\\\r\n                <div class=\"os-scrollbar-handle\"></div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar os-scrollbar-vertical\">\\\r\n            <div class=\"os-scrollbar-track\">\\\r\n                <div class=\"os-scrollbar-handle\"></div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar-corner\"></div>\\\r\n    </div>'\r\n    ),\r\n  ];\r\n};\r\n"],"names":["ElementNodeType","Node","ELEMENT_NODE","toString","hasOwnProperty","Object","prototype","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","getSetProp","topLeft","fallback","elm","value","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","isEmptyArray","runEach","p1","runFn","fn","Set","forEach","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","addClass","add","removeClass","remove","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","insertAfter","insertedNodes","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","split","off","listener","capture","eventName","removeEventListener","on","options","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","bind","stopPropagation","preventDefault","equal","a","b","props","equalWH","equalXY","firstLetterToUpper","str","charAt","toUpperCase","slice","jsPrefixes","jsCache","jsAPI","prefix","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","noop","debounce","functionToDebounce","timeout","maxWait","timeoutId","lastCallTime","hasTimeout","hasMaxWait","cancel","clearTimeout","set","setTimeout","setFn","args","performance","now","boundSetFn","arguments","forceCall","cssNumber","animationiterationcount","columncount","fillopacity","flexgrow","flexshrink","fontweight","lineheight","opacity","order","orphans","widows","zindex","zoom","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","style","setCSSVal","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","x","y","absoluteCoordinates","rect","left","pageYOffset","top","pageXOffset","createCache","update","_equal","_initialValue","_alwaysUpdateValues","_value","_previous","cacheUpdate","force","context","curr","newVal","changed","_changed","_update","_current","_extends","module","assign","stringify","JSON","templateTypePrefixSuffix","optionsTemplateTypes","validateRecursive","template","optionsDiff","doWriteErrors","propPath","validatedOptions","optionsCopy","filter","optionsDiffValue","optionsValue","templateValue","templateIsComplex","propPrefix","validatedResult","_validated","_foreign","isValid","errorEnumStrings","errorPossibleTypes","optionsValueType","templateValueArr","currTemplateType","typeString","isEnumString","enumStringSplit","possibility","string","doStringifyComparison","console","warn","join","validateOptions","transformOptions","optionsWithOptionsTemplate","_template","_options","tmpResult","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameContent","classNameContentArrange","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","environmentInstance","abs","round","Math","getNativeScrollbarSize","body","measureElm","cSize","oSize","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","nativeScrollbarSize","nativeScrollbarStyling","nativeScrollbarIsOverlaid","env","_autoUpdateLoop","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_rtlScrollBehavior","_flexboxGlue","_addListener","_removeListener","delete","size","dpr","scrollbarSize","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","newScrollbarSize","getEnvironment","unwrap","createStructureSetup","targetIsElm","osTargetObj","_host","host","_target","_padding","padding","_viewport","viewport","_content","content","destroyFns","isTextarea","isBody","getTargetContents","contentSlot","isTextareaHostGenerated","contentContainingElm","createPadding","createViewport","createContent","targetContents","ownerDocument","bodyElm","wnd","defaultView","ctx","_windowElm","_documentElm","_htmlElm","_bodyElm","_isTextarea","_isBody","contentArrangeElm","_contentArrange","_targetObj","_targetCtx","_destroy","getPropByPath","path","o","createLifecycleUpdateFunction","lifecycleHub","updateFunction","updateHints","changedOptions","checkOption","overlaidScrollbarsHideOffset","overlaidScrollbarsHideBorderStyle","createOverflowLifecycle","_structureSetup","updateContentScrollSizeCache","getCurrentContentScrollSizeCache","updateOverflowAmountCache","getCurrentOverflowAmountCache","max","_contentScrollSize","_viewportSize","setViewportOverflowStyle","horizontal","amount","behavior","styleObj","overflowKey","behaviorIsScroll","behaviorIsVisibleScroll","hideOverflow","applyStyle","_visible","_behavior","hideNativeScrollbars","contentScrollSize","showNativeOverlaidScrollbars","directionIsRTL","viewportStyleObj","contentStyleObj","overlaidX","overlaidY","scrollX","scrollY","horizontalMarginKey","horizontalBorderKey","overlaidHideOffset","scrollbarsHideOffset","marginBottom","borderBottom","maxWidth","width","height","_scrollbarsHideOffset","_scroll","setFlexboxGlueStyle","heightIntrinsic","scrollbarsHideOffsetX","offsetLeft","offsetTop","maxHeight","_directionIsRTL","_heightIntrinsic","_sizeChanged","_hostMutation","_contentMutation","showNativeOverlaidScrollbarsOption","showNativeOverlaidScrollbarsChanged","adjustFlexboxGlue","overflowAmuntCache","contentScrollSizeCache","viewportOffsetSize","contentClientSize","contentArrangeOffsetSize","directionChanged","contentScrollSizeChanged","overflowAmount","overflowAmountChanged","overflow","overflowChanged","adjustDirection","viewportStyle","marginTop","marginRight","marginLeft","contentStyle","borderTop","borderRight","borderLeft","xVisible","xVisibleBehavior","yVisible","yVisibleBehavior","animationStartEventName","scrollEventName","scrollAmount","directionIsRTLMap","isRTL","domRectHasDimensions","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","updateResizeObserverContentRectCache","currVal","onSizeChangedCallbackProxy","sizeChangedContext","hasDirectionCache","skip","pop","contentRect","doDirectionScroll","rtl","appearCallback","directionIsRTLCache","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionIsRTLCache","event","directionIsRTLCacheValues","right","_getCurrentCacheValues","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","updateHeightIntrinsicCache","getCurrentHeightIntrinsicCache","ioEntryOrSize","isIntersecting","intersectionRatio","intersectionObserverInstance","entries","last","root","newSize","heightIntrinsicCache","createEventContentChange","eventContentChange","map","eventContentChangeRef","addEvent","entry","newEntry","registerEvent","clear","_updateElements","getElements","eventElmList","elements","newEventContentChange","createDOMObserver","isConnected","_observeContent","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetAttrChange","_ignoreTargetChange","_ignoreContentChange","updateEventContentChangeElements","destroyEventContentChange","updateEventContentChange","Map","finalAttributes","finalStyleChangingAttributes","observedAttributes","concat","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","targetAttrChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","_disconnect","_updateEventContentChange","takeRecords","attrs","directionIsRTLCacheValuesFallback","heightIntrinsicCacheValuesFallback","createLifecycleHub","structureSetup","addEnvironmentListener","removeEnvironmentListener","lifecycles","instance","runLifecycles","finalDirectionIsRTL","finalHeightIntrinsic","lifecycle","adaptiveSizeChanged","adaptiveHostMutation","adaptiveContentMutation","onSizeChanged","sizeChanged","onTrinsicChanged","onHostMutation","requestAnimationFrame","onContentMutation","hostMutationObserver","contentMutationObserver","updating","elementEvents","updateAll","envUpdateListener","log","numberAllowedValues","oTypes","number","stringArrayNullAllowedValues","null","booleanTrueTemplate","boolean","booleanFalseTemplate","resizeAllowedValues","overflowAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","defaultOptionsWithTemplate","resize","paddingAbsolute","contentMutationDebounce","hostMutationDebounce","resizeDebounce","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","clickScroll","touch","textarea","dynWidth","dynHeight","inheritedAttrs","nativeScrollbarsOverlaid","show","initialize","optionsTemplate","defaultOptions","OverlayScrollbars","extensions","currentOptions","newOptions","_changedOptions"],"mappings":"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"}