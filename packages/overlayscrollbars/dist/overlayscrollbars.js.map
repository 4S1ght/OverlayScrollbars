{"version":3,"file":"overlayscrollbars.js","sources":["../src/support/cache/cache.ts","../src/support/utils/types.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/attribute.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/dom/class.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/utils/equal.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/offset.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/support/options/validation.ts","../src/support/options/transformation.ts","../src/classnames.ts","../src/options.ts","../src/environment.ts","../src/setups/structureSetup.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/lifecycles/lifecycleHubObservers.ts","../src/lifecycles/trinsicLifecycle.ts","../src/lifecycles/paddingLifecycle.ts","../src/lifecycles/overflowLifecycle.ts","../src/lifecycles/lifecycleHub.ts","../src/overlayscrollbars.ts"],"sourcesContent":["export interface CacheValues<T> {\r\n  readonly _value?: T;\r\n  readonly _previous?: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport interface CacheOptions<T> {\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<T>;\r\n  // Initial value for _value\r\n  _initialValue?: T;\r\n  // If true updates always _value and _previous, otherwise they update only when changed\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport interface Cache<T, C = undefined> {\r\n  _current: (force?: boolean) => CacheValues<T>;\r\n  _update: CacheUpdate<T, C>;\r\n}\r\n\r\nexport type CacheUpdate<T, C> = undefined extends C\r\n  ? (force?: boolean | 0, context?: C) => CacheValues<T>\r\n  : (force: boolean | 0, context: C) => CacheValues<T>;\r\n\r\nexport type UpdateCachePropFunction<T, C> = undefined extends C\r\n  ? (context?: C, current?: T, previous?: T) => T\r\n  : C extends T\r\n  ? ((context: C, current?: T, previous?: T) => T) | 0\r\n  : (context: C, current?: T, previous?: T) => T;\r\n\r\nexport type EqualCachePropFunction<T> = (currentVal?: T, newVal?: T) => boolean;\r\n\r\nexport const createCache = <T, C = undefined>(update: UpdateCachePropFunction<T, C>, options?: CacheOptions<T>): Cache<T, C> => {\r\n  const { _equal, _initialValue, _alwaysUpdateValues } = options || {};\r\n  let _value: T | undefined = _initialValue;\r\n  let _previous: T | undefined;\r\n\r\n  const cacheUpdate = ((force?: boolean | 0, context?: C) => {\r\n    const curr = _value;\r\n    // @ts-ignore\r\n    // update can only not be a function if C extends T as described in \"UpdateCachePropFunction\" type definition\r\n    // if C extends T the cast (context as T) is perfectly valid\r\n    const newVal = update ? update(context, _value, _previous) : (context as T);\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return {\r\n      _value,\r\n      _previous,\r\n      _changed: changed,\r\n    };\r\n  }) as CacheUpdate<T, C>;\r\n\r\n  return {\r\n    _update: cacheUpdate,\r\n    _current: (force?: boolean) => ({\r\n      _value,\r\n      _previous,\r\n      _changed: !!force,\r\n    }),\r\n  };\r\n};\r\n","import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) => {\r\n  return isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n};\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: Array<unknown>) => unknown {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat) ? (length > 0 && isObject(obj) ? length - 1 in obj : true) : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(obj: PlainObject, callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: Array<T>, item: T, fromIndex?: number): number => arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: Array<T>, items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): Array<T> => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items) ? Array.prototype.push.apply(array, items as Array<T>) : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr: ArrayLike<T>) => {\r\n  if (Array.from) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: Array<T> = [];\r\n\r\n  each(arr, (elm) => {\r\n    push(result, elm);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: Array<any> | null | undefined) => array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, p1?: unknown): void => {\r\n  const runFn = (fn: RunEachItem) => fn && fn(p1);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value?: string): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | false | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> => (elm ? from(elm.childNodes) : []);\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (elm: InputElementType, highBoundarySelector: string, deepBoundarySelector: string): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | false | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (parentElm: Node | false | null | undefined, preferredAnchor: Node | null | undefined, insertedElms: NodeCollection): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = ['WebKit', 'Moz', 'O', 'MS', 'webkit', 'moz', 'o', 'ms'];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without it, or and empty string if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n    return !(result = resultPossibilities.find((resultPossibility: string) => elmStyle[resultPossibility] !== undefined));\r\n  });\r\n\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported without it, or an empty string if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>('IntersectionObserver');\r\nexport const ResizeObserverConstructor = jsAPI<typeof ResizeObserver>('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | false | null | undefined,\r\n  className: string,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | false | null | undefined, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n */\r\nexport const addClass = (elm: Element | false | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n};\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | false | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (classNameA: string | null | undefined, classNameB: string | null | undefined) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","export interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean => !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null | undefined): boolean => (elm ? elementHasDimensions(elm as HTMLElement) : false);\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(target: EventTarget, eventNames: string, listener: (event: T) => any, capture?: boolean): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event): void => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event): void => evt.preventDefault();\r\n\r\n/**\r\n * Shorthand for the stopPropagation and preventDefault event Method.\r\n * @param evt The event of which the stopPropagation and preventDefault methods shall be called.\r\n */\r\nexport const stopAndPrevent = (evt: Event): void => (stopPropagation(evt) as undefined) || (preventDefault(evt) as undefined);\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(\r\n  a: T | undefined,\r\n  b: T | undefined,\r\n  props: Array<keyof T>,\r\n  propMutation?: ((value: any) => any) | null | false\r\n): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      const compareA = propMutation ? propMutation(a[prop]) : a[prop];\r\n      const compareB = propMutation ? propMutation(b[prop]) : b[prop];\r\n      if (compareA !== compareB) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = (a?: WH, b?: WH) => equal<WH>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = (a?: XY, b?: XY) => equal<XY>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n\r\n/**\r\n * Compares two DOM Rects for their equality of their width and height properties\r\n * Also returns false if one of the DOM Rects is undefined or null.\r\n * @param a DOM Rect a.\r\n * @param b DOM Rect b.\r\n * @param round Whether the values should be rounded.\r\n */\r\nexport const equalBCRWH = (a?: DOMRect, b?: DOMRect, round?: boolean) =>\r\n  equal<DOMRect>(a, b, ['width', 'height'], round && ((value) => Math.round(value)));\r\n","import { isNumber, isFunction } from 'support/utils/types';\r\nimport { rAF, cAF } from 'support/compatibility/apis';\r\n\r\nconst setT = window.setTimeout;\r\nconst clearTimeouts = (id: number | undefined) => {\r\n  id && window.clearTimeout(id);\r\n  id && cAF!(id);\r\n};\r\n\r\ntype DebounceTiming = number | false | null | undefined;\r\n\r\nexport interface DebounceOptions<FunctionToDebounce extends (...args: any) => any> {\r\n  /**\r\n   * The timeout for debouncing. If null, no debounce is applied.\r\n   */\r\n  _timeout?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * A maximum amount of ms. before the function will be called even with debounce.\r\n   */\r\n  _maxDelay?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * Function which merges parameters for each canceled debounce.\r\n   * If parameters can't be merged the function will return null, otherwise it returns the merged parameters.\r\n   */\r\n  _mergeParams?: (\r\n    prev: Parameters<FunctionToDebounce>,\r\n    curr: Parameters<FunctionToDebounce>\r\n  ) => Parameters<FunctionToDebounce> | false | null | undefined;\r\n}\r\n\r\nexport interface Debounced<FunctionToDebounce extends (...args: any) => any> {\r\n  (...args: Parameters<FunctionToDebounce>): ReturnType<FunctionToDebounce>;\r\n  _flush(): void;\r\n}\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param options Options for debouncing.\r\n */\r\nexport const debounce = <FunctionToDebounce extends (...args: any) => any>(\r\n  functionToDebounce: FunctionToDebounce,\r\n  options: DebounceOptions<FunctionToDebounce>\r\n): Debounced<FunctionToDebounce> => {\r\n  let timeoutId: number | undefined;\r\n  let maxTimeoutId: number | undefined;\r\n  let prevArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  let latestArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  const { _timeout, _maxDelay, _mergeParams } = options;\r\n\r\n  const invokeFunctionToDebounce = function (args: IArguments) {\r\n    clearTimeouts(timeoutId);\r\n    clearTimeouts(maxTimeoutId);\r\n    maxTimeoutId = timeoutId = prevArguments = undefined;\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  const mergeParms = (curr: Parameters<FunctionToDebounce>): Parameters<FunctionToDebounce> | false | null | undefined =>\r\n    _mergeParams && prevArguments ? _mergeParams(prevArguments, curr) : curr;\r\n\r\n  const flush = () => {\r\n    if (timeoutId) {\r\n      invokeFunctionToDebounce(mergeParms(latestArguments!) || latestArguments!);\r\n    }\r\n  };\r\n\r\n  const debouncedFn = function () {\r\n    const args: Parameters<FunctionToDebounce> = arguments as Parameters<FunctionToDebounce>;\r\n    const finalTimeout = isFunction(_timeout) ? _timeout() : _timeout;\r\n    const hasTimeout = isNumber(finalTimeout) && finalTimeout >= 0;\r\n\r\n    if (hasTimeout) {\r\n      const finalMaxWait = isFunction(_maxDelay) ? _maxDelay() : _maxDelay;\r\n      const hasMaxWait = isNumber(finalMaxWait) && finalMaxWait >= 0;\r\n      const setTimeoutFn = finalTimeout! > 0 ? setT : rAF!;\r\n      const mergeParamsResult = mergeParms(args);\r\n      const invokedArgs = mergeParamsResult || args;\r\n      const boundInvoke = invokeFunctionToDebounce.bind(0, invokedArgs);\r\n\r\n      if (!mergeParamsResult) {\r\n        invokeFunctionToDebounce(prevArguments || args);\r\n      }\r\n\r\n      clearTimeouts(timeoutId);\r\n      timeoutId = setTimeoutFn(boundInvoke, finalTimeout as number) as number;\r\n\r\n      if (hasMaxWait && !maxTimeoutId) {\r\n        maxTimeoutId = setT(flush, finalMaxWait as number);\r\n      }\r\n\r\n      prevArguments = latestArguments = invokedArgs;\r\n    } else {\r\n      invokeFunctionToDebounce(args);\r\n    }\r\n  };\r\n  debouncedFn._flush = flush;\r\n\r\n  return debouncedFn as Debounced<FunctionToDebounce>;\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray, isUndefined } from 'support/utils/types';\r\nimport { PlainObject, StyleObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\nconst cssNumber = {\r\n  //animationiterationcount: 1,\r\n  //columncount: 1,\r\n  //fillopacity: 1,\r\n  //flexgrow: 1,\r\n  //flexshrink: 1,\r\n  //fontweight: 1,\r\n  //lineheight: 1,\r\n  opacity: 1,\r\n  //order: 1,\r\n  //orphans: 1,\r\n  //widows: 1,\r\n  zindex: 1,\r\n  //zoom: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number => (!cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val);\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null ? computedStyle[prop] || computedStyle.getPropertyValue(prop) : elm.style[prop];\r\nconst setCSSVal = (elm: HTMLElement | false | null | undefined, prop: string, val: string | number): void => {\r\n  try {\r\n    if (elm) {\r\n      const { style } = elm;\r\n      if (!isUndefined(style[prop])) {\r\n        style[prop] = adaptCSSVal(prop, val);\r\n      } else {\r\n        style.setProperty(prop, val as string);\r\n      }\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style<CustomCssProps>(elm: HTMLElement | false | null | undefined, styles: StyleObject<CustomCssProps>): void;\r\nexport function style<CustomCssProps>(elm: HTMLElement | false | null | undefined, styles: string): string;\r\nexport function style<CustomCssProps>(elm: HTMLElement | false | null | undefined, styles: Array<string> | string): { [key: string]: string };\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps> | Array<string> | string\r\n): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns the top right bottom left values of the passed css property.\r\n * @param elm The element of which the values shall be returned.\r\n * @param propertyPrefix The css property prefix. (e.g. \"border\")\r\n * @param propertySuffix The css property suffix. (e.g. \"width\")\r\n */\r\nexport const topRightBottomLeft = (elm?: HTMLElement | false | null | undefined, propertyPrefix?: string, propertySuffix?: string): TRBL => {\r\n  const finalPrefix = propertyPrefix ? `${propertyPrefix}-` : '';\r\n  const finalSuffix = propertySuffix ? `-${propertySuffix}` : '';\r\n  const top = `${finalPrefix}top${finalSuffix}`;\r\n  const right = `${finalPrefix}right${finalSuffix}`;\r\n  const bottom = `${finalPrefix}bottom${finalSuffix}`;\r\n  const left = `${finalPrefix}left${finalSuffix}`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\nexport type OptionsObjectType = Record<string, unknown>;\r\nexport type OptionsFunctionType = (this: unknown, ...args: unknown[]) => unknown;\r\nexport type OptionsTemplateType<T extends OptionsTemplateNativeTypes> = ExtractPropsKey<OptionsTemplateTypeMap, T>;\r\nexport type OptionsTemplateTypes = keyof OptionsTemplateTypeMap;\r\nexport type OptionsTemplateNativeTypes = OptionsTemplateTypeMap[keyof OptionsTemplateTypeMap];\r\n\r\nexport type OptionsTemplateValue<T extends OptionsTemplateNativeTypes = string> = T extends string\r\n  ? string extends T\r\n    ? OptionsTemplateValueNonEnum<T>\r\n    : string\r\n  : OptionsTemplateValueNonEnum<T>;\r\n\r\nexport type OptionsTemplate<T> = {\r\n  [P in keyof T]: T[P] extends OptionsObjectType\r\n    ? OptionsTemplate<T[P]>\r\n    : T[P] extends OptionsTemplateNativeTypes\r\n    ? OptionsTemplateValue<T[P]>\r\n    : never;\r\n};\r\n\r\nexport type OptionsValidationResult<T> = {\r\n  readonly _foreign: Record<string, unknown>;\r\n  readonly _validated: PartialOptions<T>;\r\n};\r\n\r\nexport type PartialOptions<T> = {\r\n  [P in keyof T]?: T[P] extends OptionsObjectType ? PartialOptions<T[P]> : T[P];\r\n};\r\n\r\ntype OptionsTemplateTypeMap = {\r\n  __TPL_boolean_TYPE__: boolean;\r\n  __TPL_number_TYPE__: number;\r\n  __TPL_string_TYPE__: string;\r\n  __TPL_array_TYPE__: Array<any> | ReadonlyArray<any>;\r\n  __TPL_function_TYPE__: OptionsFunctionType;\r\n  __TPL_null_TYPE__: null;\r\n  __TPL_object_TYPE__: OptionsObjectType;\r\n};\r\n\r\ntype OptionsTemplateValueNonEnum<T extends OptionsTemplateNativeTypes> =\r\n  | OptionsTemplateType<T>\r\n  | [OptionsTemplateType<T>, ...Array<OptionsTemplateTypes>];\r\n\r\ntype ExtractPropsKey<T, TProps extends T[keyof T]> = {\r\n  [P in keyof T]: TProps extends T[P] ? P : never;\r\n}[keyof T];\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<OptionsObjectType>;\r\n  readonly function: OptionsTemplateType<OptionsFunctionType>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n\r\nconst { stringify } = JSON;\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = ['boolean', 'number', 'string', 'array', 'object', 'function', 'null'].reduce(\r\n  (result, item) => {\r\n    result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n    return result;\r\n  },\r\n  {} as OptionsTemplateTypesDictionary\r\n);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  options: PartialOptions<T>,\r\n  template: OptionsTemplate<T>,\r\n  optionsDiff: T,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: PartialOptions<T> = {};\r\n  const optionsCopy: PartialOptions<T> = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsDiffValue: any = isUndefined(optionsDiff[prop]) ? {} : optionsDiff[prop];\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> = template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const validatedResult = validateRecursive(optionsValue, templateValue as T, optionsDiffValue, doWriteErrors, propPrefix + prop);\r\n      validatedOptions[prop] = validatedResult._validated as any;\r\n      optionsCopy[prop] = validatedResult._foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        const doStringifyComparison = isArray(optionsValue) || isPlainObject(optionsValue);\r\n        if (doStringifyComparison ? stringify(optionsValue) !== stringify(optionsDiffValue) : optionsValue !== optionsDiffValue) {\r\n          validatedOptions[prop] = optionsValue;\r\n        }\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${errorEnumStrings.length > 0 ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].` : ''}`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    _foreign: optionsCopy,\r\n    _validated: validatedOptions,\r\n  };\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  options: PartialOptions<T>,\r\n  template: OptionsTemplate<T>,\r\n  optionsDiff?: T | null,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => {\r\n  /*\r\n    if (!isEmptyObject(foreign) && doWriteErrors)\r\n        console.warn(`The following options are discarded due to invalidity:\\r\\n ${window.JSON.stringify(foreign, null, 2)}`);\r\n\r\n    //add values, which aren't specified in the template, to the finished validated object to prevent them from being discarded\r\n    if (keepForeignProps) {\r\n        Object.assign(result.validated, foreign);\r\n    }\r\n    */\r\n  return validateRecursive<T>(options, template, optionsDiff || ({} as T), doWriteErrors || false);\r\n};\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n","import {\r\n  OptionsTemplate,\r\n  OptionsObjectType,\r\n  OptionsTemplateNativeTypes,\r\n  OptionsTemplateTypes,\r\n  OptionsTemplateValue,\r\n} from 'support/options/validation';\r\nimport { PlainObject } from 'typings';\r\nimport { isArray } from 'support/utils/types';\r\nimport { each, keys } from 'support/utils';\r\n\r\nexport interface OptionsWithOptionsTemplateTransformation<T> {\r\n  _template: OptionsTemplate<T>;\r\n  _options: T;\r\n}\r\n\r\nexport type OptionsWithOptionsTemplateValue<T extends OptionsTemplateNativeTypes> = [T, OptionsTemplateValue<T>];\r\n\r\nexport type OptionsWithOptionsTemplate<T> = {\r\n  [P in keyof T]: T[P] extends OptionsObjectType\r\n    ? OptionsWithOptionsTemplate<T[P]>\r\n    : T[P] extends OptionsTemplateNativeTypes\r\n    ? OptionsWithOptionsTemplateValue<T[P]>\r\n    : never;\r\n};\r\n\r\n/**\r\n * Transforms the given OptionsWithOptionsTemplate<T> object to its corresponding generic (T) Object or its corresponding Template object.\r\n * @param optionsWithOptionsTemplate The OptionsWithOptionsTemplate<T> object which shall be converted.\r\n * @param toTemplate True if the given OptionsWithOptionsTemplate<T> shall be converted to its corresponding Template object.\r\n */\r\nexport const transformOptions = <T>(optionsWithOptionsTemplate: OptionsWithOptionsTemplate<T>): OptionsWithOptionsTemplateTransformation<T> => {\r\n  const result: any = {\r\n    _template: {},\r\n    _options: {},\r\n  };\r\n\r\n  each(keys(optionsWithOptionsTemplate), (key: Extract<keyof T, string>) => {\r\n    const val: PlainObject | OptionsTemplateTypes | Array<OptionsTemplateTypes> = optionsWithOptionsTemplate[key];\r\n\r\n    if (isArray(val)) {\r\n      result._template[key] = val[1];\r\n      result._options[key] = val[0];\r\n    } else {\r\n      //  if (isObject(val))\r\n      const tmpResult = transformOptions(val as OptionsWithOptionsTemplate<typeof val>);\r\n      result._template[key] = tmpResult._template;\r\n      result._options[key] = tmpResult._options;\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameViewportArrange = `${classNameViewport}-arrange`;\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n","import {\r\n  optionsTemplateTypes as oTypes,\r\n  transformOptions,\r\n  OptionsTemplateValue,\r\n  OptionsWithOptionsTemplateValue,\r\n  OptionsWithOptionsTemplate,\r\n} from 'support/options';\r\n\r\nexport type ResizeBehavior = 'none' | 'both' | 'horizontal' | 'vertical';\r\n\r\nexport type OverflowBehavior = 'hidden' | 'scroll' | 'visible' | 'visible-hidden';\r\n\r\nexport type VisibilityBehavior = 'visible' | 'hidden' | 'auto';\r\n\r\nexport type AutoHideBehavior = 'never' | 'scroll' | 'leave' | 'move';\r\n\r\nexport type ScrollBehavior = 'always' | 'ifneeded' | 'never';\r\n\r\nexport type BasicEventCallback = (this: any) => void;\r\n\r\nexport type ScrollEventCallback = (this: any, args?: UIEvent) => void;\r\n\r\nexport type OverflowChangedCallback = (this: any, args?: OverflowChangedArgs) => void;\r\n\r\nexport type OverflowAmountChangedCallback = (this: any, args?: OverflowAmountChangedArgs) => void;\r\n\r\nexport type DirectionChangedCallback = (this: any, args?: DirectionChangedArgs) => void;\r\n\r\nexport type SizeChangedCallback = (this: any, args?: SizeChangedArgs) => void;\r\n\r\nexport type UpdatedCallback = (this: any, args?: UpdatedArgs) => void;\r\n\r\nexport interface OSOptions {\r\n  resize: ResizeBehavior;\r\n  paddingAbsolute: boolean;\r\n  updating: {\r\n    elementEvents: Array<[string, string]> | null;\r\n    attributes: string[] | null;\r\n    debounce: number | [number, number] | null;\r\n  };\r\n  overflow: {\r\n    x: OverflowBehavior;\r\n    y: OverflowBehavior;\r\n  };\r\n  scrollbars: {\r\n    visibility: VisibilityBehavior;\r\n    autoHide: AutoHideBehavior;\r\n    autoHideDelay: number;\r\n    dragScroll: boolean;\r\n    clickScroll: boolean;\r\n    touch: boolean;\r\n  };\r\n  textarea: {\r\n    dynWidth: boolean;\r\n    dynHeight: boolean;\r\n    inheritedAttrs: string | Array<string> | null;\r\n  };\r\n  nativeScrollbarsOverlaid: {\r\n    show: boolean;\r\n    initialize: boolean;\r\n  };\r\n  callbacks: {\r\n    onUpdated: (() => any) | null;\r\n  };\r\n  /*\r\n  callbacks?: {\r\n    onInitialized?: BasicEventCallback | null;\r\n    onInitializationWithdrawn?: BasicEventCallback | null;\r\n    onDestroyed?: BasicEventCallback | null;\r\n    onScrollStart?: ScrollEventCallback | null;\r\n    onScroll?: ScrollEventCallback | null;\r\n    onScrollStop?: ScrollEventCallback | null;\r\n    onOverflowChanged?: OverflowChangedCallback | null;\r\n    onOverflowAmountChanged?: OverflowAmountChangedCallback | null;\r\n    onDirectionChanged?: DirectionChangedCallback | null;\r\n    onContentSizeChanged?: SizeChangedCallback | null;\r\n    onHostSizeChanged?: SizeChangedCallback | null;\r\n    onUpdated?: UpdatedCallback | null;\r\n  };\r\n  */\r\n}\r\n\r\nexport interface OverflowChangedArgs {\r\n  x: boolean;\r\n  y: boolean;\r\n  xScrollable: boolean;\r\n  yScrollable: boolean;\r\n  clipped: boolean;\r\n}\r\n\r\nexport interface OverflowAmountChangedArgs {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface DirectionChangedArgs {\r\n  isRTL: number;\r\n  dir: string;\r\n}\r\n\r\nexport interface SizeChangedArgs {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface UpdatedArgs {\r\n  forced: boolean;\r\n}\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst arrayNullValues: OptionsTemplateValue<Array<unknown> | null> = [oTypes.array, oTypes.null];\r\nconst stringArrayNullAllowedValues: OptionsTemplateValue<string | ReadonlyArray<string> | null> = [oTypes.string, oTypes.array, oTypes.null];\r\nconst booleanTrueTemplate: OptionsWithOptionsTemplateValue<boolean> = [true, oTypes.boolean];\r\nconst booleanFalseTemplate: OptionsWithOptionsTemplateValue<boolean> = [false, oTypes.boolean];\r\n// const callbackTemplate: OptionsWithOptionsTemplateValue<Func | null> = [null, [oTypes.function, oTypes.null]];\r\nconst resizeAllowedValues: OptionsTemplateValue<ResizeBehavior> = 'none both horizontal vertical';\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> = 'hidden scroll visible visible-hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> = 'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> = 'never scroll leavemove';\r\n\r\n/**\r\n * A object which serves as \"default options object\" and \"options template object\".\r\n * I combined these two into one object so that I don't have to define two separate big objects, instead I define one big object.\r\n *\r\n * The property value is a tuple:\r\n * the first value is the default value\r\n * the second value is the template value\r\n * Example:\r\n * {\r\n *  a: ['default', [Type.string, Type.null]],\r\n *  b: [250, Type.number]\r\n * }\r\n * Property \"a\" has a default value of 'default' and it can be a string or null\r\n * Property \"b\" has a default value of 250 and it can be number\r\n */\r\nconst defaultOptionsWithTemplate: OptionsWithOptionsTemplate<OSOptions> = {\r\n  resize: ['none', resizeAllowedValues], // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: booleanFalseTemplate, // true || false\r\n  updating: {\r\n    elementEvents: [[['img', 'load']], arrayNullValues], // array of tuples || null\r\n    attributes: [null, arrayNullValues],\r\n    debounce: [\r\n      [0, 33],\r\n      [oTypes.number, oTypes.array, oTypes.null],\r\n    ], // number || number array || null\r\n  },\r\n  overflow: {\r\n    x: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  scrollbars: {\r\n    visibility: ['auto', scrollbarsVisibilityAllowedValues], // visible || hidden || auto || v || h || a\r\n    autoHide: ['never', scrollbarsAutoHideAllowedValues], // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: [800, numberAllowedValues], // number\r\n    dragScroll: booleanTrueTemplate, // true || false\r\n    clickScroll: booleanFalseTemplate, // true || false\r\n    touch: booleanTrueTemplate, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: booleanFalseTemplate, // true || false\r\n    dynHeight: booleanFalseTemplate, // true || false\r\n    inheritedAttrs: [['style', 'class'], stringArrayNullAllowedValues], // string || array || null\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanFalseTemplate, // true || false\r\n    initialize: booleanFalseTemplate, // true || false\r\n  },\r\n  callbacks: {\r\n    onUpdated: [null, [oTypes.function, oTypes.null]],\r\n  },\r\n  /*\r\n  callbacks: {\r\n    onInitialized: callbackTemplate, // null || function\r\n    onInitializationWithdrawn: callbackTemplate, // null || function\r\n    onDestroyed: callbackTemplate, // null || function\r\n    onScrollStart: callbackTemplate, // null || function\r\n    onScroll: callbackTemplate, // null || function\r\n    onScrollStop: callbackTemplate, // null || function\r\n    onOverflowChanged: callbackTemplate, // null || function\r\n    onOverflowAmountChanged: callbackTemplate, // null || function\r\n    onDirectionChanged: callbackTemplate, // null || function\r\n    onContentSizeChanged: callbackTemplate, // null || function\r\n    onHostSizeChanged: callbackTemplate, // null || function\r\n    onUpdated: callbackTemplate, // null || function\r\n  },\r\n  */\r\n};\r\n\r\nexport const { _template: optionsTemplate, _options: defaultOptions } = transformOptions(defaultOptionsWithTemplate);\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalBCRWH,\r\n  getBoundingClientRect,\r\n  assignDeep,\r\n  cssProperty,\r\n  PartialOptions,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { OSOptions, defaultOptions } from 'options';\r\n\r\nexport interface InitializationStrategy {\r\n  _padding: boolean;\r\n  _content: boolean;\r\n}\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  _nativeScrollbarSize: XY;\r\n  _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  _nativeScrollbarStyling: boolean;\r\n  _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  _flexboxGlue: boolean;\r\n  _cssCustomProperties: boolean;\r\n  _addListener(listener: OnEnvironmentChanged): void;\r\n  _removeListener(listener: OnEnvironmentChanged): void;\r\n  _getInitializationStrategy(): InitializationStrategy;\r\n  _setInitializationStrategy(newInitializationStrategy: Partial<InitializationStrategy>): void;\r\n  _getDefaultOptions(): OSOptions;\r\n  _setDefaultOptions(newDefaultOptions: PartialOptions<OSOptions>): void;\r\n  _defaultInitializationStrategy: InitializationStrategy;\r\n  _defaultDefaultOptions: OSOptions;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst getNativeScrollbarSize = (body: HTMLElement, measureElm: HTMLElement): XY => {\r\n  appendChildren(body, measureElm);\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h,\r\n    y: oSize.w - cSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, cssProperty('scrollbar-width')) === 'none' ||\r\n      window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n  } catch (ex) {}\r\n\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (parentElm: HTMLElement, childElm: HTMLElement): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const minOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMin = equalBCRWH(minOffsetsize, minOffsetsizeParent, true);\r\n\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const maxOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMax = equalBCRWH(maxOffsetsize, maxOffsetsizeParent, true);\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst getDefaultInitializationStrategy = (nativeScrollbarStyling: boolean): InitializationStrategy => ({\r\n  _padding: !nativeScrollbarStyling,\r\n  _content: false,\r\n});\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const nativeScrollbarSize = getNativeScrollbarSize(body, envElm);\r\n  const nativeScrollbarStyling = getNativeScrollbarStyling(envElm);\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n  const defaultInitializationStrategy = getDefaultInitializationStrategy(nativeScrollbarStyling);\r\n  let initializationStrategy = defaultInitializationStrategy;\r\n  let defaultDefaultOptions = defaultOptions;\r\n\r\n  const env: Environment = {\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _cssCustomProperties: style(envElm, 'zIndex') === '-1',\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.add(listener);\r\n    },\r\n    _removeListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.delete(listener);\r\n    },\r\n    _getInitializationStrategy: () => ({ ...initializationStrategy }),\r\n    _setInitializationStrategy(newInitializationStrategy) {\r\n      initializationStrategy = assignDeep({}, initializationStrategy, newInitializationStrategy);\r\n    },\r\n    _getDefaultOptions: () => ({ ...defaultDefaultOptions }),\r\n    _setDefaultOptions(newDefaultOptions) {\r\n      defaultDefaultOptions = assignDeep({}, defaultDefaultOptions, newDefaultOptions);\r\n    },\r\n    _defaultInitializationStrategy: defaultInitializationStrategy,\r\n    _defaultDefaultOptions: defaultDefaultOptions,\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n    let scrollbarSize = nativeScrollbarSize;\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const newScrollbarSize = (environmentInstance._nativeScrollbarSize = getNativeScrollbarSize(body, envElm));\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSize.x !== newScrollbarSize.x || scrollbarSize.y !== newScrollbarSize.y) {\r\n            runEach(onChangedListener);\r\n          }\r\n\r\n          scrollbarSize = newScrollbarSize;\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  isUndefined,\r\n  removeElements,\r\n  removeClass,\r\n  push,\r\n  runEach,\r\n  insertBefore,\r\n  attr,\r\n  isBoolean,\r\n} from 'support';\r\nimport {\r\n  classNameHost,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameViewportArrange,\r\n  classNameContent,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { getEnvironment } from 'environment';\r\nimport { OSTarget, OSTargetObject, OSTargetElement } from 'typings';\r\n\r\nexport interface OSTargetContext {\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: HTMLDocument;\r\n}\r\n\r\nexport interface PreparedOSTargetObject {\r\n  _target: OSTargetElement;\r\n  _host: HTMLElement;\r\n  _viewport: HTMLElement;\r\n  _padding: HTMLElement | false | null;\r\n  _content: HTMLElement | false | null;\r\n  _viewportArrange: HTMLStyleElement | false | null;\r\n}\r\n\r\nexport interface StructureSetup {\r\n  _targetObj: PreparedOSTargetObject;\r\n  _targetCtx: OSTargetContext;\r\n  _destroy: () => void;\r\n}\r\n\r\nconst unwrap = (elm: HTMLElement | false | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nlet contentArrangeCounter = 0;\r\nconst createUniqueViewportArrangeElement = (): HTMLStyleElement => {\r\n  const elm = document.createElement('style');\r\n\r\n  attr(elm, 'id', `${classNameViewportArrange}-${contentArrangeCounter}`);\r\n  contentArrangeCounter++;\r\n\r\n  return elm;\r\n};\r\nconst evaluateCreationFromStrategy = (initializationValue: HTMLElement | boolean | undefined, strategy: boolean): HTMLElement | false | undefined => {\r\n  const isBooleanValue = isBoolean(initializationValue);\r\n  if (isBooleanValue || isUndefined(initializationValue)) {\r\n    return (isBooleanValue ? initializationValue : strategy) && undefined;\r\n  }\r\n  return initializationValue as HTMLElement;\r\n};\r\n\r\nexport const createStructureSetup = (target: OSTarget | OSTargetObject): StructureSetup => {\r\n  const { _getInitializationStrategy, _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _cssCustomProperties } = getEnvironment();\r\n  const { _padding: paddingNeeded, _content: contentNeeded } = _getInitializationStrategy();\r\n  const targetIsElm = isHTMLElement(target);\r\n  const osTargetObj: Partial<PreparedOSTargetObject> = targetIsElm\r\n    ? ({} as Partial<PreparedOSTargetObject>)\r\n    : {\r\n        _host: (target as OSTargetObject).host,\r\n        _target: (target as OSTargetObject).target,\r\n        _viewport: (target as OSTargetObject).viewport,\r\n        _padding: evaluateCreationFromStrategy((target as OSTargetObject).padding, paddingNeeded),\r\n        _content: evaluateCreationFromStrategy((target as OSTargetObject).content, contentNeeded),\r\n      };\r\n\r\n  if (targetIsElm) {\r\n    const viewport = createDiv(classNameViewport);\r\n    const padding = paddingNeeded && createDiv(classNamePadding);\r\n    const content = contentNeeded && createDiv(classNameContent);\r\n\r\n    osTargetObj._target = target as OSTargetElement;\r\n    osTargetObj._padding = padding;\r\n    osTargetObj._viewport = viewport;\r\n    osTargetObj._content = content;\r\n  }\r\n\r\n  let { _target, _padding, _viewport, _content } = osTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextarea = is(_target, 'textarea');\r\n  const isBody = !isTextarea && is(_target, 'body');\r\n  const _host = (isTextarea ? osTargetObj._host || createDiv() : _target) as HTMLElement;\r\n  const getTargetContents = (contentSlot: HTMLElement) => (isTextarea ? (_target as HTMLTextAreaElement) : contents(contentSlot as HTMLElement));\r\n  const isTextareaHostGenerated = isTextarea && _host !== osTargetObj._host;\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  if (targetIsElm) {\r\n    const contentSlot = _content || _viewport;\r\n    appendChildren(contentSlot, getTargetContents(_target!));\r\n    appendChildren(_host, _padding);\r\n    appendChildren(_padding || _host, _viewport);\r\n    appendChildren(_viewport, _content);\r\n\r\n    push(destroyFns, () => {\r\n      appendChildren(_host, contents(contentSlot));\r\n      removeElements(_padding || _viewport);\r\n      removeClass(_host, classNameHost);\r\n    });\r\n  } else {\r\n    const contentContainingElm = _content || _viewport || _padding || _host;\r\n    const createPadding = isUndefined(_padding);\r\n    const createViewport = isUndefined(_viewport);\r\n    const createContent = isUndefined(_content);\r\n    const targetContents = getTargetContents(contentContainingElm);\r\n\r\n    _padding = osTargetObj._padding = createPadding ? createDiv() : _padding;\r\n    _viewport = osTargetObj._viewport = createViewport ? createDiv() : _viewport;\r\n    _content = osTargetObj._content = createContent ? createDiv() : _content;\r\n\r\n    appendChildren(_host, _padding);\r\n    appendChildren(_padding || _host, _viewport);\r\n    appendChildren(_viewport, _content);\r\n\r\n    const contentSlot = _content || _viewport;\r\n    appendChildren(contentSlot, targetContents);\r\n\r\n    push(destroyFns, () => {\r\n      if (createContent) {\r\n        unwrap(_content);\r\n      }\r\n      if (createViewport) {\r\n        unwrap(_viewport);\r\n      }\r\n      if (createPadding) {\r\n        unwrap(_padding);\r\n      }\r\n      removeClass(_host, classNameHost);\r\n      removeClass(_padding, classNamePadding);\r\n      removeClass(_viewport, classNameViewport);\r\n      removeClass(_content, classNameContent);\r\n    });\r\n  }\r\n\r\n  addClass(_host, classNameHost);\r\n  addClass(_padding, classNamePadding);\r\n  addClass(_viewport, classNameViewport);\r\n  addClass(_content, classNameContent);\r\n\r\n  const ownerDocument: HTMLDocument = _target!.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const ctx: OSTargetContext = {\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n  };\r\n  // @ts-ignore\r\n  const obj: PreparedOSTargetObject = {\r\n    ...osTargetObj,\r\n    _host,\r\n  };\r\n\r\n  if (_nativeScrollbarStyling) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  } else if (!_cssCustomProperties && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y)) {\r\n    const viewportArrangeElm = createUniqueViewportArrangeElement();\r\n\r\n    insertBefore(_viewport, viewportArrangeElm);\r\n    push(destroyFns, removeElements.bind(0, viewportArrangeElm));\r\n\r\n    obj._viewportArrange = viewportArrangeElm;\r\n  }\r\n\r\n  return {\r\n    _targetObj: obj,\r\n    _targetCtx: ctx,\r\n    _destroy: () => {\r\n      runEach(destroyFns);\r\n    },\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  stopAndPrevent,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  isBoolean,\r\n  removeClass,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\nexport interface SizeObserverOptions {\r\n  _direction?: boolean;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserverCallbackParams {\r\n  _sizeChanged: boolean;\r\n  _directionIsRTLCache?: CacheValues<boolean>;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _directionIsRTL: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\n/*\r\nconst directionIsRTLMap = {\r\n  direction: ['rtl'],\r\n  'writing-mode': ['sideways-rl', 'tb', 'tb-rl', 'vertical-rl'],\r\n};\r\nconst directionIsRTL = (elm: HTMLElement): boolean => {\r\n  let isRTL = false;\r\n  const styles = style(elm, ['direction', 'writing-mode']);\r\n  each(styles, (value, key) => {\r\n    isRTL = isRTL || indexOf(directionIsRTLMap[key], value) > -1;\r\n  });\r\n  return isRTL;\r\n};\r\n*/\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst directionIsRTL = (elm: HTMLElement): boolean => style(elm, 'direction') === 'rtl';\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\n/**\r\n * Creates a size observer which observes any size, padding, border, margin and box-sizing changes of the target element. Depending on the options also direction and appear can be observed.\r\n * @param target The target element which shall be observed.\r\n * @param onSizeChangedCallback The callback which gets called after a size change was detected.\r\n * @param options The options for size detection, whether to observe also direction and appear.\r\n * @returns A object which represents the instance of the size observer.\r\n */\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (params: SizeObserverCallbackParams) => any,\r\n  options?: SizeObserverOptions\r\n): SizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } = options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(`<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`);\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const { _update: updateResizeObserverContentRectCache } = createCache<DOMRectReadOnly, DOMRectReadOnly>(0, {\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (sizeChangedContext?: CacheValues<boolean> | ResizeObserverEntry[] | Event | boolean) => {\r\n    const hasDirectionCache = sizeChangedContext && isBoolean((sizeChangedContext as CacheValues<boolean>)._value);\r\n\r\n    let skip = false;\r\n    let appear: boolean | number | undefined = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isArray(sizeChangedContext) && sizeChangedContext.length > 0) {\r\n      const { _previous, _value } = updateResizeObserverContentRectCache(0, sizeChangedContext.pop()!.contentRect);\r\n      const hasDimensions = domRectHasDimensions(_value);\r\n      const hadDimensions = domRectHasDimensions(_previous);\r\n      skip = !_previous || !hasDimensions; // skip on initial RO. call or if display is none\r\n      appear = !hadDimensions && hasDimensions;\r\n\r\n      doDirectionScroll = !skip; // direction scroll when not skipping\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      doDirectionScroll = (sizeChangedContext as CacheValues<boolean>)._changed; // direction scroll when DirectionCache changed, false otherwise\r\n    }\r\n    // else if it triggered with appear from polyfill\r\n    else {\r\n      appear = sizeChangedContext === true;\r\n    }\r\n\r\n    if (observeDirectionChange && doDirectionScroll) {\r\n      const rtl = hasDirectionCache ? (sizeChangedContext as CacheValues<boolean>)._value : directionIsRTL(sizeObserver);\r\n      scrollLeft(sizeObserver, rtl ? (rtlScrollBehavior.n ? -scrollAmount : rtlScrollBehavior.i ? 0 : scrollAmount) : scrollAmount);\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback({\r\n        _sizeChanged: !hasDirectionCache,\r\n        _directionIsRTLCache: hasDirectionCache ? (sizeChangedContext as CacheValues<boolean>) : undefined,\r\n        _appear: !!appear,\r\n      });\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange ? onSizeChangedCallbackProxy : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => {\r\n      resizeObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(observerElementChildrenRoot);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = (appear?: unknown) => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy(appear === true);\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event | false) => {\r\n      currSize = offsetSize(observerElementChildrenRoot);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent) {\r\n        stopAndPrevent(scrollEvent);\r\n\r\n        if (isDirty && !rAFId) {\r\n          cAF!(rAFId);\r\n          rAFId = rAF!(onResized);\r\n        }\r\n      } else {\r\n        onResized(scrollEvent === false);\r\n      }\r\n\r\n      reset();\r\n    };\r\n\r\n    push(offListeners, [on(expandElement, scrollEventName, onScroll), on(shrinkElement, scrollEventName, onScroll)]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n\r\n    reset();\r\n\r\n    appearCallback = observeAppearChange ? onScroll.bind(0, false) : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(directionIsRTL.bind(0, sizeObserver));\r\n    const { _update: updateDirectionIsRTLCache } = directionIsRTLCache;\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        console.log;\r\n        const { _value, _changed } = directionIsRTLCacheValues;\r\n        if (_changed) {\r\n          removeClass(listenerElement, 'ltr rtl');\r\n          if (_value) {\r\n            addClass(listenerElement, 'rtl');\r\n          } else {\r\n            addClass(listenerElement, 'ltr');\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        stopAndPrevent(event);\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(sizeObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _directionIsRTL: directionIsRTLCache\r\n          ? directionIsRTLCache._current(force)\r\n          : {\r\n              _value: false,\r\n              _previous: false,\r\n              _changed: false,\r\n            },\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDiv,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport interface TrinsicObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _heightIntrinsic: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a trinsic observer which observes changes to intrinsic or extrinsic sizing for the height of the target element.\r\n * @param target The element which shall be observed.\r\n * @param onTrinsicChangedCallback The callback which gets called after a change was detected.\r\n * @returns A object which represents the instance of the trinsic observer.\r\n */\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): TrinsicObserver => {\r\n  const trinsicObserver = createDiv(classNameTrinsicObserver);\r\n  const offListeners: (() => void)[] = [];\r\n  const { _update: updateHeightIntrinsicCache, _current: getCurrentHeightIntrinsicCache } = createCache<\r\n    boolean,\r\n    IntersectionObserverEntry | WH<number>\r\n  >(\r\n    (ioEntryOrSize: IntersectionObserverEntry | WH<number>) =>\r\n      (ioEntryOrSize! as WH<number>).h === 0 ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).isIntersecting ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).intersectionRatio > 0,\r\n    {\r\n      _initialValue: false,\r\n    }\r\n  );\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          const last = entries.pop();\r\n          if (last) {\r\n            const heightIntrinsic = updateHeightIntrinsicCache(0, last);\r\n\r\n            if (heightIntrinsic._changed) {\r\n              onTrinsicChangedCallback(heightIntrinsic);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => {\r\n      intersectionObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const onSizeChanged = () => {\r\n      const newSize = offsetSize(trinsicObserver);\r\n      const heightIntrinsicCache = updateHeightIntrinsicCache(0, newSize);\r\n      if (heightIntrinsicCache._changed) {\r\n        onTrinsicChangedCallback(heightIntrinsicCache);\r\n      }\r\n    };\r\n    push(offListeners, createSizeObserver(trinsicObserver, onSizeChanged)._destroy);\r\n    onSizeChanged();\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(trinsicObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _heightIntrinsic: getCurrentHeightIntrinsicCache(force),\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  off,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n  isUndefined,\r\n} from 'support';\r\n\r\ntype StringNullUndefined = string | null | undefined;\r\n\r\ntype DOMContentObserverCallback = (contentChangedTroughEvent: boolean) => any;\r\n\r\ntype DOMTargetObserverCallback = (targetChangedAttrs: string[], targetStyleChanged: boolean) => any;\r\n\r\ninterface DOMObserverOptionsBase {\r\n  _attributes?: string[];\r\n  _styleChangingAttributes?: string[];\r\n}\r\n\r\ninterface DOMContentObserverOptions extends DOMObserverOptionsBase {\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname(s) | function returning eventname(s)] -> eventnames divided by whitespaces\r\n  _nestedTargetSelector?: string;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange; // function which will prevent marking certain dom changes as content change if it returns true\r\n  _ignoreNestedTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed on nested targets if it returns true\r\n}\r\n\r\ninterface DOMTargetObserverOptions extends DOMObserverOptionsBase {\r\n  _ignoreTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed if it returns true\r\n}\r\n\r\ntype ContentChangeArrayItem = [StringNullUndefined, StringNullUndefined] | null | undefined;\r\n\r\nexport type DOMObserverEventContentChange = Array<ContentChangeArrayItem> | false | null | undefined;\r\n\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions?: DOMContentObserverOptions\r\n) => boolean;\r\n\r\nexport type DOMObserverIgnoreTargetChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\n\r\nexport type DOMObserverCallback<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverCallback\r\n  : DOMTargetObserverCallback;\r\n\r\nexport type DOMObserverOptions<ContentObserver extends boolean> = ContentObserver extends true ? DOMContentObserverOptions : DOMTargetObserverOptions;\r\n\r\nexport interface DOMObserver {\r\n  _destroy: () => void;\r\n  _update: () => void;\r\n}\r\n\r\n/**\r\n * Creates a set of helper functions to observe events of elements inside the target element.\r\n * @param target The target element of which the children elements shall be observed. (not only direct children but also nested ones)\r\n * @param eventContentChange The event content change array. (array of tuples: selector and eventname(s))\r\n * @param callback Callback which is called if one of the elements emits the corresponding event.\r\n * @returns A object which contains a set of helper functions to destroy and update the observation of elements.\r\n */\r\nconst createEventContentChange = (target: Element, eventContentChange: DOMObserverEventContentChange, callback: (...args: any) => any) => {\r\n  let map: Map<Node, string> | undefined;\r\n  const _destroy = () => {\r\n    if (map) {\r\n      map.forEach((eventName: string, elm: Node) => {\r\n        off(elm, eventName, callback);\r\n      });\r\n      map.clear();\r\n    }\r\n  };\r\n  const _updateElements = (getElements?: (selector: string) => Node[]) => {\r\n    if (map && eventContentChange) {\r\n      const eventElmList = eventContentChange.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventNames = item[1];\r\n          const elements = eventNames && selector && (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements && elements.length && eventNames && isString(eventNames)) {\r\n            push(arr, [elements, eventNames.trim()], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) =>\r\n        each(item[0], (elm) => {\r\n          const eventNames = item[1];\r\n          const registredEventNames = map!.get(elm);\r\n          const newEntry = isUndefined(registredEventNames);\r\n          const changingExistingEntry = !newEntry && eventNames !== registredEventNames;\r\n          const finalEventNames = changingExistingEntry ? `${registredEventNames} ${eventNames}` : eventNames;\r\n\r\n          if (changingExistingEntry) {\r\n            off(elm, registredEventNames!, callback);\r\n          }\r\n\r\n          map!.set(elm, finalEventNames);\r\n          on(elm, finalEventNames, callback);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    map = map || new Map<Node, string>();\r\n    _destroy();\r\n    _updateElements();\r\n  }\r\n\r\n  return {\r\n    _destroy,\r\n    _updateElements,\r\n  };\r\n};\r\n\r\n/**\r\n * Creates a DOM observer which observes DOM changes to either the target element or its children.\r\n * @param target The element which shall be observed.\r\n * @param isContentObserver Whether this observer is just observing the target or just the targets children. (not only direct children but also nested ones)\r\n * @param callback The callback which gets called if a change was detected.\r\n * @param options The options for DOM change detection.\r\n * @returns A object which represents the instance of the DOM observer.\r\n */\r\nexport const createDOMObserver = <ContentObserver extends boolean>(\r\n  target: HTMLElement,\r\n  isContentObserver: ContentObserver,\r\n  callback: DOMObserverCallback<ContentObserver>,\r\n  options?: DOMObserverOptions<ContentObserver>\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetChange,\r\n    _ignoreNestedTargetChange,\r\n    _ignoreContentChange,\r\n  } = (options as DOMContentObserverOptions & DOMTargetObserverOptions) || {};\r\n  const { _destroy: destroyEventContentChange, _updateElements: updateEventContentChangeElements } = createEventContentChange(\r\n    target,\r\n    isContentObserver && _eventContentChange,\r\n    debounce(\r\n      () => {\r\n        if (isConnected) {\r\n          (callback as DOMContentObserverCallback)(true);\r\n        }\r\n      },\r\n      { _timeout: 33, _maxDelay: 99 }\r\n    )\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes);\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange = (isContentObserver ? _ignoreNestedTargetChange : _ignoreTargetChange) || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue = isAttributesType && isString(attributeName) ? attr(mutationTarget as HTMLElement, attributeName!) : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const styleChangingAttrChanged = indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      // if is content observer and something changed in children\r\n      if (isContentObserver && !targetIsMutationTarget) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged;\r\n        const isNestedTarget = contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged = baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      // if is target observer and target attr changed\r\n      if (\r\n        !isContentObserver &&\r\n        targetIsMutationTarget &&\r\n        attributeChanged &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null)\r\n      ) {\r\n        push(targetChangedAttrs, attributeName!);\r\n        targetStyleChanged = targetStyleChanged || styleChangingAttrChanged;\r\n      }\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      // adds / removes the new elements from the event content change\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n\r\n    if (isContentObserver) {\r\n      contentChanged && (callback as DOMContentObserverCallback)(false);\r\n    } else if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged) {\r\n      (callback as DOMTargetObserverCallback)(targetChangedAttrs, targetStyleChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: isContentObserver,\r\n    childList: isContentObserver,\r\n    characterData: isContentObserver,\r\n  });\r\n  isConnected = true;\r\n\r\n  return {\r\n    _destroy: () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    _update: () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  };\r\n};\r\n","import { CacheValues, diffClass, debounce, isArray, isNumber, each, indexOf, isString, attr, removeAttr } from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport { createSizeObserver, SizeObserverCallbackParams } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver, DOMObserver } from 'observers/domObserver';\r\nimport { LifecycleHub, LifecycleCheckOption, LifecycleUpdateHints } from 'lifecycles/lifecycleHub';\r\n\r\n//const hostSelector = `.${classNameHost}`;\r\n\r\n// TODO: observer textarea attrs if textarea\r\n// TODO: test _ignoreContentChange & _ignoreNestedTargetChange for content dom observer\r\n// TODO: test _ignoreTargetChange for target dom observer\r\n\r\n//const viewportSelector = `.${classNameViewport}`;\r\n//const contentSelector = `.${classNameContent}`;\r\nconst ignorePrefix = 'os-';\r\nconst viewportAttrsFromTarget = ['tabindex'];\r\nconst baseStyleChangingAttrsTextarea = ['wrap', 'cols', 'rows'];\r\nconst baseStyleChangingAttrs = ['id', 'class', 'style', 'open'];\r\n\r\nconst ignoreTargetChange = (target: Node, attrName: string, oldValue: string | null, newValue: string | null) => {\r\n  if (attrName === 'class' && oldValue && newValue) {\r\n    const diff = diffClass(oldValue, newValue);\r\n    return !!diff.find((addedOrRemovedClass) => addedOrRemovedClass.indexOf(ignorePrefix) !== 0);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const lifecycleHubOservers = (instance: LifecycleHub, updateLifecycles: (updateHints?: Partial<LifecycleUpdateHints> | null) => unknown) => {\r\n  let debounceTimeout: number | false | undefined;\r\n  let debounceMaxDelay: number | false | undefined;\r\n  let contentMutationObserver: DOMObserver | undefined;\r\n  const { _structureSetup } = instance;\r\n  const { _targetObj, _targetCtx } = _structureSetup;\r\n  const { _host, _viewport, _content } = _targetObj;\r\n  const { _isTextarea } = _targetCtx;\r\n  const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n  const contentMutationObserverAttr = _isTextarea ? baseStyleChangingAttrsTextarea : baseStyleChangingAttrs.concat(baseStyleChangingAttrsTextarea);\r\n  const updateLifecyclesWithDebouncedAdaptiveUpdateHints = debounce(updateLifecycles as (updateHints: Partial<LifecycleUpdateHints>) => any, {\r\n    _timeout: () => debounceTimeout,\r\n    _maxDelay: () => debounceMaxDelay,\r\n    _mergeParams(prev, curr) {\r\n      const { _sizeChanged: prevSizeChanged, _hostMutation: prevHostMutation, _contentMutation: prevContentMutation } = prev[0];\r\n      const { _sizeChanged: currSizeChanged, _hostMutation: currvHostMutation, _contentMutation: currContentMutation } = curr[0];\r\n      const merged: [Partial<LifecycleUpdateHints>] = [\r\n        {\r\n          _sizeChanged: prevSizeChanged || currSizeChanged,\r\n          _hostMutation: prevHostMutation || currvHostMutation,\r\n          _contentMutation: prevContentMutation || currContentMutation,\r\n        },\r\n      ];\r\n\r\n      return merged;\r\n    },\r\n  });\r\n\r\n  const updateViewportAttrsFromHost = (attributes?: string[]) => {\r\n    each(attributes || viewportAttrsFromTarget, (attribute) => {\r\n      if (indexOf(viewportAttrsFromTarget, attribute) > -1) {\r\n        const hostAttr = attr(_host, attribute);\r\n        if (isString(hostAttr)) {\r\n          attr(_viewport, attribute, hostAttr);\r\n        } else {\r\n          removeAttr(_viewport, attribute);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsic: CacheValues<boolean>) => {\r\n    updateLifecycles({\r\n      _heightIntrinsic: heightIntrinsic,\r\n    });\r\n  };\r\n  const onSizeChanged = ({ _sizeChanged, _directionIsRTLCache, _appear }: SizeObserverCallbackParams) => {\r\n    const updateFn = !_sizeChanged || _appear ? updateLifecycles : updateLifecyclesWithDebouncedAdaptiveUpdateHints;\r\n    updateFn({\r\n      _sizeChanged,\r\n      _directionIsRTL: _directionIsRTLCache,\r\n    });\r\n  };\r\n  const onContentMutation = (contentChangedTroughEvent: boolean) => {\r\n    // if contentChangedTroughEvent is true its already debounced\r\n    const updateFn = contentChangedTroughEvent ? updateLifecycles : updateLifecyclesWithDebouncedAdaptiveUpdateHints;\r\n    updateFn({\r\n      _contentMutation: true,\r\n    });\r\n  };\r\n  const onHostMutation = (targetChangedAttrs: string[], targetStyleChanged: boolean) => {\r\n    if (targetStyleChanged) {\r\n      updateLifecyclesWithDebouncedAdaptiveUpdateHints({\r\n        _hostMutation: true,\r\n      });\r\n    } else {\r\n      updateViewportAttrsFromHost(targetChangedAttrs);\r\n    }\r\n  };\r\n\r\n  const trinsicObserver = (_content || !_flexboxGlue) && createTrinsicObserver(_host, onTrinsicChanged);\r\n  const sizeObserver = createSizeObserver(_host, onSizeChanged, { _appear: true, _direction: !_nativeScrollbarStyling });\r\n  const hostMutationObserver = createDOMObserver(_host, false, onHostMutation, {\r\n    _styleChangingAttributes: baseStyleChangingAttrs,\r\n    _attributes: baseStyleChangingAttrs.concat(viewportAttrsFromTarget),\r\n    _ignoreTargetChange: ignoreTargetChange,\r\n  });\r\n\r\n  const updateOptions = (checkOption: LifecycleCheckOption) => {\r\n    const { _value: elementEvents, _changed: elementEventsChanged } = checkOption<Array<[string, string]> | null>('updating.elementEvents');\r\n    const { _value: attributes, _changed: attributesChanged } = checkOption<string[] | null>('updating.attributes');\r\n    const { _value: debounce, _changed: debounceChanged } = checkOption<Array<number> | number | null>('updating.debounce');\r\n    const updateContentMutationObserver = elementEventsChanged || attributesChanged;\r\n\r\n    if (updateContentMutationObserver) {\r\n      if (contentMutationObserver) {\r\n        contentMutationObserver._update();\r\n        contentMutationObserver._destroy();\r\n      }\r\n      contentMutationObserver = createDOMObserver(_content || _viewport, true, onContentMutation, {\r\n        _styleChangingAttributes: contentMutationObserverAttr.concat(attributes || []),\r\n        _attributes: contentMutationObserverAttr.concat(attributes || []),\r\n        _eventContentChange: elementEvents,\r\n        _ignoreNestedTargetChange: ignoreTargetChange,\r\n        //_nestedTargetSelector: hostSelector,\r\n        /*\r\n        _ignoreContentChange: (mutation, isNestedTarget) => {\r\n          const { target, attributeName } = mutation;\r\n          return isNestedTarget\r\n            ? false\r\n            : attributeName\r\n            ? liesBetween(target as Element, hostSelector, viewportSelector) || liesBetween(target as Element, hostSelector, contentSelector)\r\n            : false;\r\n        },\r\n        */\r\n      });\r\n    }\r\n\r\n    if (debounceChanged) {\r\n      updateLifecyclesWithDebouncedAdaptiveUpdateHints._flush();\r\n      if (isArray(debounce)) {\r\n        const timeout = debounce[0];\r\n        const maxWait = debounce[1];\r\n        debounceTimeout = isNumber(timeout) ? timeout : false;\r\n        debounceMaxDelay = isNumber(maxWait) ? maxWait : false;\r\n      } else if (isNumber(debounce)) {\r\n        debounceTimeout = debounce;\r\n        debounceMaxDelay = false;\r\n      } else {\r\n        debounceTimeout = false;\r\n        debounceMaxDelay = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  updateViewportAttrsFromHost();\r\n\r\n  return {\r\n    _trinsicObserver: trinsicObserver,\r\n    _sizeObserver: sizeObserver,\r\n    _updateObserverOptions: updateOptions,\r\n    _destroy() {\r\n      contentMutationObserver && contentMutationObserver._destroy();\r\n      trinsicObserver && trinsicObserver._destroy();\r\n      sizeObserver._destroy();\r\n      hostMutationObserver._destroy();\r\n    },\r\n  };\r\n};\r\n","import { style } from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the trinsic behavior of the content element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createTrinsicLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup } = lifecycleHub;\r\n  const { _content } = _structureSetup._targetObj;\r\n\r\n  return (updateHints) => {\r\n    const { _heightIntrinsic } = updateHints;\r\n    const { _value: heightIntrinsic, _changed: heightIntrinsicChanged } = _heightIntrinsic;\r\n\r\n    if (heightIntrinsicChanged) {\r\n      style(_content, {\r\n        height: heightIntrinsic ? '' : '100%',\r\n        display: heightIntrinsic ? '' : 'inline',\r\n      });\r\n    }\r\n\r\n    return {\r\n      _sizeChanged: heightIntrinsicChanged,\r\n      _contentMutation: heightIntrinsicChanged,\r\n    };\r\n  };\r\n};\r\n","import { createCache, topRightBottomLeft, equalTRBL, style, TRBL } from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\nimport { StyleObject } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the padding styling of the padding and viewport element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createPaddingLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup, _setLifecycleCommunication } = lifecycleHub;\r\n  const { _host, _padding, _viewport } = _structureSetup._targetObj;\r\n  const { _update: updatePaddingCache, _current: currentPaddingCache } = createCache<TRBL>(topRightBottomLeft.bind(0, _host, 'padding'), {\r\n    _equal: equalTRBL,\r\n    _initialValue: topRightBottomLeft(),\r\n  });\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    let { _value: padding, _changed: paddingChanged } = currentPaddingCache(force);\r\n    const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n    const { _sizeChanged, _directionIsRTL, _contentMutation } = updateHints;\r\n    const { _value: directionIsRTL, _changed: directionChanged } = _directionIsRTL;\r\n    const { _value: paddingAbsolute, _changed: paddingAbsoluteChanged } = checkOption('paddingAbsolute');\r\n    const contentMutation = !_flexboxGlue && _contentMutation;\r\n\r\n    if (_sizeChanged || paddingChanged || contentMutation) {\r\n      ({ _value: padding, _changed: paddingChanged } = updatePaddingCache(force));\r\n    }\r\n\r\n    const paddingStyleChanged = paddingAbsoluteChanged || directionChanged || paddingChanged;\r\n\r\n    if (paddingStyleChanged) {\r\n      // if there is no padding element and no scrollbar styling, paddingAbsolute isn't supported\r\n      const paddingRelative = !paddingAbsolute || (!_padding && !_nativeScrollbarStyling);\r\n      const paddingHorizontal = padding!.r + padding!.l;\r\n      const paddingVertical = padding!.t + padding!.b;\r\n\r\n      const paddingStyle: StyleObject = {\r\n        marginRight: paddingRelative && !directionIsRTL ? -paddingHorizontal : 0,\r\n        marginBottom: paddingRelative ? -paddingVertical : 0,\r\n        marginLeft: paddingRelative && directionIsRTL ? -paddingHorizontal : 0,\r\n        top: paddingRelative ? -padding!.t : 0,\r\n        right: paddingRelative ? (directionIsRTL ? -padding!.r : 'auto') : 0,\r\n        left: paddingRelative ? (directionIsRTL ? 'auto' : -padding!.l) : 0,\r\n        width: paddingRelative ? `calc(100% + ${paddingHorizontal}px)` : '',\r\n      };\r\n      const viewportStyle: StyleObject = {\r\n        paddingTop: paddingRelative ? padding!.t : 0,\r\n        paddingRight: paddingRelative ? padding!.r : 0,\r\n        paddingBottom: paddingRelative ? padding!.b : 0,\r\n        paddingLeft: paddingRelative ? padding!.l : 0,\r\n      };\r\n\r\n      // if there is no padding element apply the style to the viewport element instead\r\n      style(_padding || _viewport, paddingStyle);\r\n      style(_viewport, viewportStyle);\r\n\r\n      _setLifecycleCommunication({\r\n        _paddingInfo: {\r\n          _absolute: !paddingRelative,\r\n          _padding: padding!,\r\n        },\r\n        _viewportPaddingStyle: _padding\r\n          ? viewportStyle\r\n          : {\r\n              ...paddingStyle,\r\n              ...viewportStyle,\r\n            },\r\n      });\r\n    }\r\n\r\n    return {\r\n      _paddingStyleChanged: paddingStyleChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  keys,\r\n  attr,\r\n  WH,\r\n  XY,\r\n  style,\r\n  scrollSize,\r\n  CacheValues,\r\n  equalWH,\r\n  addClass,\r\n  removeClass,\r\n  clientSize,\r\n  offsetSize,\r\n  getBoundingClientRect,\r\n  noop,\r\n  each,\r\n} from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverflowBehavior } from 'options';\r\nimport { StyleObject } from 'typings';\r\nimport { classNameViewportArrange, classNameViewportScrollbarStyling } from 'classnames';\r\n\r\ninterface OverflowAmountCacheContext {\r\n  _viewportScrollSize: WH<number>;\r\n  _viewportClientSize: WH<number>;\r\n  _viewportSizeFraction: WH<number>;\r\n}\r\n\r\ninterface ViewportOverflowState {\r\n  _scrollbarsHideOffset: XY<number>;\r\n  _scrollbarsHideOffsetArrange: XY<boolean>;\r\n  _overflowScroll: XY<boolean>;\r\n}\r\n\r\ninterface UndoViewportArrangeResult {\r\n  _redoViewportArrange: () => void;\r\n  _viewportOverflowState?: ViewportOverflowState;\r\n}\r\n\r\ninterface OverflowOption {\r\n  x: OverflowBehavior;\r\n  y: OverflowBehavior;\r\n}\r\n\r\nconst { max, abs, round } = Math;\r\nconst overlaidScrollbarsHideOffset = 42;\r\nconst whCacheOptions = {\r\n  _equal: equalWH,\r\n  _initialValue: { w: 0, h: 0 },\r\n};\r\nconst sizeFraction = (elm: HTMLElement): WH<number> => {\r\n  const viewportOffsetSize = offsetSize(elm);\r\n  const viewportRect = getBoundingClientRect(elm);\r\n  return {\r\n    w: viewportRect.width - viewportOffsetSize.w,\r\n    h: viewportRect.height - viewportOffsetSize.h,\r\n  };\r\n};\r\nconst fractionalPixelRatioTollerance = () => (window.devicePixelRatio % 1 === 0 ? 0 : 1);\r\nconst setAxisOverflowStyle = (horizontal: boolean, overflowAmount: number, behavior: OverflowBehavior, styleObj: StyleObject) => {\r\n  const overflowKey: keyof StyleObject = horizontal ? 'overflowX' : 'overflowY';\r\n  const behaviorIsVisible = behavior.indexOf('visible') === 0;\r\n  const behaviorIsVisibleHidden = behavior === 'visible-hidden';\r\n  const behaviorIsScroll = behavior === 'scroll';\r\n  const hasOverflow = overflowAmount > 0;\r\n\r\n  if (behaviorIsVisible) {\r\n    styleObj[overflowKey] = 'visible';\r\n  }\r\n  if (behaviorIsScroll && hasOverflow) {\r\n    styleObj[overflowKey] = behavior;\r\n  }\r\n\r\n  return {\r\n    _visible: behaviorIsVisible,\r\n    _behavior: behaviorIsVisibleHidden ? 'hidden' : 'scroll',\r\n  };\r\n};\r\n\r\n/**\r\n * Lifecycle with the responsibility to set the correct overflow and scrollbar hiding styles of the viewport element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createOverflowLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup, _doViewportArrange, _getLifecycleCommunication, _setLifecycleCommunication } = lifecycleHub;\r\n  const { _host, _viewport, _viewportArrange } = _structureSetup._targetObj;\r\n  const { _update: updateViewportSizeFraction, _current: getCurrentViewportSizeFraction } = createCache<WH<number>>(\r\n    sizeFraction.bind(0, _viewport),\r\n    whCacheOptions\r\n  );\r\n  const { _update: updateViewportScrollSizeCache, _current: getCurrentViewportScrollSizeCache } = createCache<WH<number>>(\r\n    scrollSize.bind(0, _viewport),\r\n    whCacheOptions\r\n  );\r\n  const { _update: updateOverflowAmountCache, _current: getCurrentOverflowAmountCache } = createCache<WH<number>, OverflowAmountCacheContext>(\r\n    ({ _viewportScrollSize, _viewportClientSize, _viewportSizeFraction }) => ({\r\n      w: max(0, round(max(0, _viewportScrollSize.w - _viewportClientSize.w) - (fractionalPixelRatioTollerance() || max(0, _viewportSizeFraction.w)))),\r\n      h: max(0, round(max(0, _viewportScrollSize.h - _viewportClientSize.h) - (fractionalPixelRatioTollerance() || max(0, _viewportSizeFraction.h)))),\r\n    }),\r\n    whCacheOptions\r\n  );\r\n\r\n  /**\r\n   * Applies a fixed height to the viewport so it can't overflow or underflow the host element.\r\n   * @param viewportOverflowState The current overflow state.\r\n   * @param heightIntrinsic Whether the host height is intrinsic or not.\r\n   */\r\n  const fixFlexboxGlue = (viewportOverflowState: ViewportOverflowState, heightIntrinsic: boolean) => {\r\n    style(_viewport, {\r\n      height: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      const { _absolute: paddingAbsolute, _padding: padding } = _getLifecycleCommunication()._paddingInfo;\r\n      const { _overflowScroll, _scrollbarsHideOffset } = viewportOverflowState;\r\n      const hostSizeFraction = sizeFraction(_host);\r\n      const hostClientSize = clientSize(_host);\r\n      // padding subtraction is only needed if padding is absolute or if viewport is content-box\r\n      const paddingVertical = paddingAbsolute || style(_viewport, 'boxSizing') === 'content-box' ? padding.b + padding.t : 0;\r\n      const fractionalClientHeight = hostClientSize.h + (abs(hostSizeFraction.h) < 1 ? hostSizeFraction.h : 0);\r\n\r\n      style(_viewport, {\r\n        height: fractionalClientHeight + (_overflowScroll.x ? _scrollbarsHideOffset.x : 0) - paddingVertical,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the current overflow state of the viewport.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param viewportStyleObj The viewport style object where the overflow scroll property can be read of, or undefined if shall be determined.\r\n   * @returns A object which contains informations about the current overflow state.\r\n   */\r\n  const getViewportOverflowState = (showNativeOverlaidScrollbars: boolean, viewportStyleObj?: StyleObject): ViewportOverflowState => {\r\n    const { _nativeScrollbarSize, _nativeScrollbarIsOverlaid, _nativeScrollbarStyling } = getEnvironment();\r\n    const { x: overlaidX, y: overlaidY } = _nativeScrollbarIsOverlaid;\r\n    const determineOverflow = !viewportStyleObj;\r\n    const arrangeHideOffset = !_nativeScrollbarStyling && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const styleObj = determineOverflow ? style(_viewport, ['overflowX', 'overflowY']) : viewportStyleObj;\r\n    const scroll = {\r\n      x: styleObj!.overflowX === 'scroll',\r\n      y: styleObj!.overflowY === 'scroll',\r\n    };\r\n    const scrollbarsHideOffset = {\r\n      x: scroll.x && !_nativeScrollbarStyling ? (overlaidX ? arrangeHideOffset : _nativeScrollbarSize.x) : 0,\r\n      y: scroll.y && !_nativeScrollbarStyling ? (overlaidY ? arrangeHideOffset : _nativeScrollbarSize.y) : 0,\r\n    };\r\n\r\n    return {\r\n      _overflowScroll: scroll,\r\n      _scrollbarsHideOffsetArrange: {\r\n        x: overlaidX && !!arrangeHideOffset,\r\n        y: overlaidY && !!arrangeHideOffset,\r\n      },\r\n      _scrollbarsHideOffset: scrollbarsHideOffset,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Sets the overflow property of the viewport and calculates the a overflow state according to the new parameters.\r\n   * @param showNativeOverlaidScrollbars Whether to show natively overlaid scrollbars.\r\n   * @param overflowAmount The overflow amount.\r\n   * @param overflow The overflow behavior according to the options.\r\n   * @param viewportStyleObj The viewport style object to which the overflow style shall be applied.\r\n   * @returns A object which represents the newly set overflow state.\r\n   */\r\n  const setViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    overflowAmount: WH<number>,\r\n    overflow: OverflowOption,\r\n    viewportStyleObj: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const { _visible: xVisible, _behavior: xVisibleBehavior } = setAxisOverflowStyle(true, overflowAmount!.w, overflow.x, viewportStyleObj);\r\n    const { _visible: yVisible, _behavior: yVisibleBehavior } = setAxisOverflowStyle(false, overflowAmount!.h, overflow.y, viewportStyleObj);\r\n\r\n    if (xVisible && !yVisible) {\r\n      viewportStyleObj.overflowX = xVisibleBehavior;\r\n    }\r\n    if (yVisible && !xVisible) {\r\n      viewportStyleObj.overflowY = yVisibleBehavior;\r\n    }\r\n\r\n    return getViewportOverflowState(showNativeOverlaidScrollbars, viewportStyleObj);\r\n  };\r\n\r\n  /**\r\n   * Sets the styles of the viewport arrange element.\r\n   * @param viewportOverflowState The viewport overflow state according to which the scrollbars shall be hidden.\r\n   * @param viewportScrollSize The content scroll size.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @returns A boolean which indicates whether the viewport arrange element was adjusted.\r\n   */\r\n  const arrangeViewport = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    viewportScrollSize: WH<number>,\r\n    viewportSizeFraction: WH<number>,\r\n    directionIsRTL: boolean\r\n  ) => {\r\n    if (_doViewportArrange) {\r\n      const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n      const { _viewportPaddingStyle: viewportPaddingStyle } = _getLifecycleCommunication();\r\n      const viewportArrangeHorizontalPaddingKey: keyof StyleObject = directionIsRTL ? 'paddingRight' : 'paddingLeft';\r\n      const viewportArrangeHorizontalPaddingValue = viewportPaddingStyle[viewportArrangeHorizontalPaddingKey] as number;\r\n      const viewportArrangeVerticalPaddingValue = viewportPaddingStyle.paddingTop as number;\r\n      const fractionalContentWidth = viewportScrollSize.w + (abs(viewportSizeFraction.w) < 1 ? viewportSizeFraction.w : 0);\r\n      const fractionalContenHeight = viewportScrollSize.h + (abs(viewportSizeFraction.h) < 1 ? viewportSizeFraction.h : 0);\r\n      const arrangeSize = {\r\n        w: hideOffsetY && arrangeY ? `${hideOffsetY + fractionalContentWidth - viewportArrangeHorizontalPaddingValue}px` : '',\r\n        h: hideOffsetX && arrangeX ? `${hideOffsetX + fractionalContenHeight - viewportArrangeVerticalPaddingValue}px` : '',\r\n      };\r\n\r\n      // adjust content arrange / before element\r\n      if (_viewportArrange) {\r\n        const { sheet } = _viewportArrange;\r\n        if (sheet) {\r\n          const { cssRules } = sheet;\r\n          if (cssRules) {\r\n            if (!cssRules.length) {\r\n              sheet.insertRule(`#${attr(_viewportArrange, 'id')} + .${classNameViewportArrange}::before {}`, 0);\r\n            }\r\n\r\n            // @ts-ignore\r\n            const ruleStyle = cssRules[0].style;\r\n\r\n            ruleStyle.width = arrangeSize.w;\r\n            ruleStyle.height = arrangeSize.h;\r\n          }\r\n        }\r\n      } else {\r\n        style<'--os-vaw' | '--os-vah'>(_viewport, {\r\n          '--os-vaw': arrangeSize.w,\r\n          '--os-vah': arrangeSize.h,\r\n        });\r\n      }\r\n    }\r\n\r\n    return _doViewportArrange;\r\n  };\r\n\r\n  /**\r\n   * Hides the native scrollbars according to the passed parameters.\r\n   * @param viewportOverflowState The viewport overflow state.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportArrange Whether special styles related to the viewport arrange strategy shall be applied.\r\n   * @param viewportStyleObj The viewport style object to which the needed styles shall be applied.\r\n   */\r\n  const hideNativeScrollbars = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    directionIsRTL: boolean,\r\n    viewportArrange: boolean,\r\n    viewportStyleObj: StyleObject\r\n  ) => {\r\n    const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n    const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n    const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n    const { _viewportPaddingStyle: viewportPaddingStyle } = _getLifecycleCommunication();\r\n    const horizontalMarginKey: keyof StyleObject = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const viewportHorizontalPaddingKey: keyof StyleObject = directionIsRTL ? 'paddingLeft' : 'paddingRight';\r\n    const horizontalMarginValue = viewportPaddingStyle[horizontalMarginKey] as number;\r\n    const verticalMarginValue = viewportPaddingStyle.marginBottom as number;\r\n    const horizontalPaddingValue = viewportPaddingStyle[viewportHorizontalPaddingKey] as number;\r\n    const verticalPaddingValue = viewportPaddingStyle.paddingBottom as number;\r\n\r\n    // horizontal\r\n    viewportStyleObj.width = `calc(100% + ${hideOffsetY + horizontalMarginValue * -1}px)`;\r\n    viewportStyleObj[horizontalMarginKey] = -hideOffsetY + horizontalMarginValue;\r\n\r\n    // vertical\r\n    viewportStyleObj.marginBottom = -hideOffsetX + verticalMarginValue;\r\n\r\n    // viewport arrange additional styles\r\n    if (viewportArrange) {\r\n      viewportStyleObj[viewportHorizontalPaddingKey] = horizontalPaddingValue + (arrangeY ? hideOffsetY : 0);\r\n      viewportStyleObj.paddingBottom = verticalPaddingValue + (arrangeX ? hideOffsetX : 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes all styles applied because of the viewport arrange strategy.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportOverflowState The currentviewport overflow state or undefined if it has to be determined.\r\n   * @returns A object with a function which applies all the removed styles and the determined viewport vverflow state.\r\n   */\r\n  const undoViewportArrange = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    directionIsRTL: boolean,\r\n    viewportOverflowState?: ViewportOverflowState\r\n  ): UndoViewportArrangeResult => {\r\n    if (_doViewportArrange) {\r\n      const finalViewportOverflowState = viewportOverflowState || getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      const { _viewportPaddingStyle: viewportPaddingStyle } = _getLifecycleCommunication();\r\n      const { _flexboxGlue } = getEnvironment();\r\n      const { _scrollbarsHideOffsetArrange } = finalViewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const finalPaddingStyle: StyleObject = {};\r\n      const assignProps = (props: string) =>\r\n        each(props.split(' '), (prop) => {\r\n          finalPaddingStyle[prop] = viewportPaddingStyle[prop];\r\n        });\r\n\r\n      if (!_flexboxGlue) {\r\n        finalPaddingStyle.height = '';\r\n      }\r\n\r\n      if (arrangeX) {\r\n        assignProps('marginBottom paddingTop paddingBottom');\r\n      }\r\n\r\n      if (arrangeY) {\r\n        assignProps('marginLeft marginRight paddingLeft paddingRight');\r\n      }\r\n\r\n      const prevStyle = style(_viewport, keys(finalPaddingStyle));\r\n      removeClass(_viewport, classNameViewportArrange);\r\n      style(_viewport, finalPaddingStyle);\r\n\r\n      return {\r\n        _redoViewportArrange: () => {\r\n          hideNativeScrollbars(finalViewportOverflowState, directionIsRTL, _doViewportArrange, prevStyle);\r\n          style(_viewport, prevStyle);\r\n          addClass(_viewport, classNameViewportArrange);\r\n        },\r\n        _viewportOverflowState: finalViewportOverflowState,\r\n      };\r\n    }\r\n    return {\r\n      _redoViewportArrange: noop,\r\n    };\r\n  };\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    const { _directionIsRTL, _heightIntrinsic, _sizeChanged, _hostMutation, _contentMutation, _paddingStyleChanged } = updateHints;\r\n    const { _flexboxGlue, _nativeScrollbarStyling, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n    const { _value: heightIntrinsic, _changed: heightIntrinsicChanged } = _heightIntrinsic;\r\n    const { _value: directionIsRTL, _changed: directionChanged } = _directionIsRTL;\r\n    const { _value: showNativeOverlaidScrollbarsOption, _changed: showNativeOverlaidScrollbarsChanged } = checkOption<boolean>(\r\n      'nativeScrollbarsOverlaid.show'\r\n    );\r\n    const showNativeOverlaidScrollbars = showNativeOverlaidScrollbarsOption && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\r\n    const adjustFlexboxGlue =\r\n      !_flexboxGlue && (_sizeChanged || _contentMutation || _hostMutation || showNativeOverlaidScrollbarsChanged || heightIntrinsicChanged);\r\n    let viewportSizeFractionCache: CacheValues<WH<number>> = getCurrentViewportSizeFraction(force);\r\n    let viewportScrollSizeCache: CacheValues<WH<number>> = getCurrentViewportScrollSizeCache(force);\r\n    let overflowAmuntCache: CacheValues<WH<number>> = getCurrentOverflowAmountCache(force);\r\n    let preMeasureViewportOverflowState: ViewportOverflowState | undefined;\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      if (showNativeOverlaidScrollbars) {\r\n        removeClass(_viewport, classNameViewportScrollbarStyling);\r\n      } else {\r\n        addClass(_viewport, classNameViewportScrollbarStyling);\r\n      }\r\n    }\r\n\r\n    if (adjustFlexboxGlue) {\r\n      preMeasureViewportOverflowState = getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      fixFlexboxGlue(preMeasureViewportOverflowState, !!heightIntrinsic);\r\n    }\r\n\r\n    if (_sizeChanged || _paddingStyleChanged || _contentMutation || showNativeOverlaidScrollbarsChanged || directionChanged) {\r\n      const { _redoViewportArrange, _viewportOverflowState: undoViewportArrangeOverflowState } = undoViewportArrange(\r\n        showNativeOverlaidScrollbars,\r\n        directionIsRTL!,\r\n        preMeasureViewportOverflowState\r\n      );\r\n      const { _value: viewportSizeFraction, _changed: viewportSizeFractionCahnged } = (viewportSizeFractionCache = updateViewportSizeFraction(force));\r\n      const { _value: viewportScrollSize, _changed: viewportScrollSizeChanged } = (viewportScrollSizeCache = updateViewportScrollSizeCache(force));\r\n      const viewportContentSize = clientSize(_viewport);\r\n      let arrangedViewportScrollSize = viewportScrollSize!;\r\n      let arrangedViewportClientSize = viewportContentSize;\r\n\r\n      _redoViewportArrange();\r\n\r\n      // if re measure is required (only required if content arrange strategy is used)\r\n      if (\r\n        (viewportScrollSizeChanged || viewportSizeFractionCahnged || showNativeOverlaidScrollbarsChanged) &&\r\n        undoViewportArrangeOverflowState &&\r\n        !showNativeOverlaidScrollbars &&\r\n        arrangeViewport(undoViewportArrangeOverflowState, viewportScrollSize!, viewportSizeFraction!, directionIsRTL!)\r\n      ) {\r\n        arrangedViewportClientSize = clientSize(_viewport);\r\n        arrangedViewportScrollSize = scrollSize(_viewport);\r\n      }\r\n\r\n      overflowAmuntCache = updateOverflowAmountCache(force, {\r\n        _viewportSizeFraction: viewportSizeFraction!,\r\n        _viewportScrollSize: {\r\n          w: max(viewportScrollSize!.w, arrangedViewportScrollSize.w),\r\n          h: max(viewportScrollSize!.h, arrangedViewportScrollSize.h),\r\n        },\r\n        _viewportClientSize: {\r\n          w: arrangedViewportClientSize.w + max(0, viewportContentSize.w - viewportScrollSize!.w),\r\n          h: arrangedViewportClientSize.h + max(0, viewportContentSize.h - viewportScrollSize!.h),\r\n        },\r\n      });\r\n    }\r\n\r\n    const { _value: viewportSizeFraction, _changed: viewportSizeFractionChanged } = viewportSizeFractionCache;\r\n    const { _value: viewportScrollSize, _changed: viewportScrollSizeChanged } = viewportScrollSizeCache;\r\n    const { _value: overflowAmount, _changed: overflowAmountChanged } = overflowAmuntCache;\r\n    const { _value: overflow, _changed: overflowChanged } = checkOption<OverflowOption>('overflow');\r\n\r\n    if (\r\n      _paddingStyleChanged ||\r\n      viewportSizeFractionChanged ||\r\n      viewportScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      directionChanged ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: StyleObject = {\r\n        marginRight: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n        width: '',\r\n        overflowY: '',\r\n        overflowX: '',\r\n      };\r\n\r\n      const viewportOverflowState = setViewportOverflowState(showNativeOverlaidScrollbars, overflowAmount!, overflow, viewportStyle);\r\n      const viewportArranged = arrangeViewport(viewportOverflowState, viewportScrollSize!, viewportSizeFraction!, directionIsRTL!);\r\n      hideNativeScrollbars(viewportOverflowState, directionIsRTL!, viewportArranged, viewportStyle);\r\n\r\n      if (adjustFlexboxGlue) {\r\n        fixFlexboxGlue(viewportOverflowState, !!heightIntrinsic);\r\n      }\r\n\r\n      // TODO: hide host overflow if scroll x or y and no padding element there\r\n      // TODO: Test without content\r\n      // TODO: Test without padding\r\n      // TODO: overflow: visible on padding / host if overflow visible on both axis\r\n\r\n      style(_viewport, viewportStyle);\r\n\r\n      _setLifecycleCommunication({\r\n        _viewportOverflowScroll: viewportOverflowState._overflowScroll,\r\n        _viewportOverflowAmount: overflowAmount,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { XY, WH, TRBL, CacheValues, PartialOptions, each, hasOwnProperty, isNumber, scrollLeft, scrollTop, assignDeep } from 'support';\r\nimport { OSOptions } from 'options';\r\nimport { getEnvironment } from 'environment';\r\nimport { StructureSetup } from 'setups/structureSetup';\r\nimport { lifecycleHubOservers } from 'lifecycles/lifecycleHubObservers';\r\nimport { createTrinsicLifecycle } from 'lifecycles/trinsicLifecycle';\r\nimport { createPaddingLifecycle } from 'lifecycles/paddingLifecycle';\r\nimport { createOverflowLifecycle } from 'lifecycles/overflowLifecycle';\r\nimport { StyleObject } from 'typings';\r\n\r\nexport type LifecycleCheckOption = <T>(path: string) => LifecycleOptionInfo<T>;\r\n\r\nexport type Lifecycle = (\r\n  updateHints: LifecycleUpdateHints,\r\n  checkOption: LifecycleCheckOption,\r\n  force: boolean\r\n) => Partial<LifecycleAdaptiveUpdateHints> | void;\r\n\r\nexport interface LifecycleOptionInfo<T> {\r\n  readonly _value: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport interface LifecycleCommunication {\r\n  _paddingInfo: {\r\n    _absolute: boolean;\r\n    _padding: TRBL;\r\n  };\r\n  _viewportPaddingStyle: StyleObject;\r\n  _viewportOverflowScroll: XY<boolean>;\r\n  _viewportOverflowAmount: WH<number>;\r\n}\r\n\r\nexport interface LifecycleAdaptiveUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n  _paddingStyleChanged: boolean;\r\n}\r\n\r\nexport interface LifecycleUpdateHints extends LifecycleAdaptiveUpdateHints {\r\n  _directionIsRTL: CacheValues<boolean>;\r\n  _heightIntrinsic: CacheValues<boolean>;\r\n}\r\n\r\nexport interface LifecycleHubState {\r\n  _overflowAmount: WH<number>;\r\n}\r\n\r\nexport interface LifecycleHubInstance {\r\n  _update(changedOptions?: PartialOptions<OSOptions> | null, force?: boolean): void;\r\n  _state(): LifecycleHubState;\r\n  _destroy(): void;\r\n}\r\n\r\nexport interface LifecycleHub {\r\n  _options: OSOptions;\r\n  _structureSetup: StructureSetup;\r\n  // whether the \"viewport arrange\" strategy must be used (true if no native scrollbar hiding and scrollbars are overlaid)\r\n  _doViewportArrange: boolean;\r\n  _getLifecycleCommunication(): LifecycleCommunication;\r\n  _setLifecycleCommunication(newLifecycleCommunication?: Partial<LifecycleCommunication>): void;\r\n}\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj ? path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj) : undefined;\r\n\r\nconst booleanCacheValuesFallback: CacheValues<boolean> = {\r\n  _value: false,\r\n  _previous: false,\r\n  _changed: false,\r\n};\r\nconst lifecycleCommunicationFallback: LifecycleCommunication = {\r\n  _paddingInfo: {\r\n    _absolute: false,\r\n    _padding: {\r\n      t: 0,\r\n      r: 0,\r\n      b: 0,\r\n      l: 0,\r\n    },\r\n  },\r\n  _viewportOverflowScroll: {\r\n    x: false,\r\n    y: false,\r\n  },\r\n  _viewportOverflowAmount: {\r\n    w: 0,\r\n    h: 0,\r\n  },\r\n  _viewportPaddingStyle: {\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n    marginLeft: 0,\r\n    paddingTop: 0,\r\n    paddingRight: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 0,\r\n  },\r\n};\r\n\r\nexport const createLifecycleHub = (options: OSOptions, structureSetup: StructureSetup): LifecycleHubInstance => {\r\n  let lifecycleCommunication = lifecycleCommunicationFallback;\r\n  const { _viewport } = structureSetup._targetObj;\r\n  const {\r\n    _nativeScrollbarStyling,\r\n    _nativeScrollbarIsOverlaid,\r\n    _flexboxGlue,\r\n    _addListener: addEnvironmentListener,\r\n    _removeListener: removeEnvironmentListener,\r\n  } = getEnvironment();\r\n  const doViewportArrange = !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const instance: LifecycleHub = {\r\n    _options: options,\r\n    _structureSetup: structureSetup,\r\n    _doViewportArrange: doViewportArrange,\r\n    _getLifecycleCommunication: () => lifecycleCommunication,\r\n    _setLifecycleCommunication(newLifecycleCommunication) {\r\n      lifecycleCommunication = assignDeep({}, lifecycleCommunication, newLifecycleCommunication);\r\n    },\r\n  };\r\n  const lifecycles: Lifecycle[] = [createTrinsicLifecycle(instance), createPaddingLifecycle(instance), createOverflowLifecycle(instance)];\r\n\r\n  const updateLifecycles = (updateHints?: Partial<LifecycleUpdateHints> | null, changedOptions?: Partial<OSOptions> | null, force?: boolean) => {\r\n    let {\r\n      _directionIsRTL,\r\n      _heightIntrinsic,\r\n      _sizeChanged = force || false,\r\n      _hostMutation = force || false,\r\n      _contentMutation = force || false,\r\n      _paddingStyleChanged = force || false,\r\n    } = updateHints || {};\r\n\r\n    const finalDirectionIsRTL =\r\n      _directionIsRTL || (_sizeObserver ? _sizeObserver._getCurrentCacheValues(force)._directionIsRTL : booleanCacheValuesFallback);\r\n    const finalHeightIntrinsic =\r\n      _heightIntrinsic || (_trinsicObserver ? _trinsicObserver._getCurrentCacheValues(force)._heightIntrinsic : booleanCacheValuesFallback);\r\n    const checkOption: LifecycleCheckOption = (path) => ({\r\n      _value: getPropByPath(options, path),\r\n      _changed: force || getPropByPath(changedOptions, path) !== undefined,\r\n    });\r\n    const adjustScrollOffset = doViewportArrange || !_flexboxGlue;\r\n    const scrollOffsetX = adjustScrollOffset && scrollLeft(_viewport);\r\n    const scrollOffsetY = adjustScrollOffset && scrollTop(_viewport);\r\n\r\n    // place before updating lifecycles because of possible flushing of debounce\r\n    if (_updateObserverOptions) {\r\n      _updateObserverOptions(checkOption);\r\n    }\r\n\r\n    each(lifecycles, (lifecycle) => {\r\n      const {\r\n        _sizeChanged: adaptiveSizeChanged,\r\n        _hostMutation: adaptiveHostMutation,\r\n        _contentMutation: adaptiveContentMutation,\r\n        _paddingStyleChanged: adaptivePaddingStyleChanged,\r\n      } =\r\n        lifecycle(\r\n          {\r\n            _directionIsRTL: finalDirectionIsRTL,\r\n            _heightIntrinsic: finalHeightIntrinsic,\r\n            _sizeChanged,\r\n            _hostMutation,\r\n            _contentMutation,\r\n            _paddingStyleChanged,\r\n          },\r\n          checkOption,\r\n          !!force\r\n        ) || {};\r\n\r\n      _sizeChanged = adaptiveSizeChanged || _sizeChanged;\r\n      _hostMutation = adaptiveHostMutation || _hostMutation;\r\n      _contentMutation = adaptiveContentMutation || _contentMutation;\r\n      _paddingStyleChanged = adaptivePaddingStyleChanged || _paddingStyleChanged;\r\n    });\r\n\r\n    if (isNumber(scrollOffsetX)) {\r\n      scrollLeft(_viewport, scrollOffsetX);\r\n    }\r\n    if (isNumber(scrollOffsetY)) {\r\n      scrollTop(_viewport, scrollOffsetY);\r\n    }\r\n\r\n    if (options.callbacks.onUpdated) {\r\n      options.callbacks.onUpdated();\r\n    }\r\n  };\r\n  const { _sizeObserver, _trinsicObserver, _updateObserverOptions, _destroy: destroyObservers } = lifecycleHubOservers(instance, updateLifecycles);\r\n\r\n  const update = (changedOptions?: Partial<OSOptions> | null, force?: boolean) => updateLifecycles(null, changedOptions, force);\r\n  const envUpdateListener = update.bind(null, null, true);\r\n  addEnvironmentListener(envUpdateListener);\r\n\r\n  console.log(getEnvironment());\r\n\r\n  return {\r\n    _update: update,\r\n    _state: () => ({\r\n      _overflowAmount: lifecycleCommunication._viewportOverflowAmount,\r\n    }),\r\n    _destroy() {\r\n      destroyObservers();\r\n      removeEnvironmentListener(envUpdateListener);\r\n    },\r\n  };\r\n};\r\n","import { OSTarget, OSTargetObject } from 'typings';\r\nimport { PartialOptions, validateOptions, assignDeep, isEmptyObject } from 'support';\r\nimport { createStructureSetup, StructureSetup } from 'setups/structureSetup';\r\nimport { createLifecycleHub } from 'lifecycles/lifecycleHub';\r\nimport { OSOptions, optionsTemplate } from 'options';\r\nimport { getEnvironment } from 'environment';\r\n\r\nexport interface OverlayScrollbarsStatic {\r\n  (target: OSTarget | OSTargetObject, options?: PartialOptions<OSOptions>, extensions?: any): OverlayScrollbars;\r\n}\r\n\r\nexport interface OverlayScrollbars {\r\n  options(): OSOptions;\r\n  options(newOptions?: PartialOptions<OSOptions>): OSOptions;\r\n\r\n  update(force?: boolean): void;\r\n\r\n  state(): any;\r\n}\r\n\r\nexport const OverlayScrollbars: OverlayScrollbarsStatic = (\r\n  target: OSTarget | OSTargetObject,\r\n  options?: PartialOptions<OSOptions>,\r\n  extensions?: any\r\n): OverlayScrollbars => {\r\n  const { _getDefaultOptions } = getEnvironment();\r\n  const currentOptions: OSOptions = assignDeep(\r\n    {},\r\n    _getDefaultOptions(),\r\n    validateOptions(options || ({} as PartialOptions<OSOptions>), optionsTemplate, null, true)._validated\r\n  );\r\n  const structureSetup: StructureSetup = createStructureSetup(target);\r\n  const lifecycleHub = createLifecycleHub(currentOptions, structureSetup);\r\n  const instance: OverlayScrollbars = {\r\n    options(newOptions?: PartialOptions<OSOptions>) {\r\n      if (newOptions) {\r\n        const { _validated: _changedOptions } = validateOptions(newOptions, optionsTemplate, currentOptions, true);\r\n\r\n        if (!isEmptyObject(_changedOptions)) {\r\n          assignDeep(currentOptions, _changedOptions);\r\n          lifecycleHub._update(_changedOptions);\r\n        }\r\n      }\r\n      return currentOptions;\r\n    },\r\n    state: () => lifecycleHub._state(),\r\n    update(force?: boolean) {\r\n      lifecycleHub._update(null, force);\r\n    },\r\n  };\r\n\r\n  instance.update(true);\r\n\r\n  return instance;\r\n};\r\n"],"names":["createCache","update","options","_equal","_initialValue","_alwaysUpdateValues","_value","_previous","cacheUpdate","force","context","curr","newVal","changed","_changed","_update","_current","ElementNodeType","Node","ELEMENT_NODE","Object","prototype","toString","hasOwnProperty","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","elm","isEmptyArray","runEach","p1","runFn","fn","Set","forEach","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","getSetProp","topLeft","fallback","value","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","insertedNodes","insertAfter","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","firstLetterToUpper","str","charAt","toUpperCase","slice","getDummyStyle","style","cssPrefixes","jsPrefixes","jsCache","cssCache","cssProperty","uppercasedName","elmStyle","prefix","prefixWithoutDashes","resultPossibilities","resultPossibility","jsAPI","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","addClass","add","removeClass","remove","diffClass","classNameA","classNameB","classNameASplit","split","classNameBSplit","tempObj","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","off","listener","capture","eventName","removeEventListener","on","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","bind","stopPropagation","preventDefault","stopAndPrevent","equal","a","b","props","propMutation","compareA","compareB","equalWH","equalTRBL","equalBCRWH","round","Math","setT","setTimeout","clearTimeouts","id","clearTimeout","noop","debounce","functionToDebounce","timeoutId","maxTimeoutId","prevArguments","latestArguments","_timeout","_maxDelay","_mergeParams","invokeFunctionToDebounce","args","mergeParms","flush","debouncedFn","arguments","finalTimeout","hasTimeout","finalMaxWait","hasMaxWait","setTimeoutFn","mergeParamsResult","invokedArgs","boundInvoke","_flush","cssNumber","opacity","zindex","parseToZeroOrNumber","toFloat","num","parseFloat","parseInt","Number","isNaN","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","setCSSVal","setProperty","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","topRightBottomLeft","propertyPrefix","propertySuffix","finalPrefix","finalSuffix","top","right","bottom","left","t","r","l","x","y","absoluteCoordinates","rect","pageYOffset","pageXOffset","_extends","module","assign","stringify","JSON","templateTypePrefixSuffix","optionsTemplateTypes","validateRecursive","template","optionsDiff","doWriteErrors","propPath","validatedOptions","optionsCopy","filter","optionsDiffValue","optionsValue","templateValue","templateIsComplex","propPrefix","validatedResult","_validated","_foreign","isValid","errorEnumStrings","errorPossibleTypes","optionsValueType","templateValueArr","currTemplateType","typeString","isEnumString","enumStringSplit","possibility","string","doStringifyComparison","console","warn","join","validateOptions","transformOptions","optionsWithOptionsTemplate","_template","_options","tmpResult","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameViewportArrange","classNameContent","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","numberAllowedValues","oTypes","number","arrayNullValues","null","stringArrayNullAllowedValues","booleanTrueTemplate","boolean","booleanFalseTemplate","resizeAllowedValues","overflowAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","defaultOptionsWithTemplate","resize","paddingAbsolute","updating","elementEvents","attributes","overflow","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","clickScroll","touch","textarea","dynWidth","dynHeight","inheritedAttrs","nativeScrollbarsOverlaid","show","initialize","callbacks","onUpdated","function","optionsTemplate","defaultOptions","environmentInstance","abs","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","getNativeScrollbarSize","body","measureElm","cSize","oSize","getNativeScrollbarStyling","testElm","ex","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","getDefaultInitializationStrategy","nativeScrollbarStyling","_padding","_content","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","nativeScrollbarSize","nativeScrollbarIsOverlaid","defaultInitializationStrategy","initializationStrategy","defaultDefaultOptions","env","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_cssCustomProperties","_rtlScrollBehavior","_flexboxGlue","_addListener","_removeListener","delete","_getInitializationStrategy","_setInitializationStrategy","newInitializationStrategy","_getDefaultOptions","_setDefaultOptions","newDefaultOptions","_defaultInitializationStrategy","_defaultDefaultOptions","size","dpr","scrollbarSize","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","newScrollbarSize","getEnvironment","unwrap","contentArrangeCounter","createUniqueViewportArrangeElement","evaluateCreationFromStrategy","initializationValue","strategy","isBooleanValue","createStructureSetup","paddingNeeded","contentNeeded","targetIsElm","osTargetObj","_host","host","_target","_viewport","viewport","padding","content","destroyFns","isTextarea","isBody","getTargetContents","contentSlot","isTextareaHostGenerated","contentContainingElm","createPadding","createViewport","createContent","targetContents","ownerDocument","bodyElm","wnd","defaultView","ctx","_windowElm","_documentElm","_htmlElm","_bodyElm","_isTextarea","_isBody","viewportArrangeElm","_viewportArrange","_targetObj","_targetCtx","_destroy","animationStartEventName","scrollEventName","scrollAmount","directionIsRTL","domRectHasDimensions","height","width","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","currVal","updateResizeObserverContentRectCache","onSizeChangedCallbackProxy","sizeChangedContext","hasDirectionCache","skip","appear","doDirectionScroll","pop","contentRect","hasDimensions","hadDimensions","rtl","_sizeChanged","_directionIsRTLCache","appearCallback","directionIsRTLCache","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionIsRTLCache","event","directionIsRTLCacheValues","_getCurrentCacheValues","_directionIsRTL","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","ioEntryOrSize","isIntersecting","intersectionRatio","updateHeightIntrinsicCache","getCurrentHeightIntrinsicCache","intersectionObserverInstance","entries","last","heightIntrinsic","root","onSizeChanged","newSize","heightIntrinsicCache","_heightIntrinsic","createEventContentChange","eventContentChange","map","clear","_updateElements","getElements","eventElmList","elements","registredEventNames","newEntry","changingExistingEntry","finalEventNames","set","Map","createDOMObserver","isContentObserver","isConnected","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetChange","_ignoreNestedTargetChange","_ignoreContentChange","destroyEventContentChange","updateEventContentChangeElements","finalAttributes","finalStyleChangingAttributes","observedAttributes","concat","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributeOldValue","attributeFilter","subtree","childList","characterData","takeRecords","ignorePrefix","viewportAttrsFromTarget","baseStyleChangingAttrsTextarea","baseStyleChangingAttrs","newValue","diff","addedOrRemovedClass","lifecycleHubOservers","instance","updateLifecycles","debounceTimeout","debounceMaxDelay","contentMutationObserver","_structureSetup","contentMutationObserverAttr","updateLifecyclesWithDebouncedAdaptiveUpdateHints","prev","prevSizeChanged","prevHostMutation","_hostMutation","prevContentMutation","_contentMutation","currSizeChanged","currvHostMutation","currContentMutation","merged","updateViewportAttrsFromHost","attribute","hostAttr","onTrinsicChanged","updateFn","onContentMutation","contentChangedTroughEvent","onHostMutation","hostMutationObserver","updateOptions","checkOption","elementEventsChanged","attributesChanged","debounceChanged","updateContentMutationObserver","timeout","maxWait","_trinsicObserver","_sizeObserver","_updateObserverOptions","createTrinsicLifecycle","lifecycleHub","updateHints","heightIntrinsicChanged","display","createPaddingLifecycle","_setLifecycleCommunication","updatePaddingCache","currentPaddingCache","paddingChanged","directionChanged","paddingAbsoluteChanged","contentMutation","paddingStyleChanged","paddingRelative","paddingHorizontal","paddingVertical","paddingStyle","marginRight","marginBottom","marginLeft","viewportStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","_paddingInfo","_absolute","_viewportPaddingStyle","_paddingStyleChanged","max","overlaidScrollbarsHideOffset","whCacheOptions","sizeFraction","viewportOffsetSize","viewportRect","fractionalPixelRatioTollerance","setAxisOverflowStyle","horizontal","overflowAmount","behavior","styleObj","overflowKey","behaviorIsVisible","behaviorIsVisibleHidden","behaviorIsScroll","hasOverflow","_visible","_behavior","createOverflowLifecycle","_doViewportArrange","_getLifecycleCommunication","updateViewportSizeFraction","getCurrentViewportSizeFraction","updateViewportScrollSizeCache","getCurrentViewportScrollSizeCache","_viewportScrollSize","_viewportClientSize","_viewportSizeFraction","updateOverflowAmountCache","getCurrentOverflowAmountCache","fixFlexboxGlue","viewportOverflowState","_overflowScroll","_scrollbarsHideOffset","hostSizeFraction","hostClientSize","fractionalClientHeight","getViewportOverflowState","showNativeOverlaidScrollbars","viewportStyleObj","overlaidX","overlaidY","determineOverflow","arrangeHideOffset","scroll","scrollbarsHideOffset","_scrollbarsHideOffsetArrange","setViewportOverflowState","xVisible","xVisibleBehavior","yVisible","yVisibleBehavior","arrangeViewport","viewportScrollSize","viewportSizeFraction","arrangeX","arrangeY","hideOffsetX","hideOffsetY","viewportPaddingStyle","viewportArrangeHorizontalPaddingKey","viewportArrangeHorizontalPaddingValue","viewportArrangeVerticalPaddingValue","fractionalContentWidth","fractionalContenHeight","arrangeSize","sheet","cssRules","insertRule","ruleStyle","hideNativeScrollbars","viewportArrange","horizontalMarginKey","viewportHorizontalPaddingKey","horizontalMarginValue","verticalMarginValue","horizontalPaddingValue","verticalPaddingValue","undoViewportArrange","finalViewportOverflowState","finalPaddingStyle","assignProps","prevStyle","_redoViewportArrange","_viewportOverflowState","showNativeOverlaidScrollbarsOption","showNativeOverlaidScrollbarsChanged","adjustFlexboxGlue","viewportSizeFractionCache","viewportScrollSizeCache","overflowAmuntCache","preMeasureViewportOverflowState","undoViewportArrangeOverflowState","viewportSizeFractionCahnged","viewportScrollSizeChanged","viewportContentSize","arrangedViewportScrollSize","arrangedViewportClientSize","viewportSizeFractionChanged","overflowAmountChanged","overflowChanged","viewportArranged","_viewportOverflowScroll","_viewportOverflowAmount","getPropByPath","path","o","booleanCacheValuesFallback","lifecycleCommunicationFallback","createLifecycleHub","structureSetup","lifecycleCommunication","addEnvironmentListener","removeEnvironmentListener","doViewportArrange","newLifecycleCommunication","lifecycles","changedOptions","finalDirectionIsRTL","finalHeightIntrinsic","adjustScrollOffset","scrollOffsetX","scrollOffsetY","lifecycle","adaptiveSizeChanged","adaptiveHostMutation","adaptiveContentMutation","adaptivePaddingStyleChanged","destroyObservers","envUpdateListener","log","_state","_overflowAmount","OverlayScrollbars","extensions","currentOptions","newOptions","_changedOptions","state"],"mappings":"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"}