{"version":3,"file":"overlayscrollbars.esm.js","sources":["../src/support/cache/cache.ts","../src/support/utils/types.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/attribute.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/dom/class.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/utils/equal.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/offset.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/support/options/validation.ts","../src/support/options/transformation.ts","../src/classnames.ts","../src/options.ts","../src/environment.ts","../src/setups/structureSetup.ts","../src/setups/scrollbarsSetup.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/lifecycles/lifecycleHubObservers.ts","../src/lifecycles/trinsicLifecycle.ts","../src/lifecycles/paddingLifecycle.ts","../src/lifecycles/overflowLifecycle.ts","../src/lifecycles/lifecycleHub.ts","../src/overlayscrollbars.ts"],"sourcesContent":["export type CacheValues<T> = [\r\n  T, // value\r\n  boolean, // changed\r\n  T | undefined // previous\r\n];\r\n\r\nexport type Cache<Value, Ctx = undefined> = [\r\n  CacheUpdate<Value, Ctx>,\r\n  (force?: boolean) => CacheValues<Value> // getCurrent\r\n];\r\n\r\nexport interface CacheOptions<T> {\r\n  // initial value of _value.\r\n  _initialValue: T;\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<T>;\r\n  // If true always updates _value and _previous, otherwise they update only when they changed.\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport type CacheUpdate<T, C> = undefined extends C\r\n  ? (force?: boolean | 0, context?: C) => CacheValues<T>\r\n  : (force: boolean | 0, context: C) => CacheValues<T>;\r\n\r\nexport type UpdateCachePropFunction<Value, Ctx> = undefined extends Ctx\r\n  ? (context?: Ctx, current?: Value, previous?: Value) => Value\r\n  : Ctx extends Value\r\n  ? ((context: Ctx, current?: Value, previous?: Value) => Value) | 0\r\n  : (context: Ctx, current?: Value, previous?: Value) => Value;\r\n\r\nexport type EqualCachePropFunction<T> = (currentVal?: T, newVal?: T) => boolean;\r\n\r\nexport const createCache = <Value, Ctx = undefined>(\r\n  update: UpdateCachePropFunction<Value, Ctx>,\r\n  options: CacheOptions<Value>\r\n): Cache<Value, Ctx> => {\r\n  const { _initialValue, _equal, _alwaysUpdateValues } = options || {};\r\n  let _value: Value = _initialValue;\r\n  let _previous: Value | undefined;\r\n\r\n  const cacheUpdate = ((force?: boolean | 0, context?: Ctx) => {\r\n    const curr = _value;\r\n    // @ts-ignore\r\n    // update can only not be a function if C extends T as described in \"UpdateCachePropFunction\" type definition\r\n    // if C extends T the cast (context as T) is perfectly valid\r\n    const newVal = update ? update(context, _value, _previous) : (context as T);\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return [_value, changed, _previous];\r\n  }) as CacheUpdate<Value, Ctx>;\r\n\r\n  return [\r\n    cacheUpdate,\r\n    (force?: boolean) => [\r\n      _value,\r\n      !!force, // changed\r\n      _previous,\r\n    ],\r\n  ];\r\n};\r\n","import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) => {\r\n  return isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n};\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: any[]) => any {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat) ? (length > 0 && isObject(obj) ? length - 1 in obj : true) : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(obj: PlainObject, callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: Array<T>, item: T, fromIndex?: number): number => arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: Array<T>, items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): Array<T> => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items) ? Array.prototype.push.apply(array, items as Array<T>) : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr: ArrayLike<T>) => {\r\n  if (Array.from) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: Array<T> = [];\r\n\r\n  each(arr, (elm) => {\r\n    push(result, elm);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: Array<any> | null | undefined) => array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, p1?: unknown): void => {\r\n  const runFn = (fn: RunEachItem) => fn && fn(p1);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value?: string): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | false | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> => (elm ? from(elm.childNodes) : []);\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (elm: InputElementType, highBoundarySelector: string, deepBoundarySelector: string): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | false | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (parentElm: Node | false | null | undefined, preferredAnchor: Node | null | undefined, insertedElms: NodeCollection): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = ['WebKit', 'Moz', 'O', 'MS', 'webkit', 'moz', 'o', 'ms'];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without it, or and empty string if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n    return !(result = resultPossibilities.find((resultPossibility: string) => elmStyle[resultPossibility] !== undefined));\r\n  });\r\n\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported without it, or an empty string if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>('IntersectionObserver');\r\nexport const ResizeObserverConstructor = jsAPI<typeof ResizeObserver>('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | false | null | undefined,\r\n  className: string,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | false | null | undefined, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n */\r\nexport const addClass = (elm: Element | false | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n};\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | false | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (classNameA: string | null | undefined, classNameB: string | null | undefined) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","export interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean => !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null | undefined): boolean => (elm ? elementHasDimensions(elm as HTMLElement) : false);\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(target: EventTarget, eventNames: string, listener: (event: T) => any, capture?: boolean): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event): void => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event): void => evt.preventDefault();\r\n\r\n/**\r\n * Shorthand for the stopPropagation and preventDefault event Method.\r\n * @param evt The event of which the stopPropagation and preventDefault methods shall be called.\r\n */\r\nexport const stopAndPrevent = (evt: Event): void => (stopPropagation(evt) as undefined) || (preventDefault(evt) as undefined);\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(\r\n  a: T | undefined,\r\n  b: T | undefined,\r\n  props: Array<keyof T>,\r\n  propMutation?: ((value: any) => any) | null | false\r\n): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      const compareA = propMutation ? propMutation(a[prop]) : a[prop];\r\n      const compareB = propMutation ? propMutation(b[prop]) : b[prop];\r\n      if (compareA !== compareB) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = (a?: WH, b?: WH) => equal<WH>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = (a?: XY, b?: XY) => equal<XY>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n\r\n/**\r\n * Compares two DOM Rects for their equality of their width and height properties\r\n * Also returns false if one of the DOM Rects is undefined or null.\r\n * @param a DOM Rect a.\r\n * @param b DOM Rect b.\r\n * @param round Whether the values should be rounded.\r\n */\r\nexport const equalBCRWH = (a?: DOMRect, b?: DOMRect, round?: boolean) =>\r\n  equal<DOMRect>(a, b, ['width', 'height'], round && ((value) => Math.round(value)));\r\n","import { isNumber, isFunction } from 'support/utils/types';\r\nimport { rAF, cAF } from 'support/compatibility/apis';\r\n\r\nconst setT = window.setTimeout;\r\nconst clearTimeouts = (id: number | undefined) => {\r\n  id && window.clearTimeout(id);\r\n  id && cAF!(id);\r\n};\r\n\r\ntype DebounceTiming = number | false | null | undefined;\r\n\r\nexport interface DebounceOptions<FunctionToDebounce extends (...args: any) => any> {\r\n  /**\r\n   * The timeout for debouncing. If null, no debounce is applied.\r\n   */\r\n  _timeout?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * A maximum amount of ms. before the function will be called even with debounce.\r\n   */\r\n  _maxDelay?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * Function which merges parameters for each canceled debounce.\r\n   * If parameters can't be merged the function will return null, otherwise it returns the merged parameters.\r\n   */\r\n  _mergeParams?: (\r\n    prev: Parameters<FunctionToDebounce>,\r\n    curr: Parameters<FunctionToDebounce>\r\n  ) => Parameters<FunctionToDebounce> | false | null | undefined;\r\n}\r\n\r\nexport interface Debounced<FunctionToDebounce extends (...args: any) => any> {\r\n  (...args: Parameters<FunctionToDebounce>): ReturnType<FunctionToDebounce>;\r\n  _flush(): void;\r\n}\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param options Options for debouncing.\r\n */\r\nexport const debounce = <FunctionToDebounce extends (...args: any) => any>(\r\n  functionToDebounce: FunctionToDebounce,\r\n  options: DebounceOptions<FunctionToDebounce>\r\n): Debounced<FunctionToDebounce> => {\r\n  let timeoutId: number | undefined;\r\n  let maxTimeoutId: number | undefined;\r\n  let prevArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  let latestArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  const { _timeout, _maxDelay, _mergeParams } = options;\r\n\r\n  const invokeFunctionToDebounce = function (args: IArguments) {\r\n    clearTimeouts(timeoutId);\r\n    clearTimeouts(maxTimeoutId);\r\n    maxTimeoutId = timeoutId = prevArguments = undefined;\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  const mergeParms = (curr: Parameters<FunctionToDebounce>): Parameters<FunctionToDebounce> | false | null | undefined =>\r\n    _mergeParams && prevArguments ? _mergeParams(prevArguments, curr) : curr;\r\n\r\n  const flush = () => {\r\n    if (timeoutId) {\r\n      invokeFunctionToDebounce(mergeParms(latestArguments!) || latestArguments!);\r\n    }\r\n  };\r\n\r\n  const debouncedFn = function () {\r\n    const args: Parameters<FunctionToDebounce> = arguments as Parameters<FunctionToDebounce>;\r\n    const finalTimeout = isFunction(_timeout) ? _timeout() : _timeout;\r\n    const hasTimeout = isNumber(finalTimeout) && finalTimeout >= 0;\r\n\r\n    if (hasTimeout) {\r\n      const finalMaxWait = isFunction(_maxDelay) ? _maxDelay() : _maxDelay;\r\n      const hasMaxWait = isNumber(finalMaxWait) && finalMaxWait >= 0;\r\n      const setTimeoutFn = finalTimeout! > 0 ? setT : rAF!;\r\n      const mergeParamsResult = mergeParms(args);\r\n      const invokedArgs = mergeParamsResult || args;\r\n      const boundInvoke = invokeFunctionToDebounce.bind(0, invokedArgs);\r\n\r\n      if (!mergeParamsResult) {\r\n        invokeFunctionToDebounce(prevArguments || args);\r\n      }\r\n\r\n      clearTimeouts(timeoutId);\r\n      timeoutId = setTimeoutFn(boundInvoke, finalTimeout as number) as number;\r\n\r\n      if (hasMaxWait && !maxTimeoutId) {\r\n        maxTimeoutId = setT(flush, finalMaxWait as number);\r\n      }\r\n\r\n      prevArguments = latestArguments = invokedArgs;\r\n    } else {\r\n      invokeFunctionToDebounce(args);\r\n    }\r\n  };\r\n  debouncedFn._flush = flush;\r\n\r\n  return debouncedFn as Debounced<FunctionToDebounce>;\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray, isUndefined } from 'support/utils/types';\r\nimport { PlainObject, StyleObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\nconst cssNumber = {\r\n  //animationiterationcount: 1,\r\n  //columncount: 1,\r\n  //fillopacity: 1,\r\n  //flexgrow: 1,\r\n  //flexshrink: 1,\r\n  //fontweight: 1,\r\n  //lineheight: 1,\r\n  opacity: 1,\r\n  //order: 1,\r\n  //orphans: 1,\r\n  //widows: 1,\r\n  zindex: 1,\r\n  //zoom: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number => (!cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val);\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null ? computedStyle[prop] || computedStyle.getPropertyValue(prop) : elm.style[prop];\r\nconst setCSSVal = (elm: HTMLElement | false | null | undefined, prop: string, val: string | number): void => {\r\n  try {\r\n    if (elm) {\r\n      const { style } = elm;\r\n      if (!isUndefined(style[prop])) {\r\n        style[prop] = adaptCSSVal(prop, val);\r\n      } else {\r\n        style.setProperty(prop, val as string);\r\n      }\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style<CustomCssProps>(elm: HTMLElement | false | null | undefined, styles: StyleObject<CustomCssProps>): void;\r\nexport function style<CustomCssProps>(elm: HTMLElement | false | null | undefined, styles: string): string;\r\nexport function style<CustomCssProps>(elm: HTMLElement | false | null | undefined, styles: Array<string> | string): { [key: string]: string };\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps> | Array<string> | string\r\n): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns the top right bottom left values of the passed css property.\r\n * @param elm The element of which the values shall be returned.\r\n * @param propertyPrefix The css property prefix. (e.g. \"border\")\r\n * @param propertySuffix The css property suffix. (e.g. \"width\")\r\n */\r\nexport const topRightBottomLeft = (elm?: HTMLElement | false | null | undefined, propertyPrefix?: string, propertySuffix?: string): TRBL => {\r\n  const finalPrefix = propertyPrefix ? `${propertyPrefix}-` : '';\r\n  const finalSuffix = propertySuffix ? `-${propertySuffix}` : '';\r\n  const top = `${finalPrefix}top${finalSuffix}`;\r\n  const right = `${finalPrefix}right${finalSuffix}`;\r\n  const bottom = `${finalPrefix}bottom${finalSuffix}`;\r\n  const left = `${finalPrefix}left${finalSuffix}`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString, isNumber, isBoolean } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\nexport type OptionsObjectType = Record<string, unknown>;\r\nexport type OptionsFunctionType = (this: unknown, ...args: unknown[]) => unknown;\r\nexport type OptionsTemplateType<T extends OptionsTemplateNativeTypes> = ExtractPropsKey<OptionsTemplateTypeMap, T>;\r\nexport type OptionsTemplateTypes = keyof OptionsTemplateTypeMap;\r\nexport type OptionsTemplateNativeTypes = OptionsTemplateTypeMap[keyof OptionsTemplateTypeMap];\r\n\r\nexport type OptionsTemplateValue<T extends OptionsTemplateNativeTypes = string> = T extends string\r\n  ? string extends T\r\n    ? OptionsTemplateValueNonEnum<T>\r\n    : string\r\n  : OptionsTemplateValueNonEnum<T>;\r\n\r\nexport type OptionsTemplate<T> = {\r\n  [P in keyof T]: T[P] extends OptionsObjectType\r\n    ? OptionsTemplate<T[P]>\r\n    : T[P] extends OptionsTemplateNativeTypes\r\n    ? OptionsTemplateValue<T[P]>\r\n    : never;\r\n};\r\n\r\nexport type OptionsValidationResult<T> = {\r\n  readonly _foreign: Record<string, unknown>;\r\n  readonly _validated: PartialOptions<T>;\r\n};\r\n\r\nexport type PartialOptions<T> = {\r\n  [P in keyof T]?: T[P] extends OptionsObjectType ? PartialOptions<T[P]> : T[P];\r\n};\r\n\r\ntype OptionsTemplateTypeMap = {\r\n  __TPL_boolean_TYPE__: boolean;\r\n  __TPL_number_TYPE__: number;\r\n  __TPL_string_TYPE__: string;\r\n  __TPL_array_TYPE__: Array<any> | ReadonlyArray<any>;\r\n  __TPL_function_TYPE__: OptionsFunctionType;\r\n  __TPL_null_TYPE__: null;\r\n  __TPL_object_TYPE__: OptionsObjectType;\r\n};\r\n\r\ntype OptionsTemplateValueNonEnum<T extends OptionsTemplateNativeTypes> =\r\n  | OptionsTemplateType<T>\r\n  | [OptionsTemplateType<T>, ...Array<OptionsTemplateTypes>];\r\n\r\ntype ExtractPropsKey<T, TProps extends T[keyof T]> = {\r\n  [P in keyof T]: TProps extends T[P] ? P : never;\r\n}[keyof T];\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<OptionsObjectType>;\r\n  readonly function: OptionsTemplateType<OptionsFunctionType>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n\r\nconst { stringify } = JSON;\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = ['boolean', 'number', 'string', 'array', 'object', 'function', 'null'].reduce(\r\n  (result, item) => {\r\n    result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n    return result;\r\n  },\r\n  {} as OptionsTemplateTypesDictionary\r\n);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  options: PartialOptions<T>,\r\n  template: OptionsTemplate<T>,\r\n  optionsDiff: T,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: PartialOptions<T> = {};\r\n  const optionsCopy: PartialOptions<T> = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsDiffValue: any = isUndefined(optionsDiff[prop]) ? {} : optionsDiff[prop];\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> = template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const validatedResult = validateRecursive(optionsValue, templateValue as T, optionsDiffValue, doWriteErrors, propPrefix + prop);\r\n      validatedOptions[prop] = validatedResult._validated as any;\r\n      optionsCopy[prop] = validatedResult._foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        const isPrimitiveArr = isArray(optionsValue) && !optionsValue.some((val) => !isNumber(val) && !isString(val) && !isBoolean(val));\r\n        const doStringifyComparison = isPrimitiveArr || isPlainObject(optionsValue);\r\n        if (doStringifyComparison ? stringify(optionsValue) !== stringify(optionsDiffValue) : optionsValue !== optionsDiffValue) {\r\n          validatedOptions[prop] = optionsValue;\r\n        }\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${errorEnumStrings.length > 0 ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].` : ''}`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    _foreign: optionsCopy,\r\n    _validated: validatedOptions,\r\n  };\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  options: PartialOptions<T>,\r\n  template: OptionsTemplate<T>,\r\n  optionsDiff?: T | null,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => {\r\n  /*\r\n    if (!isEmptyObject(foreign) && doWriteErrors)\r\n        console.warn(`The following options are discarded due to invalidity:\\r\\n ${window.JSON.stringify(foreign, null, 2)}`);\r\n\r\n    //add values, which aren't specified in the template, to the finished validated object to prevent them from being discarded\r\n    if (keepForeignProps) {\r\n        Object.assign(result.validated, foreign);\r\n    }\r\n    */\r\n  return validateRecursive<T>(options, template, optionsDiff || ({} as T), doWriteErrors || false);\r\n};\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n","import {\r\n  OptionsTemplate,\r\n  OptionsObjectType,\r\n  OptionsTemplateNativeTypes,\r\n  OptionsTemplateTypes,\r\n  OptionsTemplateValue,\r\n} from 'support/options/validation';\r\nimport { PlainObject } from 'typings';\r\nimport { isArray } from 'support/utils/types';\r\nimport { each, keys } from 'support/utils';\r\n\r\nexport interface OptionsWithOptionsTemplateTransformation<T> {\r\n  _template: OptionsTemplate<T>;\r\n  _options: T;\r\n}\r\n\r\nexport type OptionsWithOptionsTemplateValue<T extends OptionsTemplateNativeTypes> = [T, OptionsTemplateValue<T>];\r\n\r\nexport type OptionsWithOptionsTemplate<T> = {\r\n  [P in keyof T]: T[P] extends OptionsObjectType\r\n    ? OptionsWithOptionsTemplate<T[P]>\r\n    : T[P] extends OptionsTemplateNativeTypes\r\n    ? OptionsWithOptionsTemplateValue<T[P]>\r\n    : never;\r\n};\r\n\r\n/**\r\n * Transforms the given OptionsWithOptionsTemplate<T> object to its corresponding generic (T) Object or its corresponding Template object.\r\n * @param optionsWithOptionsTemplate The OptionsWithOptionsTemplate<T> object which shall be converted.\r\n * @param toTemplate True if the given OptionsWithOptionsTemplate<T> shall be converted to its corresponding Template object.\r\n */\r\nexport const transformOptions = <T>(optionsWithOptionsTemplate: OptionsWithOptionsTemplate<T>): OptionsWithOptionsTemplateTransformation<T> => {\r\n  const result: any = {\r\n    _template: {},\r\n    _options: {},\r\n  };\r\n\r\n  each(keys(optionsWithOptionsTemplate), (key: Extract<keyof T, string>) => {\r\n    const val: PlainObject | OptionsTemplateTypes | Array<OptionsTemplateTypes> = optionsWithOptionsTemplate[key];\r\n\r\n    if (isArray(val)) {\r\n      result._template[key] = val[1];\r\n      result._options[key] = val[0];\r\n    } else {\r\n      //  if (isObject(val))\r\n      const tmpResult = transformOptions(val as OptionsWithOptionsTemplate<typeof val>);\r\n      result._template[key] = tmpResult._template;\r\n      result._options[key] = tmpResult._options;\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameViewportArrange = `${classNameViewport}-arrange`;\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n\r\nexport const classNameScrollbar = 'os-scrollbar';\r\nexport const classNameScrollbarHorizontal = `${classNameScrollbar}-horizontal`;\r\nexport const classNameScrollbarVertical = `${classNameScrollbar}-vertical`;\r\nexport const classNameScrollbarTrack = 'os-scrollbar-track';\r\nexport const classNameScrollbarHandle = 'os-scrollbar-handle';\r\n","import {\r\n  optionsTemplateTypes as oTypes,\r\n  transformOptions,\r\n  OptionsTemplateValue,\r\n  OptionsWithOptionsTemplateValue,\r\n  OptionsWithOptionsTemplate,\r\n} from 'support/options';\r\n\r\nexport type ResizeBehavior = 'none' | 'both' | 'horizontal' | 'vertical';\r\n\r\nexport type OverflowBehavior = 'hidden' | 'scroll' | 'visible' | 'visible-hidden';\r\n\r\nexport type VisibilityBehavior = 'visible' | 'hidden' | 'auto';\r\n\r\nexport type AutoHideBehavior = 'never' | 'scroll' | 'leave' | 'move';\r\n\r\nexport type ScrollBehavior = 'always' | 'ifneeded' | 'never';\r\n\r\nexport type BasicEventCallback = (this: any) => void;\r\n\r\nexport type ScrollEventCallback = (this: any, args?: UIEvent) => void;\r\n\r\nexport type OverflowChangedCallback = (this: any, args?: OverflowChangedArgs) => void;\r\n\r\nexport type OverflowAmountChangedCallback = (this: any, args?: OverflowAmountChangedArgs) => void;\r\n\r\nexport type DirectionChangedCallback = (this: any, args?: DirectionChangedArgs) => void;\r\n\r\nexport type SizeChangedCallback = (this: any, args?: SizeChangedArgs) => void;\r\n\r\nexport type UpdatedCallback = (this: any, args?: UpdatedArgs) => void;\r\n\r\nexport interface OSOptions {\r\n  resize: ResizeBehavior;\r\n  paddingAbsolute: boolean;\r\n  updating: {\r\n    elementEvents: Array<[string, string]> | null;\r\n    attributes: string[] | null;\r\n    debounce: number | [number, number] | null;\r\n  };\r\n  overflow: {\r\n    x: OverflowBehavior;\r\n    y: OverflowBehavior;\r\n  };\r\n  scrollbars: {\r\n    visibility: VisibilityBehavior;\r\n    autoHide: AutoHideBehavior;\r\n    autoHideDelay: number;\r\n    dragScroll: boolean;\r\n    clickScroll: boolean;\r\n    touch: boolean;\r\n  };\r\n  textarea: {\r\n    dynWidth: boolean;\r\n    dynHeight: boolean;\r\n    inheritedAttrs: string | Array<string> | null;\r\n  };\r\n  nativeScrollbarsOverlaid: {\r\n    show: boolean;\r\n    initialize: boolean;\r\n  };\r\n  callbacks: {\r\n    onUpdated: (() => any) | null;\r\n  };\r\n  /*\r\n  callbacks?: {\r\n    onInitialized?: BasicEventCallback | null;\r\n    onInitializationWithdrawn?: BasicEventCallback | null;\r\n    onDestroyed?: BasicEventCallback | null;\r\n    onScrollStart?: ScrollEventCallback | null;\r\n    onScroll?: ScrollEventCallback | null;\r\n    onScrollStop?: ScrollEventCallback | null;\r\n    onOverflowChanged?: OverflowChangedCallback | null;\r\n    onOverflowAmountChanged?: OverflowAmountChangedCallback | null;\r\n    onDirectionChanged?: DirectionChangedCallback | null;\r\n    onContentSizeChanged?: SizeChangedCallback | null;\r\n    onHostSizeChanged?: SizeChangedCallback | null;\r\n    onUpdated?: UpdatedCallback | null;\r\n  };\r\n  */\r\n}\r\n\r\nexport interface OverflowChangedArgs {\r\n  x: boolean;\r\n  y: boolean;\r\n  xScrollable: boolean;\r\n  yScrollable: boolean;\r\n  clipped: boolean;\r\n}\r\n\r\nexport interface OverflowAmountChangedArgs {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface DirectionChangedArgs {\r\n  isRTL: number;\r\n  dir: string;\r\n}\r\n\r\nexport interface SizeChangedArgs {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface UpdatedArgs {\r\n  forced: boolean;\r\n}\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst arrayNullValues: OptionsTemplateValue<Array<unknown> | null> = [oTypes.array, oTypes.null];\r\nconst stringArrayNullAllowedValues: OptionsTemplateValue<string | ReadonlyArray<string> | null> = [oTypes.string, oTypes.array, oTypes.null];\r\nconst booleanTrueTemplate: OptionsWithOptionsTemplateValue<boolean> = [true, oTypes.boolean];\r\nconst booleanFalseTemplate: OptionsWithOptionsTemplateValue<boolean> = [false, oTypes.boolean];\r\n// const callbackTemplate: OptionsWithOptionsTemplateValue<Func | null> = [null, [oTypes.function, oTypes.null]];\r\nconst resizeAllowedValues: OptionsTemplateValue<ResizeBehavior> = 'none both horizontal vertical';\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> = 'hidden scroll visible visible-hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> = 'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> = 'never scroll leavemove';\r\n\r\n/**\r\n * A object which serves as \"default options object\" and \"options template object\".\r\n * I combined these two into one object so that I don't have to define two separate big objects, instead I define one big object.\r\n *\r\n * The property value is a tuple:\r\n * the first value is the default value\r\n * the second value is the template value\r\n * Example:\r\n * {\r\n *  a: ['default', [Type.string, Type.null]],\r\n *  b: [250, Type.number]\r\n * }\r\n * Property \"a\" has a default value of 'default' and it can be a string or null\r\n * Property \"b\" has a default value of 250 and it can be number\r\n */\r\nconst defaultOptionsWithTemplate: OptionsWithOptionsTemplate<OSOptions> = {\r\n  resize: ['none', resizeAllowedValues], // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: booleanFalseTemplate, // true || false\r\n  updating: {\r\n    elementEvents: [[['img', 'load']], arrayNullValues], // array of tuples || null\r\n    attributes: [null, arrayNullValues],\r\n    debounce: [\r\n      [0, 33],\r\n      [oTypes.number, oTypes.array, oTypes.null],\r\n    ], // number || number array || null\r\n  },\r\n  overflow: {\r\n    x: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: ['scroll', overflowAllowedValues], // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  scrollbars: {\r\n    visibility: ['auto', scrollbarsVisibilityAllowedValues], // visible || hidden || auto || v || h || a\r\n    autoHide: ['never', scrollbarsAutoHideAllowedValues], // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: [800, numberAllowedValues], // number\r\n    dragScroll: booleanTrueTemplate, // true || false\r\n    clickScroll: booleanFalseTemplate, // true || false\r\n    touch: booleanTrueTemplate, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: booleanFalseTemplate, // true || false\r\n    dynHeight: booleanFalseTemplate, // true || false\r\n    inheritedAttrs: [['style', 'class'], stringArrayNullAllowedValues], // string || array || null\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanFalseTemplate, // true || false\r\n    initialize: booleanFalseTemplate, // true || false\r\n  },\r\n  callbacks: {\r\n    onUpdated: [null, [oTypes.function, oTypes.null]],\r\n  },\r\n  /*\r\n  callbacks: {\r\n    onInitialized: callbackTemplate, // null || function\r\n    onInitializationWithdrawn: callbackTemplate, // null || function\r\n    onDestroyed: callbackTemplate, // null || function\r\n    onScrollStart: callbackTemplate, // null || function\r\n    onScroll: callbackTemplate, // null || function\r\n    onScrollStop: callbackTemplate, // null || function\r\n    onOverflowChanged: callbackTemplate, // null || function\r\n    onOverflowAmountChanged: callbackTemplate, // null || function\r\n    onDirectionChanged: callbackTemplate, // null || function\r\n    onContentSizeChanged: callbackTemplate, // null || function\r\n    onHostSizeChanged: callbackTemplate, // null || function\r\n    onUpdated: callbackTemplate, // null || function\r\n  },\r\n  */\r\n};\r\n\r\nexport const { _template: optionsTemplate, _options: defaultOptions } = transformOptions(defaultOptionsWithTemplate);\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalBCRWH,\r\n  getBoundingClientRect,\r\n  assignDeep,\r\n  cssProperty,\r\n  PartialOptions,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { OSOptions, defaultOptions } from 'options';\r\nimport { OSTargetElement } from 'typings';\r\n\r\ntype StructureInitializationElementFn<T> = ((target: OSTargetElement) => HTMLElement | T) | T;\r\n\r\ntype ScrollbarsInitializationElementFn<T> = ((target: OSTargetElement, host: HTMLElement, viewport: HTMLElement) => HTMLElement | T) | T;\r\n\r\n/**\r\n * A Static element is an element which MUST be generated.\r\n * If null (or the returned result is null), the initialization function is generatig the element, otherwise\r\n * the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationStaticElement = StructureInitializationElementFn<null>;\r\n\r\n/**\r\n * A Dynamic element is an element which CAN be generated.\r\n * If null (or the returned result is null), then the default behavior is used.\r\n * If boolean (or the returned result is boolean), the generation of the element is forced (or not).\r\n * If the function returns and element, the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationDynamicElement = StructureInitializationElementFn<boolean | null>;\r\n\r\nexport interface StructureInitializationStrategy {\r\n  _host: StructureInitializationStaticElement;\r\n  _viewport: StructureInitializationStaticElement;\r\n  _padding: StructureInitializationDynamicElement;\r\n  _content: StructureInitializationDynamicElement;\r\n}\r\n\r\nexport interface ScrollbarsInitializationStrategy {\r\n  _scrollbarsSlot: ScrollbarsInitializationElementFn<null | undefined>;\r\n}\r\n\r\nexport interface InitializationStrategy extends StructureInitializationStrategy, ScrollbarsInitializationStrategy {}\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  _nativeScrollbarSize: XY;\r\n  _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  _nativeScrollbarStyling: boolean;\r\n  _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  _flexboxGlue: boolean;\r\n  _cssCustomProperties: boolean;\r\n  _addListener(listener: OnEnvironmentChanged): void;\r\n  _removeListener(listener: OnEnvironmentChanged): void;\r\n  _getInitializationStrategy(): InitializationStrategy;\r\n  _setInitializationStrategy(newInitializationStrategy: Partial<InitializationStrategy>): void;\r\n  _getDefaultOptions(): OSOptions;\r\n  _setDefaultOptions(newDefaultOptions: PartialOptions<OSOptions>): void;\r\n  _defaultInitializationStrategy: InitializationStrategy;\r\n  _defaultDefaultOptions: OSOptions;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst getNativeScrollbarSize = (body: HTMLElement, measureElm: HTMLElement): XY => {\r\n  appendChildren(body, measureElm);\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h,\r\n    y: oSize.w - cSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, cssProperty('scrollbar-width')) === 'none' ||\r\n      window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n  } catch (ex) {}\r\n\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (parentElm: HTMLElement, childElm: HTMLElement): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const minOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMin = equalBCRWH(minOffsetsize, minOffsetsizeParent, true);\r\n\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const maxOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMax = equalBCRWH(maxOffsetsize, maxOffsetsizeParent, true);\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\n// init function decides for all values\r\nconst getDefaultInitializationStrategy = (nativeScrollbarStyling: boolean): InitializationStrategy => ({\r\n  _host: null,\r\n  _viewport: null,\r\n  _padding: null,\r\n  _content: null,\r\n  _scrollbarsSlot: null,\r\n});\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const nativeScrollbarSize = getNativeScrollbarSize(body, envElm);\r\n  const nativeScrollbarStyling = getNativeScrollbarStyling(envElm);\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n  const defaultInitializationStrategy = getDefaultInitializationStrategy(nativeScrollbarStyling);\r\n  let initializationStrategy = defaultInitializationStrategy;\r\n  let defaultDefaultOptions = defaultOptions;\r\n\r\n  const env: Environment = {\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _cssCustomProperties: style(envElm, 'zIndex') === '-1',\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.add(listener);\r\n    },\r\n    _removeListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.delete(listener);\r\n    },\r\n    _getInitializationStrategy: () => ({ ...initializationStrategy }),\r\n    _setInitializationStrategy(newInitializationStrategy) {\r\n      initializationStrategy = assignDeep({}, initializationStrategy, newInitializationStrategy);\r\n    },\r\n    _getDefaultOptions: () => ({ ...defaultDefaultOptions }),\r\n    _setDefaultOptions(newDefaultOptions) {\r\n      defaultDefaultOptions = assignDeep({}, defaultDefaultOptions, newDefaultOptions);\r\n    },\r\n    _defaultInitializationStrategy: defaultInitializationStrategy,\r\n    _defaultDefaultOptions: defaultDefaultOptions,\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n    let scrollbarSize = nativeScrollbarSize;\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const newScrollbarSize = (environmentInstance._nativeScrollbarSize = getNativeScrollbarSize(body, envElm));\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSize.x !== newScrollbarSize.x || scrollbarSize.y !== newScrollbarSize.y) {\r\n            runEach(onChangedListener);\r\n          }\r\n\r\n          scrollbarSize = newScrollbarSize;\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  indexOf,\r\n  removeElements,\r\n  removeClass,\r\n  push,\r\n  runEach,\r\n  insertBefore,\r\n  attr,\r\n  isBoolean,\r\n  isFunction,\r\n  keys,\r\n} from 'support';\r\nimport {\r\n  classNameHost,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameViewportArrange,\r\n  classNameContent,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport {\r\n  getEnvironment,\r\n  StructureInitializationStaticElement,\r\n  StructureInitializationDynamicElement,\r\n  StructureInitializationStrategy,\r\n} from 'environment';\r\nimport { OSTarget, OSTargetElement, StructureInitialization } from 'typings';\r\n\r\nexport interface OSTargetContext {\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: HTMLDocument;\r\n  _targetIsElm: boolean;\r\n}\r\n\r\nexport interface PreparedOSTargetObject {\r\n  _target: OSTargetElement;\r\n  _host: HTMLElement;\r\n  _viewport: HTMLElement;\r\n  _padding: HTMLElement | false;\r\n  _content: HTMLElement | false;\r\n  _viewportArrange: HTMLStyleElement | false;\r\n}\r\n\r\nexport interface StructureSetup {\r\n  _targetObj: PreparedOSTargetObject;\r\n  _targetCtx: OSTargetContext;\r\n  _destroy: () => void;\r\n}\r\n\r\nlet contentArrangeCounter = 0;\r\n\r\nconst unwrap = (elm: HTMLElement | false | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nconst createUniqueViewportArrangeElement = (): HTMLStyleElement | false => {\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _cssCustomProperties } = getEnvironment();\r\n  /* istanbul ignore next */\r\n  const create = !_cssCustomProperties && !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const result = create ? document.createElement('style') : false;\r\n\r\n  if (result) {\r\n    attr(result, 'id', `${classNameViewportArrange}-${contentArrangeCounter}`);\r\n    contentArrangeCounter++;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst staticCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | undefined,\r\n  strategy: StructureInitializationStaticElement,\r\n  elementClass: string\r\n): HTMLElement => {\r\n  const result = initializationValue ? initializationValue : isFunction(strategy) ? strategy(target) : (strategy as null);\r\n  return result ? result : createDiv(elementClass);\r\n};\r\n\r\nconst dynamicCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | boolean | undefined,\r\n  strategy: StructureInitializationDynamicElement,\r\n  elementClass: string,\r\n  defaultValue: boolean\r\n): HTMLElement | false => {\r\n  const takeInitializationValue = isBoolean(initializationValue) || initializationValue;\r\n  const result = takeInitializationValue ? (initializationValue as boolean | HTMLElement) : isFunction(strategy) ? strategy(target) : strategy;\r\n\r\n  if (result === null) {\r\n    return defaultValue ? createDiv(elementClass) : false;\r\n  }\r\n\r\n  return result === true ? createDiv(elementClass) : result;\r\n};\r\n\r\nexport const createStructureSetup = (target: OSTarget | StructureInitialization): StructureSetup => {\r\n  const { _getInitializationStrategy, _nativeScrollbarStyling } = getEnvironment();\r\n  const {\r\n    _host: hostInitializationStrategy,\r\n    _viewport: viewportInitializationStrategy,\r\n    _padding: paddingInitializationStrategy,\r\n    _content: contentInitializationStrategy,\r\n  } = _getInitializationStrategy() as StructureInitializationStrategy;\r\n  const targetIsElm = isHTMLElement(target);\r\n  const targetStructureInitialization = target as StructureInitialization;\r\n  const targetElement = targetIsElm ? (target as OSTargetElement) : targetStructureInitialization.target;\r\n  const isTextarea = is(targetElement, 'textarea');\r\n  const isBody = !isTextarea && is(targetElement, 'body');\r\n  const ownerDocument: HTMLDocument = targetElement!.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const evaluatedTargetObj: PreparedOSTargetObject = {\r\n    _target: targetElement,\r\n    _host: isTextarea\r\n      ? staticCreationFromStrategy(targetElement, targetStructureInitialization.host, hostInitializationStrategy, classNameHost)\r\n      : (targetElement as HTMLElement),\r\n    _viewport: staticCreationFromStrategy(targetElement, targetStructureInitialization.viewport, viewportInitializationStrategy, classNameViewport),\r\n    _padding: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.padding,\r\n      paddingInitializationStrategy,\r\n      classNamePadding,\r\n      !_nativeScrollbarStyling // default value for padding\r\n    ),\r\n    _content: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.content,\r\n      contentInitializationStrategy,\r\n      classNameContent,\r\n      false // default value for content\r\n    ),\r\n    _viewportArrange: createUniqueViewportArrangeElement(),\r\n  };\r\n  const ctx: OSTargetContext = {\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n    _targetIsElm: targetIsElm,\r\n  };\r\n  const generatedElements = keys(evaluatedTargetObj).reduce((arr, key: string) => {\r\n    const value = evaluatedTargetObj[key];\r\n    return push(arr, value && !parent(value) ? value : false);\r\n  }, [] as HTMLElement[]);\r\n  const elementIsGenerated = (elm: HTMLElement | false) => (elm ? indexOf(generatedElements, elm) > -1 : null);\r\n  const { _target, _host, _padding, _viewport, _content, _viewportArrange } = evaluatedTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextareaHostGenerated = isTextarea && elementIsGenerated(_host);\r\n  const targetContents = isTextarea\r\n    ? _target\r\n    : contents([_content, _viewport, _padding, _host, _target].find((elm) => elementIsGenerated(elm) === false));\r\n  const contentSlot = _content || _viewport;\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  appendChildren(contentSlot, targetContents);\r\n  appendChildren(_host, _padding);\r\n  appendChildren(_padding || _host, _viewport);\r\n  appendChildren(_viewport, _content);\r\n\r\n  addClass(_host, classNameHost);\r\n  addClass(_padding, classNamePadding);\r\n  addClass(_viewport, classNameViewport);\r\n  addClass(_content, classNameContent);\r\n\r\n  push(destroyFns, () => {\r\n    if (targetIsElm) {\r\n      appendChildren(_host, contents(contentSlot));\r\n      removeElements(_padding || _viewport);\r\n      removeClass(_host, classNameHost);\r\n    } else {\r\n      if (elementIsGenerated(_content)) {\r\n        unwrap(_content);\r\n      }\r\n      if (elementIsGenerated(_viewport)) {\r\n        unwrap(_viewport);\r\n      }\r\n      if (elementIsGenerated(_padding)) {\r\n        unwrap(_padding);\r\n      }\r\n      removeClass(_host, classNameHost);\r\n      removeClass(_padding, classNamePadding);\r\n      removeClass(_viewport, classNameViewport);\r\n      removeClass(_content, classNameContent);\r\n    }\r\n  });\r\n\r\n  if (_nativeScrollbarStyling) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  }\r\n  if (_viewportArrange) {\r\n    insertBefore(_viewport, _viewportArrange);\r\n    push(destroyFns, removeElements.bind(0, _viewportArrange));\r\n  }\r\n\r\n  return {\r\n    _targetObj: evaluatedTargetObj,\r\n    _targetCtx: ctx,\r\n    _destroy: () => {\r\n      runEach(destroyFns);\r\n    },\r\n  };\r\n};\r\n","import { appendChildren, createDiv, removeElements, isFunction } from 'support';\r\nimport {\r\n  classNameScrollbar,\r\n  classNameScrollbarHorizontal,\r\n  classNameScrollbarVertical,\r\n  classNameScrollbarTrack,\r\n  classNameScrollbarHandle,\r\n} from 'classnames';\r\nimport { getEnvironment, ScrollbarsInitializationStrategy } from 'environment';\r\nimport { OSTarget, ScrollbarsInitialization } from 'typings';\r\nimport { StructureSetup } from 'setups/structureSetup';\r\n\r\nexport interface ScrollbarStructure {\r\n  _scrollbar: HTMLElement;\r\n  _track: HTMLElement;\r\n  _handle: HTMLElement;\r\n}\r\n\r\nexport interface ScrollbarsSetup {\r\n  _horizontalScrollbarStructure: ScrollbarStructure;\r\n  _verticalScrollbarStructure: ScrollbarStructure;\r\n  _destroy: () => void;\r\n}\r\n\r\nconst generateScrollbarDOM = (scrollbarClassName: string): ScrollbarStructure => {\r\n  const scrollbar = createDiv(`${classNameScrollbar} ${scrollbarClassName}`);\r\n  const track = createDiv(classNameScrollbarTrack);\r\n  const handle = createDiv(classNameScrollbarHandle);\r\n\r\n  appendChildren(scrollbar, track);\r\n  appendChildren(track, handle);\r\n\r\n  return {\r\n    _scrollbar: scrollbar,\r\n    _track: track,\r\n    _handle: handle,\r\n  };\r\n};\r\n\r\nexport const createScrollbarsSetup = (target: OSTarget | ScrollbarsInitialization, structureSetup: StructureSetup): ScrollbarsSetup => {\r\n  const { _getInitializationStrategy } = getEnvironment();\r\n  const { _scrollbarsSlot: environmentScrollbarSlot } = _getInitializationStrategy() as ScrollbarsInitializationStrategy;\r\n  const { _targetObj, _targetCtx } = structureSetup;\r\n  const { _target, _host, _viewport } = _targetObj;\r\n  const initializationScrollbarSlot = !_targetCtx._targetIsElm && (target as ScrollbarsInitialization).scrollbarsSlot;\r\n  const initializationScrollbarSlotResult = isFunction(initializationScrollbarSlot)\r\n    ? initializationScrollbarSlot(_target, _host, _viewport)\r\n    : initializationScrollbarSlot;\r\n  const evaluatedScrollbarSlot =\r\n    initializationScrollbarSlotResult ||\r\n    (isFunction(environmentScrollbarSlot) ? environmentScrollbarSlot(_target, _host, _viewport) : environmentScrollbarSlot) ||\r\n    _host;\r\n\r\n  const horizontalScrollbarStructure = generateScrollbarDOM(classNameScrollbarHorizontal);\r\n  const verticalScrollbarStructure = generateScrollbarDOM(classNameScrollbarVertical);\r\n\r\n  const { _scrollbar: horizontalScrollbar } = horizontalScrollbarStructure;\r\n  const { _scrollbar: verticalScrollbar } = verticalScrollbarStructure;\r\n\r\n  appendChildren(evaluatedScrollbarSlot, horizontalScrollbar);\r\n  appendChildren(evaluatedScrollbarSlot, verticalScrollbar);\r\n\r\n  return {\r\n    _horizontalScrollbarStructure: horizontalScrollbarStructure,\r\n    _verticalScrollbarStructure: verticalScrollbarStructure,\r\n    _destroy() {\r\n      removeElements([horizontalScrollbar, verticalScrollbar]);\r\n    },\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  stopAndPrevent,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  isBoolean,\r\n  removeClass,\r\n  isObject,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\nexport interface SizeObserverOptions {\r\n  _direction?: boolean;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserverCallbackParams {\r\n  _sizeChanged: boolean;\r\n  _directionIsRTLCache?: CacheValues<boolean>;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _directionIsRTL: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst getElmDirectionIsRTL = (elm: HTMLElement): boolean => style(elm, 'direction') === 'rtl';\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\n/**\r\n * Creates a size observer which observes any size, padding, border, margin and box-sizing changes of the target element. Depending on the options also direction and appear can be observed.\r\n * @param target The target element which shall be observed.\r\n * @param onSizeChangedCallback The callback which gets called after a size change was detected.\r\n * @param options The options for size detection, whether to observe also direction and appear.\r\n * @returns A object which represents the instance of the size observer.\r\n */\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (params: SizeObserverCallbackParams) => any,\r\n  options?: SizeObserverOptions\r\n): SizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } =\r\n    options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(\r\n    `<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`\r\n  );\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const getIsDirectionRTL = getElmDirectionIsRTL.bind(0, sizeObserver);\r\n  const [updateResizeObserverContentRectCache] = createCache<\r\n    DOMRectReadOnly | undefined,\r\n    DOMRectReadOnly\r\n  >(0, {\r\n    _initialValue: undefined,\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (\r\n    sizeChangedContext?: CacheValues<boolean> | ResizeObserverEntry[] | Event | boolean\r\n  ) => {\r\n    const isResizeObserverCall =\r\n      isArray(sizeChangedContext) &&\r\n      sizeChangedContext.length > 0 &&\r\n      isObject(sizeChangedContext[0]);\r\n\r\n    const hasDirectionCache =\r\n      !isResizeObserverCall && isBoolean((sizeChangedContext as CacheValues<boolean>)[0]);\r\n\r\n    let skip = false;\r\n    let appear: boolean | number | undefined = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isResizeObserverCall) {\r\n      const [currRContentRect, , prevContentRect] = updateResizeObserverContentRectCache(\r\n        0,\r\n        (sizeChangedContext as ResizeObserverEntry[]).pop()!.contentRect\r\n      );\r\n      const hasDimensions = domRectHasDimensions(currRContentRect);\r\n      const hadDimensions = domRectHasDimensions(prevContentRect);\r\n      skip = !prevContentRect || !hasDimensions; // skip on initial RO. call or if display is none\r\n      appear = !hadDimensions && hasDimensions;\r\n\r\n      doDirectionScroll = !skip; // direction scroll when not skipping\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      [, doDirectionScroll] = sizeChangedContext as CacheValues<boolean>; // direction scroll when DirectionCache changed, false otherwise\r\n    }\r\n    // else if it triggered with appear from polyfill\r\n    else {\r\n      appear = sizeChangedContext === true;\r\n    }\r\n\r\n    if (observeDirectionChange && doDirectionScroll) {\r\n      const rtl = hasDirectionCache\r\n        ? (sizeChangedContext as CacheValues<boolean>)[0]\r\n        : getElmDirectionIsRTL(sizeObserver);\r\n      scrollLeft(\r\n        sizeObserver,\r\n        rtl\r\n          ? rtlScrollBehavior.n\r\n            ? -scrollAmount\r\n            : rtlScrollBehavior.i\r\n            ? 0\r\n            : scrollAmount\r\n          : scrollAmount\r\n      );\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback({\r\n        _sizeChanged: !hasDirectionCache,\r\n        _directionIsRTLCache: hasDirectionCache\r\n          ? (sizeChangedContext as CacheValues<boolean>)\r\n          : undefined,\r\n        _appear: !!appear,\r\n      });\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange\r\n    ? onSizeChangedCallbackProxy\r\n    : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => {\r\n      resizeObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(observerElementChildrenRoot);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = (appear?: unknown) => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy(appear === true);\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event | false) => {\r\n      currSize = offsetSize(observerElementChildrenRoot);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent) {\r\n        stopAndPrevent(scrollEvent);\r\n\r\n        if (isDirty && !rAFId) {\r\n          cAF!(rAFId);\r\n          rAFId = rAF!(onResized);\r\n        }\r\n      } else {\r\n        onResized(scrollEvent === false);\r\n      }\r\n\r\n      reset();\r\n    };\r\n\r\n    push(offListeners, [\r\n      on(expandElement, scrollEventName, onScroll),\r\n      on(shrinkElement, scrollEventName, onScroll),\r\n    ]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n\r\n    reset();\r\n\r\n    appearCallback = observeAppearChange ? onScroll.bind(0, false) : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(getIsDirectionRTL, {\r\n      _initialValue: !getIsDirectionRTL(), // invert current value to trigger initial change\r\n    });\r\n    const [updateDirectionIsRTLCache] = directionIsRTLCache;\r\n\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        const [directionIsRTL, directionIsRTLChanged] = directionIsRTLCacheValues;\r\n\r\n        if (directionIsRTLChanged) {\r\n          removeClass(listenerElement, 'ltr rtl');\r\n          if (directionIsRTL) {\r\n            addClass(listenerElement, 'rtl');\r\n          } else {\r\n            addClass(listenerElement, 'ltr');\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        stopAndPrevent(event);\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(sizeObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _directionIsRTL: directionIsRTLCache\r\n          ? directionIsRTLCache[1](force) // get current cache values\r\n          : [false, false, false],\r\n      };\r\n    },\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDiv,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport interface TrinsicObserver {\r\n  _destroy(): void;\r\n  _getCurrentCacheValues(\r\n    force?: boolean\r\n  ): {\r\n    _heightIntrinsic: CacheValues<boolean>;\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a trinsic observer which observes changes to intrinsic or extrinsic sizing for the height of the target element.\r\n * @param target The element which shall be observed.\r\n * @param onTrinsicChangedCallback The callback which gets called after a change was detected.\r\n * @returns A object which represents the instance of the trinsic observer.\r\n */\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): TrinsicObserver => {\r\n  const trinsicObserver = createDiv(classNameTrinsicObserver);\r\n  const offListeners: (() => void)[] = [];\r\n  const [updateHeightIntrinsicCache, getCurrentHeightIntrinsicCache] = createCache<\r\n    boolean,\r\n    IntersectionObserverEntry | WH<number>\r\n  >(\r\n    (ioEntryOrSize: IntersectionObserverEntry | WH<number>) =>\r\n      (ioEntryOrSize! as WH<number>).h === 0 ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).isIntersecting ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).intersectionRatio > 0,\r\n    {\r\n      _initialValue: false,\r\n    }\r\n  );\r\n\r\n  const triggerOnTrinsicChangedCallback = (\r\n    updateValue?: IntersectionObserverEntry | WH<number>\r\n  ) => {\r\n    if (updateValue) {\r\n      const heightIntrinsic = updateHeightIntrinsicCache(0, updateValue);\r\n      const [, heightIntrinsicChanged] = heightIntrinsic;\r\n\r\n      if (heightIntrinsicChanged) {\r\n        onTrinsicChangedCallback(heightIntrinsic);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          triggerOnTrinsicChangedCallback(entries.pop());\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => {\r\n      intersectionObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const onSizeChanged = () => {\r\n      const newSize = offsetSize(trinsicObserver);\r\n      triggerOnTrinsicChangedCallback(newSize);\r\n    };\r\n    push(offListeners, createSizeObserver(trinsicObserver, onSizeChanged)._destroy);\r\n    onSizeChanged();\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return {\r\n    _destroy() {\r\n      runEach(offListeners);\r\n      removeElements(trinsicObserver);\r\n    },\r\n    _getCurrentCacheValues(force?: boolean) {\r\n      return {\r\n        _heightIntrinsic: getCurrentHeightIntrinsicCache(force),\r\n      };\r\n    },\r\n  };\r\n};\r\n","import { each, noop, debounce, indexOf, isString, MutationObserverConstructor, isEmptyArray, on, attr, is, find, push } from 'support';\r\n\r\ntype DOMContentObserverCallback = (contentChangedTroughEvent: boolean) => any;\r\n\r\ntype DOMTargetObserverCallback = (targetChangedAttrs: string[], targetStyleChanged: boolean) => any;\r\n\r\ninterface DOMObserverOptionsBase {\r\n  _attributes?: string[];\r\n  _styleChangingAttributes?: string[];\r\n}\r\n\r\ninterface DOMContentObserverOptions extends DOMObserverOptionsBase {\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname(s) | function returning eventname(s)] -> eventnames divided by whitespaces\r\n  _nestedTargetSelector?: string;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange; // function which will prevent marking certain dom changes as content change if it returns true\r\n  _ignoreNestedTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed on nested targets if it returns true\r\n}\r\n\r\ninterface DOMTargetObserverOptions extends DOMObserverOptionsBase {\r\n  _ignoreTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed if it returns true\r\n}\r\n\r\ntype ContentChangeArrayItem = [string?, string?] | null | undefined;\r\n\r\nexport type DOMObserverEventContentChange = Array<ContentChangeArrayItem> | false | null | undefined;\r\n\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions?: DOMContentObserverOptions\r\n) => boolean;\r\n\r\nexport type DOMObserverIgnoreTargetChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\n\r\nexport type DOMObserverCallback<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverCallback\r\n  : DOMTargetObserverCallback;\r\n\r\nexport type DOMObserverOptions<ContentObserver extends boolean> = ContentObserver extends true ? DOMContentObserverOptions : DOMTargetObserverOptions;\r\n\r\nexport interface DOMObserver {\r\n  _destroy: () => void;\r\n  _update: () => void;\r\n}\r\n\r\n/**\r\n * Creates a set of helper functions to observe events of elements inside the target element.\r\n * @param target The target element of which the children elements shall be observed. (not only direct children but also nested ones)\r\n * @param eventContentChange The event content change array. (array of tuples: selector and eventname(s))\r\n * @param callback Callback which is called if one of the elements emits the corresponding event.\r\n * @returns A object which contains a set of helper functions to destroy and update the observation of elements.\r\n */\r\nconst createEventContentChange = (target: Element, callback: (...args: any) => any, eventContentChange?: DOMObserverEventContentChange) => {\r\n  let map: WeakMap<Node, [string, () => any]> | undefined; // weak map to prevent memory leak for detached elements\r\n  let destroyed = false;\r\n  const _destroy = () => {\r\n    destroyed = true;\r\n  };\r\n  const _updateElements = (getElements?: (selector: string) => Node[]) => {\r\n    if (eventContentChange) {\r\n      const eventElmList = eventContentChange.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventNames = item[1];\r\n          const elements = eventNames && selector && (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements && elements.length && eventNames && isString(eventNames)) {\r\n            push(arr, [elements, eventNames.trim()], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) =>\r\n        each(item[0], (elm) => {\r\n          const eventNames = item[1];\r\n          const entry = map!.get(elm);\r\n\r\n          if (entry) {\r\n            const entryEventNames = entry[0];\r\n            const entryOff = entry[1];\r\n\r\n            // in case an already registered element is registered again, unregister the previous events\r\n            if (entryEventNames === eventNames) {\r\n              entryOff();\r\n            }\r\n          }\r\n\r\n          const off = on(elm, eventNames, (event: Event) => {\r\n            if (destroyed) {\r\n              off();\r\n              map!.delete(elm);\r\n            } else {\r\n              callback(event);\r\n            }\r\n          });\r\n          map!.set(elm, [eventNames, off]);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    map = new WeakMap();\r\n    _updateElements();\r\n  }\r\n\r\n  return {\r\n    _destroy,\r\n    _updateElements,\r\n  };\r\n};\r\n\r\n/**\r\n * Creates a DOM observer which observes DOM changes to either the target element or its children.\r\n * @param target The element which shall be observed.\r\n * @param isContentObserver Whether this observer is just observing the target or just the targets children. (not only direct children but also nested ones)\r\n * @param callback The callback which gets called if a change was detected.\r\n * @param options The options for DOM change detection.\r\n * @returns A object which represents the instance of the DOM observer.\r\n */\r\nexport const createDOMObserver = <ContentObserver extends boolean>(\r\n  target: HTMLElement,\r\n  isContentObserver: ContentObserver,\r\n  callback: DOMObserverCallback<ContentObserver>,\r\n  options?: DOMObserverOptions<ContentObserver>\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetChange,\r\n    _ignoreNestedTargetChange,\r\n    _ignoreContentChange,\r\n  } = (options as DOMContentObserverOptions & DOMTargetObserverOptions) || {};\r\n  const { _destroy: destroyEventContentChange, _updateElements: updateEventContentChangeElements } = createEventContentChange(\r\n    target,\r\n    debounce(\r\n      () => {\r\n        if (isConnected) {\r\n          (callback as DOMContentObserverCallback)(true);\r\n        }\r\n      },\r\n      { _timeout: 33, _maxDelay: 99 }\r\n    ),\r\n    _eventContentChange\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes);\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange = (isContentObserver ? _ignoreNestedTargetChange : _ignoreTargetChange) || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue = isAttributesType && isString(attributeName) ? attr(mutationTarget as HTMLElement, attributeName!) : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const styleChangingAttrChanged = indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      // if is content observer and something changed in children\r\n      if (isContentObserver && !targetIsMutationTarget) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged;\r\n        const isNestedTarget = contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged = baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      // if is target observer and target attr changed\r\n      if (\r\n        !isContentObserver &&\r\n        targetIsMutationTarget &&\r\n        attributeChanged &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null)\r\n      ) {\r\n        push(targetChangedAttrs, attributeName!);\r\n        targetStyleChanged = targetStyleChanged || styleChangingAttrChanged;\r\n      }\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      // adds / removes the new elements from the event content change\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n\r\n    if (isContentObserver) {\r\n      contentChanged && (callback as DOMContentObserverCallback)(false);\r\n    } else if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged) {\r\n      (callback as DOMTargetObserverCallback)(targetChangedAttrs, targetStyleChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: isContentObserver,\r\n    childList: isContentObserver,\r\n    characterData: isContentObserver,\r\n  });\r\n  isConnected = true;\r\n\r\n  return {\r\n    _destroy: () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    _update: () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  };\r\n};\r\n","import {\r\n  CacheValues,\r\n  diffClass,\r\n  debounce,\r\n  isArray,\r\n  isNumber,\r\n  each,\r\n  indexOf,\r\n  isString,\r\n  attr,\r\n  removeAttr,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport { createSizeObserver, SizeObserverCallbackParams } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver, DOMObserver } from 'observers/domObserver';\r\nimport { LifecycleHub, LifecycleCheckOption, LifecycleUpdateHints } from 'lifecycles/lifecycleHub';\r\n\r\n// const hostSelector = `.${classNameHost}`;\r\n\r\n// TODO: observer textarea attrs if textarea\r\n// TODO: test _ignoreContentChange & _ignoreNestedTargetChange for content dom observer\r\n// TODO: test _ignoreTargetChange for target dom observer\r\n\r\n// const viewportSelector = `.${classNameViewport}`;\r\n// const contentSelector = `.${classNameContent}`;\r\nconst ignorePrefix = 'os-';\r\nconst viewportAttrsFromTarget = ['tabindex'];\r\nconst baseStyleChangingAttrsTextarea = ['wrap', 'cols', 'rows'];\r\nconst baseStyleChangingAttrs = ['id', 'class', 'style', 'open'];\r\n\r\nconst ignoreTargetChange = (\r\n  target: Node,\r\n  attrName: string,\r\n  oldValue: string | null,\r\n  newValue: string | null\r\n) => {\r\n  if (attrName === 'class' && oldValue && newValue) {\r\n    const diff = diffClass(oldValue, newValue);\r\n    return !!diff.find((addedOrRemovedClass) => addedOrRemovedClass.indexOf(ignorePrefix) !== 0);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const lifecycleHubOservers = (\r\n  instance: LifecycleHub,\r\n  updateLifecycles: (updateHints?: Partial<LifecycleUpdateHints> | null) => unknown\r\n) => {\r\n  let debounceTimeout: number | false | undefined;\r\n  let debounceMaxDelay: number | false | undefined;\r\n  let contentMutationObserver: DOMObserver | undefined;\r\n  const { _structureSetup } = instance;\r\n  const { _targetObj, _targetCtx } = _structureSetup;\r\n  const { _host, _viewport, _content } = _targetObj;\r\n  const { _isTextarea } = _targetCtx;\r\n  const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n  const contentMutationObserverAttr = _isTextarea\r\n    ? baseStyleChangingAttrsTextarea\r\n    : baseStyleChangingAttrs.concat(baseStyleChangingAttrsTextarea);\r\n  const updateLifecyclesWithDebouncedAdaptiveUpdateHints = debounce(\r\n    updateLifecycles as (updateHints: Partial<LifecycleUpdateHints>) => any,\r\n    {\r\n      _timeout: () => debounceTimeout,\r\n      _maxDelay: () => debounceMaxDelay,\r\n      _mergeParams(prev, curr) {\r\n        const {\r\n          _sizeChanged: prevSizeChanged,\r\n          _hostMutation: prevHostMutation,\r\n          _contentMutation: prevContentMutation,\r\n        } = prev[0];\r\n        const {\r\n          _sizeChanged: currSizeChanged,\r\n          _hostMutation: currvHostMutation,\r\n          _contentMutation: currContentMutation,\r\n        } = curr[0];\r\n        const merged: [Partial<LifecycleUpdateHints>] = [\r\n          {\r\n            _sizeChanged: prevSizeChanged || currSizeChanged,\r\n            _hostMutation: prevHostMutation || currvHostMutation,\r\n            _contentMutation: prevContentMutation || currContentMutation,\r\n          },\r\n        ];\r\n\r\n        return merged;\r\n      },\r\n    }\r\n  );\r\n\r\n  const updateViewportAttrsFromHost = (attributes?: string[]) => {\r\n    each(attributes || viewportAttrsFromTarget, (attribute) => {\r\n      if (indexOf(viewportAttrsFromTarget, attribute) > -1) {\r\n        const hostAttr = attr(_host, attribute);\r\n        if (isString(hostAttr)) {\r\n          attr(_viewport, attribute, hostAttr);\r\n        } else {\r\n          removeAttr(_viewport, attribute);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsic: CacheValues<boolean>) => {\r\n    updateLifecycles({\r\n      _heightIntrinsic: heightIntrinsic,\r\n    });\r\n  };\r\n  const onSizeChanged = ({\r\n    _sizeChanged,\r\n    _directionIsRTLCache,\r\n    _appear,\r\n  }: SizeObserverCallbackParams) => {\r\n    const updateFn =\r\n      !_sizeChanged || _appear\r\n        ? updateLifecycles\r\n        : updateLifecyclesWithDebouncedAdaptiveUpdateHints;\r\n    updateFn({\r\n      _sizeChanged,\r\n      _directionIsRTL: _directionIsRTLCache,\r\n    });\r\n  };\r\n  const onContentMutation = (contentChangedTroughEvent: boolean) => {\r\n    // if contentChangedTroughEvent is true its already debounced\r\n    const updateFn = contentChangedTroughEvent\r\n      ? updateLifecycles\r\n      : updateLifecyclesWithDebouncedAdaptiveUpdateHints;\r\n    updateFn({\r\n      _contentMutation: true,\r\n    });\r\n  };\r\n  const onHostMutation = (targetChangedAttrs: string[], targetStyleChanged: boolean) => {\r\n    if (targetStyleChanged) {\r\n      updateLifecyclesWithDebouncedAdaptiveUpdateHints({\r\n        _hostMutation: true,\r\n      });\r\n    } else {\r\n      updateViewportAttrsFromHost(targetChangedAttrs);\r\n    }\r\n  };\r\n\r\n  const trinsicObserver =\r\n    (_content || !_flexboxGlue) && createTrinsicObserver(_host, onTrinsicChanged);\r\n  const sizeObserver = createSizeObserver(_host, onSizeChanged, {\r\n    _appear: true,\r\n    _direction: !_nativeScrollbarStyling,\r\n  });\r\n  const hostMutationObserver = createDOMObserver(_host, false, onHostMutation, {\r\n    _styleChangingAttributes: baseStyleChangingAttrs,\r\n    _attributes: baseStyleChangingAttrs.concat(viewportAttrsFromTarget),\r\n    _ignoreTargetChange: ignoreTargetChange,\r\n  });\r\n\r\n  const updateOptions = (checkOption: LifecycleCheckOption) => {\r\n    const [elementEvents, elementEventsChanged] = checkOption<Array<[string, string]> | null>(\r\n      'updating.elementEvents'\r\n    );\r\n    const [attributes, attributesChanged] = checkOption<string[] | null>('updating.attributes');\r\n    const [debounceValue, debounceChanged] = checkOption<Array<number> | number | null>(\r\n      'updating.debounce'\r\n    );\r\n    const updateContentMutationObserver = elementEventsChanged || attributesChanged;\r\n\r\n    if (updateContentMutationObserver) {\r\n      if (contentMutationObserver) {\r\n        contentMutationObserver._update();\r\n        contentMutationObserver._destroy();\r\n      }\r\n      contentMutationObserver = createDOMObserver(_content || _viewport, true, onContentMutation, {\r\n        _styleChangingAttributes: contentMutationObserverAttr.concat(attributes || []),\r\n        _attributes: contentMutationObserverAttr.concat(attributes || []),\r\n        _eventContentChange: elementEvents,\r\n        _ignoreNestedTargetChange: ignoreTargetChange,\r\n        // _nestedTargetSelector: hostSelector,\r\n        /*\r\n        _ignoreContentChange: (mutation, isNestedTarget) => {\r\n          const { target, attributeName } = mutation;\r\n          return isNestedTarget\r\n            ? false\r\n            : attributeName\r\n            ? liesBetween(target as Element, hostSelector, viewportSelector) || liesBetween(target as Element, hostSelector, contentSelector)\r\n            : false;\r\n        },\r\n        */\r\n      });\r\n    }\r\n\r\n    if (debounceChanged) {\r\n      updateLifecyclesWithDebouncedAdaptiveUpdateHints._flush();\r\n      if (isArray(debounceValue)) {\r\n        const timeout = debounceValue[0];\r\n        const maxWait = debounceValue[1];\r\n        debounceTimeout = isNumber(timeout) ? timeout : false;\r\n        debounceMaxDelay = isNumber(maxWait) ? maxWait : false;\r\n      } else if (isNumber(debounceValue)) {\r\n        debounceTimeout = debounceValue;\r\n        debounceMaxDelay = false;\r\n      } else {\r\n        debounceTimeout = false;\r\n        debounceMaxDelay = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  updateViewportAttrsFromHost();\r\n\r\n  return {\r\n    _trinsicObserver: trinsicObserver,\r\n    _sizeObserver: sizeObserver,\r\n    _updateObserverOptions: updateOptions,\r\n    _destroy() {\r\n      contentMutationObserver && contentMutationObserver._destroy();\r\n      trinsicObserver && trinsicObserver._destroy();\r\n      sizeObserver._destroy();\r\n      hostMutationObserver._destroy();\r\n    },\r\n  };\r\n};\r\n","import { style } from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the trinsic behavior of the content element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createTrinsicLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup } = lifecycleHub;\r\n  const { _content } = _structureSetup._targetObj;\r\n\r\n  return (updateHints) => {\r\n    const { _heightIntrinsic } = updateHints;\r\n    const [heightIntrinsic, heightIntrinsicChanged] = _heightIntrinsic;\r\n\r\n    if (heightIntrinsicChanged) {\r\n      style(_content, {\r\n        height: heightIntrinsic ? '' : '100%',\r\n        display: heightIntrinsic ? '' : 'inline',\r\n      });\r\n    }\r\n\r\n    return {\r\n      _sizeChanged: heightIntrinsicChanged,\r\n      _contentMutation: heightIntrinsicChanged,\r\n    };\r\n  };\r\n};\r\n","import { createCache, topRightBottomLeft, equalTRBL, style, TRBL } from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\nimport { StyleObject } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the padding styling of the padding and viewport element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createPaddingLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup, _setLifecycleCommunication } = lifecycleHub;\r\n  const { _host, _padding, _viewport } = _structureSetup._targetObj;\r\n  const [updatePaddingCache, currentPaddingCache] = createCache<TRBL>(\r\n    topRightBottomLeft.bind(0, _host, 'padding'),\r\n    {\r\n      _equal: equalTRBL,\r\n      _initialValue: topRightBottomLeft(),\r\n    }\r\n  );\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    let [padding, paddingChanged] = currentPaddingCache(force);\r\n    const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n    const { _sizeChanged, _directionIsRTL, _contentMutation } = updateHints;\r\n    const [directionIsRTL, directionChanged] = _directionIsRTL;\r\n    const [paddingAbsolute, paddingAbsoluteChanged] = checkOption('paddingAbsolute');\r\n    const contentMutation = !_flexboxGlue && _contentMutation;\r\n\r\n    if (_sizeChanged || paddingChanged || contentMutation) {\r\n      [padding, paddingChanged] = updatePaddingCache(force);\r\n    }\r\n\r\n    const paddingStyleChanged = paddingAbsoluteChanged || directionChanged || paddingChanged;\r\n\r\n    if (paddingStyleChanged) {\r\n      // if there is no padding element and no scrollbar styling, paddingAbsolute isn't supported\r\n      const paddingRelative = !paddingAbsolute || (!_padding && !_nativeScrollbarStyling);\r\n      const paddingHorizontal = padding!.r + padding!.l;\r\n      const paddingVertical = padding!.t + padding!.b;\r\n\r\n      const paddingStyle: StyleObject = {\r\n        marginRight: paddingRelative && !directionIsRTL ? -paddingHorizontal : 0,\r\n        marginBottom: paddingRelative ? -paddingVertical : 0,\r\n        marginLeft: paddingRelative && directionIsRTL ? -paddingHorizontal : 0,\r\n        top: paddingRelative ? -padding!.t : 0,\r\n        right: paddingRelative ? (directionIsRTL ? -padding!.r : 'auto') : 0,\r\n        left: paddingRelative ? (directionIsRTL ? 'auto' : -padding!.l) : 0,\r\n        width: paddingRelative ? `calc(100% + ${paddingHorizontal}px)` : '',\r\n      };\r\n      const viewportStyle: StyleObject = {\r\n        paddingTop: paddingRelative ? padding!.t : 0,\r\n        paddingRight: paddingRelative ? padding!.r : 0,\r\n        paddingBottom: paddingRelative ? padding!.b : 0,\r\n        paddingLeft: paddingRelative ? padding!.l : 0,\r\n      };\r\n\r\n      // if there is no padding element apply the style to the viewport element instead\r\n      style(_padding || _viewport, paddingStyle);\r\n      style(_viewport, viewportStyle);\r\n\r\n      _setLifecycleCommunication({\r\n        _paddingInfo: {\r\n          _absolute: !paddingRelative,\r\n          _padding: padding!,\r\n        },\r\n        _viewportPaddingStyle: _padding\r\n          ? viewportStyle\r\n          : {\r\n              ...paddingStyle,\r\n              ...viewportStyle,\r\n            },\r\n      });\r\n    }\r\n\r\n    return {\r\n      _paddingStyleChanged: paddingStyleChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  keys,\r\n  attr,\r\n  WH,\r\n  XY,\r\n  style,\r\n  scrollSize,\r\n  CacheValues,\r\n  equalWH,\r\n  addClass,\r\n  removeClass,\r\n  clientSize,\r\n  offsetSize,\r\n  getBoundingClientRect,\r\n  noop,\r\n  each,\r\n} from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverflowBehavior } from 'options';\r\nimport { StyleObject } from 'typings';\r\nimport { classNameViewportArrange, classNameViewportScrollbarStyling } from 'classnames';\r\n\r\ninterface OverflowAmountCacheContext {\r\n  _viewportScrollSize: WH<number>;\r\n  _viewportClientSize: WH<number>;\r\n  _viewportSizeFraction: WH<number>;\r\n}\r\n\r\ninterface ViewportOverflowState {\r\n  _scrollbarsHideOffset: XY<number>;\r\n  _scrollbarsHideOffsetArrange: XY<boolean>;\r\n  _overflowScroll: XY<boolean>;\r\n}\r\n\r\ninterface UndoViewportArrangeResult {\r\n  _redoViewportArrange: () => void;\r\n  _viewportOverflowState?: ViewportOverflowState;\r\n}\r\n\r\ninterface OverflowOption {\r\n  x: OverflowBehavior;\r\n  y: OverflowBehavior;\r\n}\r\n\r\nconst { max, abs, round } = Math;\r\nconst overlaidScrollbarsHideOffset = 42;\r\nconst whCacheOptions = {\r\n  _equal: equalWH,\r\n  _initialValue: { w: 0, h: 0 },\r\n};\r\nconst sizeFraction = (elm: HTMLElement): WH<number> => {\r\n  const viewportOffsetSize = offsetSize(elm);\r\n  const viewportRect = getBoundingClientRect(elm);\r\n  return {\r\n    w: viewportRect.width - viewportOffsetSize.w,\r\n    h: viewportRect.height - viewportOffsetSize.h,\r\n  };\r\n};\r\nconst fractionalPixelRatioTollerance = () => (window.devicePixelRatio % 1 === 0 ? 0 : 1);\r\nconst setAxisOverflowStyle = (\r\n  horizontal: boolean,\r\n  overflowAmount: number,\r\n  behavior: OverflowBehavior,\r\n  styleObj: StyleObject\r\n) => {\r\n  const overflowKey: keyof StyleObject = horizontal ? 'overflowX' : 'overflowY';\r\n  const behaviorIsVisible = behavior.indexOf('visible') === 0;\r\n  const behaviorIsVisibleHidden = behavior === 'visible-hidden';\r\n  const behaviorIsScroll = behavior === 'scroll';\r\n  const hasOverflow = overflowAmount > 0;\r\n\r\n  if (behaviorIsVisible) {\r\n    styleObj[overflowKey] = 'visible';\r\n  }\r\n  if (behaviorIsScroll && hasOverflow) {\r\n    styleObj[overflowKey] = behavior;\r\n  }\r\n\r\n  return {\r\n    _visible: behaviorIsVisible,\r\n    _behavior: behaviorIsVisibleHidden ? 'hidden' : 'scroll',\r\n  };\r\n};\r\n\r\n/**\r\n * Lifecycle with the responsibility to set the correct overflow and scrollbar hiding styles of the viewport element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createOverflowLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const {\r\n    _structureSetup,\r\n    _doViewportArrange,\r\n    _getLifecycleCommunication,\r\n    _setLifecycleCommunication,\r\n  } = lifecycleHub;\r\n\r\n  const { _host, _viewport, _viewportArrange } = _structureSetup._targetObj;\r\n\r\n  const [updateViewportSizeFraction, getCurrentViewportSizeFraction] = createCache<WH<number>>(\r\n    sizeFraction.bind(0, _viewport),\r\n    whCacheOptions\r\n  );\r\n\r\n  const [updateViewportScrollSizeCache, getCurrentViewportScrollSizeCache] = createCache<\r\n    WH<number>\r\n  >(scrollSize.bind(0, _viewport), whCacheOptions);\r\n\r\n  const [updateOverflowAmountCache, getCurrentOverflowAmountCache] = createCache<\r\n    WH<number>,\r\n    OverflowAmountCacheContext\r\n  >(\r\n    ({ _viewportScrollSize, _viewportClientSize, _viewportSizeFraction }) => ({\r\n      w: max(\r\n        0,\r\n        round(\r\n          max(0, _viewportScrollSize.w - _viewportClientSize.w) -\r\n            (fractionalPixelRatioTollerance() || max(0, _viewportSizeFraction.w))\r\n        )\r\n      ),\r\n      h: max(\r\n        0,\r\n        round(\r\n          max(0, _viewportScrollSize.h - _viewportClientSize.h) -\r\n            (fractionalPixelRatioTollerance() || max(0, _viewportSizeFraction.h))\r\n        )\r\n      ),\r\n    }),\r\n    whCacheOptions\r\n  );\r\n\r\n  /**\r\n   * Applies a fixed height to the viewport so it can't overflow or underflow the host element.\r\n   * @param viewportOverflowState The current overflow state.\r\n   * @param heightIntrinsic Whether the host height is intrinsic or not.\r\n   */\r\n  const fixFlexboxGlue = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    heightIntrinsic: boolean\r\n  ) => {\r\n    style(_viewport, {\r\n      height: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      const { _nativeScrollbarIsOverlaid } = getEnvironment();\r\n      const {\r\n        _absolute: paddingAbsolute,\r\n        _padding: padding,\r\n      } = _getLifecycleCommunication()._paddingInfo;\r\n      const { _overflowScroll, _scrollbarsHideOffset } = viewportOverflowState;\r\n      const hostSizeFraction = sizeFraction(_host);\r\n      const hostClientSize = clientSize(_host);\r\n      // padding subtraction is only needed if padding is absolute or if viewport is content-box\r\n      const isContentBox = style(_viewport, 'boxSizing') === 'content-box';\r\n      const paddingVertical = paddingAbsolute || isContentBox ? padding.b + padding.t : 0;\r\n      const fractionalClientHeight =\r\n        hostClientSize.h + (abs(hostSizeFraction.h) < 1 ? hostSizeFraction.h : 0);\r\n      const subtractXScrollbar = !(_nativeScrollbarIsOverlaid.x && isContentBox);\r\n\r\n      style(_viewport, {\r\n        height:\r\n          fractionalClientHeight +\r\n          (_overflowScroll.x && subtractXScrollbar ? _scrollbarsHideOffset.x : 0) -\r\n          paddingVertical,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the current overflow state of the viewport.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param viewportStyleObj The viewport style object where the overflow scroll property can be read of, or undefined if shall be determined.\r\n   * @returns A object which contains informations about the current overflow state.\r\n   */\r\n  const getViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    viewportStyleObj?: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const {\r\n      _nativeScrollbarSize,\r\n      _nativeScrollbarIsOverlaid,\r\n      _nativeScrollbarStyling,\r\n    } = getEnvironment();\r\n    const { x: overlaidX, y: overlaidY } = _nativeScrollbarIsOverlaid;\r\n    const determineOverflow = !viewportStyleObj;\r\n    const arrangeHideOffset =\r\n      !_nativeScrollbarStyling && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const styleObj = determineOverflow\r\n      ? style(_viewport, ['overflowX', 'overflowY'])\r\n      : viewportStyleObj;\r\n    const scroll = {\r\n      x: styleObj!.overflowX === 'scroll',\r\n      y: styleObj!.overflowY === 'scroll',\r\n    };\r\n    const scrollbarsHideOffset = {\r\n      x:\r\n        scroll.x && !_nativeScrollbarStyling\r\n          ? overlaidX\r\n            ? arrangeHideOffset\r\n            : _nativeScrollbarSize.x\r\n          : 0,\r\n      y:\r\n        scroll.y && !_nativeScrollbarStyling\r\n          ? overlaidY\r\n            ? arrangeHideOffset\r\n            : _nativeScrollbarSize.y\r\n          : 0,\r\n    };\r\n\r\n    return {\r\n      _overflowScroll: scroll,\r\n      _scrollbarsHideOffsetArrange: {\r\n        x: overlaidX && !!arrangeHideOffset,\r\n        y: overlaidY && !!arrangeHideOffset,\r\n      },\r\n      _scrollbarsHideOffset: scrollbarsHideOffset,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Sets the overflow property of the viewport and calculates the a overflow state according to the new parameters.\r\n   * @param showNativeOverlaidScrollbars Whether to show natively overlaid scrollbars.\r\n   * @param overflowAmount The overflow amount.\r\n   * @param overflow The overflow behavior according to the options.\r\n   * @param viewportStyleObj The viewport style object to which the overflow style shall be applied.\r\n   * @returns A object which represents the newly set overflow state.\r\n   */\r\n  const setViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    overflowAmount: WH<number>,\r\n    overflow: OverflowOption,\r\n    viewportStyleObj: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const { _visible: xVisible, _behavior: xVisibleBehavior } = setAxisOverflowStyle(\r\n      true,\r\n      overflowAmount!.w,\r\n      overflow.x,\r\n      viewportStyleObj\r\n    );\r\n    const { _visible: yVisible, _behavior: yVisibleBehavior } = setAxisOverflowStyle(\r\n      false,\r\n      overflowAmount!.h,\r\n      overflow.y,\r\n      viewportStyleObj\r\n    );\r\n\r\n    if (xVisible && !yVisible) {\r\n      viewportStyleObj.overflowX = xVisibleBehavior;\r\n    }\r\n    if (yVisible && !xVisible) {\r\n      viewportStyleObj.overflowY = yVisibleBehavior;\r\n    }\r\n\r\n    return getViewportOverflowState(showNativeOverlaidScrollbars, viewportStyleObj);\r\n  };\r\n\r\n  /**\r\n   * Sets the styles of the viewport arrange element.\r\n   * @param viewportOverflowState The viewport overflow state according to which the scrollbars shall be hidden.\r\n   * @param viewportScrollSize The content scroll size.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @returns A boolean which indicates whether the viewport arrange element was adjusted.\r\n   */\r\n  const arrangeViewport = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    viewportScrollSize: WH<number>,\r\n    viewportSizeFraction: WH<number>,\r\n    directionIsRTL: boolean\r\n  ) => {\r\n    if (_doViewportArrange) {\r\n      const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n      const { _viewportPaddingStyle: viewportPaddingStyle } = _getLifecycleCommunication();\r\n      const viewportArrangeHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n        ? 'paddingRight'\r\n        : 'paddingLeft';\r\n      const viewportArrangeHorizontalPaddingValue = viewportPaddingStyle[\r\n        viewportArrangeHorizontalPaddingKey\r\n      ] as number;\r\n      const viewportArrangeVerticalPaddingValue = viewportPaddingStyle.paddingTop as number;\r\n      const fractionalContentWidth =\r\n        viewportScrollSize.w + (abs(viewportSizeFraction.w) < 1 ? viewportSizeFraction.w : 0);\r\n      const fractionalContenHeight =\r\n        viewportScrollSize.h + (abs(viewportSizeFraction.h) < 1 ? viewportSizeFraction.h : 0);\r\n      const arrangeSize = {\r\n        w:\r\n          hideOffsetY && arrangeY\r\n            ? `${hideOffsetY + fractionalContentWidth - viewportArrangeHorizontalPaddingValue}px`\r\n            : '',\r\n        h:\r\n          hideOffsetX && arrangeX\r\n            ? `${hideOffsetX + fractionalContenHeight - viewportArrangeVerticalPaddingValue}px`\r\n            : '',\r\n      };\r\n\r\n      // adjust content arrange / before element\r\n      if (_viewportArrange) {\r\n        const { sheet } = _viewportArrange;\r\n        if (sheet) {\r\n          const { cssRules } = sheet;\r\n          if (cssRules) {\r\n            if (!cssRules.length) {\r\n              sheet.insertRule(\r\n                `#${attr(_viewportArrange, 'id')} + .${classNameViewportArrange}::before {}`,\r\n                0\r\n              );\r\n            }\r\n\r\n            // @ts-ignore\r\n            const ruleStyle = cssRules[0].style;\r\n\r\n            ruleStyle.width = arrangeSize.w;\r\n            ruleStyle.height = arrangeSize.h;\r\n          }\r\n        }\r\n      } else {\r\n        style<'--os-vaw' | '--os-vah'>(_viewport, {\r\n          '--os-vaw': arrangeSize.w,\r\n          '--os-vah': arrangeSize.h,\r\n        });\r\n      }\r\n    }\r\n\r\n    return _doViewportArrange;\r\n  };\r\n\r\n  /**\r\n   * Hides the native scrollbars according to the passed parameters.\r\n   * @param viewportOverflowState The viewport overflow state.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportArrange Whether special styles related to the viewport arrange strategy shall be applied.\r\n   * @param viewportStyleObj The viewport style object to which the needed styles shall be applied.\r\n   */\r\n  const hideNativeScrollbars = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    directionIsRTL: boolean,\r\n    viewportArrange: boolean,\r\n    viewportStyleObj: StyleObject\r\n  ) => {\r\n    const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n    const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n    const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n    const { _viewportPaddingStyle: viewportPaddingStyle } = _getLifecycleCommunication();\r\n    const horizontalMarginKey: keyof StyleObject = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const viewportHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n      ? 'paddingLeft'\r\n      : 'paddingRight';\r\n    const horizontalMarginValue = viewportPaddingStyle[horizontalMarginKey] as number;\r\n    const verticalMarginValue = viewportPaddingStyle.marginBottom as number;\r\n    const horizontalPaddingValue = viewportPaddingStyle[viewportHorizontalPaddingKey] as number;\r\n    const verticalPaddingValue = viewportPaddingStyle.paddingBottom as number;\r\n\r\n    // horizontal\r\n    viewportStyleObj.width = `calc(100% + ${hideOffsetY + horizontalMarginValue * -1}px)`;\r\n    viewportStyleObj[horizontalMarginKey] = -hideOffsetY + horizontalMarginValue;\r\n\r\n    // vertical\r\n    viewportStyleObj.marginBottom = -hideOffsetX + verticalMarginValue;\r\n\r\n    // viewport arrange additional styles\r\n    if (viewportArrange) {\r\n      viewportStyleObj[viewportHorizontalPaddingKey] =\r\n        horizontalPaddingValue + (arrangeY ? hideOffsetY : 0);\r\n      viewportStyleObj.paddingBottom = verticalPaddingValue + (arrangeX ? hideOffsetX : 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes all styles applied because of the viewport arrange strategy.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportOverflowState The currentviewport overflow state or undefined if it has to be determined.\r\n   * @returns A object with a function which applies all the removed styles and the determined viewport vverflow state.\r\n   */\r\n  const undoViewportArrange = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    directionIsRTL: boolean,\r\n    viewportOverflowState?: ViewportOverflowState\r\n  ): UndoViewportArrangeResult => {\r\n    if (_doViewportArrange) {\r\n      const finalViewportOverflowState =\r\n        viewportOverflowState || getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      const { _viewportPaddingStyle: viewportPaddingStyle } = _getLifecycleCommunication();\r\n      const { _flexboxGlue } = getEnvironment();\r\n      const { _scrollbarsHideOffsetArrange } = finalViewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const finalPaddingStyle: StyleObject = {};\r\n      const assignProps = (props: string) =>\r\n        each(props.split(' '), (prop) => {\r\n          finalPaddingStyle[prop] = viewportPaddingStyle[prop];\r\n        });\r\n\r\n      if (!_flexboxGlue) {\r\n        finalPaddingStyle.height = '';\r\n      }\r\n\r\n      if (arrangeX) {\r\n        assignProps('marginBottom paddingTop paddingBottom');\r\n      }\r\n\r\n      if (arrangeY) {\r\n        assignProps('marginLeft marginRight paddingLeft paddingRight');\r\n      }\r\n\r\n      const prevStyle = style(_viewport, keys(finalPaddingStyle));\r\n      removeClass(_viewport, classNameViewportArrange);\r\n      style(_viewport, finalPaddingStyle);\r\n\r\n      return {\r\n        _redoViewportArrange: () => {\r\n          hideNativeScrollbars(\r\n            finalViewportOverflowState,\r\n            directionIsRTL,\r\n            _doViewportArrange,\r\n            prevStyle\r\n          );\r\n          style(_viewport, prevStyle);\r\n          addClass(_viewport, classNameViewportArrange);\r\n        },\r\n        _viewportOverflowState: finalViewportOverflowState,\r\n      };\r\n    }\r\n    return {\r\n      _redoViewportArrange: noop,\r\n    };\r\n  };\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    const {\r\n      _directionIsRTL,\r\n      _heightIntrinsic,\r\n      _sizeChanged,\r\n      _hostMutation,\r\n      _contentMutation,\r\n      _paddingStyleChanged,\r\n    } = updateHints;\r\n    const { _flexboxGlue, _nativeScrollbarStyling, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n    const [heightIntrinsic, heightIntrinsicChanged] = _heightIntrinsic;\r\n    const [directionIsRTL, directionChanged] = _directionIsRTL;\r\n    const [showNativeOverlaidScrollbarsOption, showNativeOverlaidScrollbarsChanged] = checkOption<\r\n      boolean\r\n    >('nativeScrollbarsOverlaid.show');\r\n    const showNativeOverlaidScrollbars =\r\n      showNativeOverlaidScrollbarsOption &&\r\n      _nativeScrollbarIsOverlaid.x &&\r\n      _nativeScrollbarIsOverlaid.y;\r\n    const adjustFlexboxGlue =\r\n      !_flexboxGlue &&\r\n      (_sizeChanged ||\r\n        _contentMutation ||\r\n        _hostMutation ||\r\n        showNativeOverlaidScrollbarsChanged ||\r\n        heightIntrinsicChanged);\r\n\r\n    let viewportSizeFractionCache: CacheValues<WH<number>> = getCurrentViewportSizeFraction(force);\r\n    let viewportScrollSizeCache: CacheValues<WH<number>> = getCurrentViewportScrollSizeCache(force);\r\n    let overflowAmuntCache: CacheValues<WH<number>> = getCurrentOverflowAmountCache(force);\r\n    let preMeasureViewportOverflowState: ViewportOverflowState | undefined;\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      if (showNativeOverlaidScrollbars) {\r\n        removeClass(_viewport, classNameViewportScrollbarStyling);\r\n      } else {\r\n        addClass(_viewport, classNameViewportScrollbarStyling);\r\n      }\r\n    }\r\n\r\n    if (adjustFlexboxGlue) {\r\n      preMeasureViewportOverflowState = getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      fixFlexboxGlue(preMeasureViewportOverflowState, !!heightIntrinsic);\r\n    }\r\n\r\n    if (\r\n      _sizeChanged ||\r\n      _paddingStyleChanged ||\r\n      _contentMutation ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      directionChanged\r\n    ) {\r\n      const {\r\n        _redoViewportArrange,\r\n        _viewportOverflowState: undoViewportArrangeOverflowState,\r\n      } = undoViewportArrange(\r\n        showNativeOverlaidScrollbars,\r\n        directionIsRTL!,\r\n        preMeasureViewportOverflowState\r\n      );\r\n      const [\r\n        viewportSizeFraction,\r\n        viewportSizeFractionCahnged,\r\n      ] = (viewportSizeFractionCache = updateViewportSizeFraction(force));\r\n      const [\r\n        viewportScrollSize,\r\n        viewportScrollSizeChanged,\r\n      ] = (viewportScrollSizeCache = updateViewportScrollSizeCache(force));\r\n      const viewportContentSize = clientSize(_viewport);\r\n      let arrangedViewportScrollSize = viewportScrollSize!;\r\n      let arrangedViewportClientSize = viewportContentSize;\r\n\r\n      _redoViewportArrange();\r\n\r\n      // if re measure is required (only required if content arrange strategy is used)\r\n      if (\r\n        (viewportScrollSizeChanged ||\r\n          viewportSizeFractionCahnged ||\r\n          showNativeOverlaidScrollbarsChanged) &&\r\n        undoViewportArrangeOverflowState &&\r\n        !showNativeOverlaidScrollbars &&\r\n        arrangeViewport(\r\n          undoViewportArrangeOverflowState,\r\n          viewportScrollSize!,\r\n          viewportSizeFraction!,\r\n          directionIsRTL!\r\n        )\r\n      ) {\r\n        arrangedViewportClientSize = clientSize(_viewport);\r\n        arrangedViewportScrollSize = scrollSize(_viewport);\r\n      }\r\n\r\n      overflowAmuntCache = updateOverflowAmountCache(force, {\r\n        _viewportSizeFraction: viewportSizeFraction!,\r\n        _viewportScrollSize: {\r\n          w: max(viewportScrollSize!.w, arrangedViewportScrollSize.w),\r\n          h: max(viewportScrollSize!.h, arrangedViewportScrollSize.h),\r\n        },\r\n        _viewportClientSize: {\r\n          w: arrangedViewportClientSize.w + max(0, viewportContentSize.w - viewportScrollSize!.w),\r\n          h: arrangedViewportClientSize.h + max(0, viewportContentSize.h - viewportScrollSize!.h),\r\n        },\r\n      });\r\n    }\r\n\r\n    const [viewportSizeFraction, viewportSizeFractionChanged] = viewportSizeFractionCache;\r\n    const [viewportScrollSize, viewportScrollSizeChanged] = viewportScrollSizeCache;\r\n    const [overflowAmount, overflowAmountChanged] = overflowAmuntCache;\r\n    const [overflow, overflowChanged] = checkOption<OverflowOption>('overflow');\r\n\r\n    if (\r\n      _paddingStyleChanged ||\r\n      viewportSizeFractionChanged ||\r\n      viewportScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      directionChanged ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: StyleObject = {\r\n        marginRight: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n        width: '',\r\n        overflowY: '',\r\n        overflowX: '',\r\n      };\r\n\r\n      const viewportOverflowState = setViewportOverflowState(\r\n        showNativeOverlaidScrollbars,\r\n        overflowAmount!,\r\n        overflow,\r\n        viewportStyle\r\n      );\r\n      const viewportArranged = arrangeViewport(\r\n        viewportOverflowState,\r\n        viewportScrollSize!,\r\n        viewportSizeFraction!,\r\n        directionIsRTL!\r\n      );\r\n      hideNativeScrollbars(viewportOverflowState, directionIsRTL!, viewportArranged, viewportStyle);\r\n\r\n      if (adjustFlexboxGlue) {\r\n        fixFlexboxGlue(viewportOverflowState, !!heightIntrinsic);\r\n      }\r\n\r\n      // TODO: hide host overflow if scroll x or y and no padding element there\r\n      // TODO: Test without content\r\n      // TODO: Test without padding\r\n      // TODO: overflow: visible on padding / host if overflow visible on both axis\r\n\r\n      style(_viewport, viewportStyle);\r\n\r\n      _setLifecycleCommunication({\r\n        _viewportOverflowScroll: viewportOverflowState._overflowScroll,\r\n        _viewportOverflowAmount: overflowAmount,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import {\r\n  XY,\r\n  WH,\r\n  TRBL,\r\n  CacheValues,\r\n  PartialOptions,\r\n  each,\r\n  hasOwnProperty,\r\n  isNumber,\r\n  scrollLeft,\r\n  scrollTop,\r\n  assignDeep,\r\n} from 'support';\r\nimport { OSOptions } from 'options';\r\nimport { getEnvironment } from 'environment';\r\nimport { StructureSetup } from 'setups/structureSetup';\r\nimport { lifecycleHubOservers } from 'lifecycles/lifecycleHubObservers';\r\nimport { createTrinsicLifecycle } from 'lifecycles/trinsicLifecycle';\r\nimport { createPaddingLifecycle } from 'lifecycles/paddingLifecycle';\r\nimport { createOverflowLifecycle } from 'lifecycles/overflowLifecycle';\r\nimport { StyleObject } from 'typings';\r\nimport { ScrollbarsSetup } from 'setups/scrollbarsSetup';\r\n\r\nexport type LifecycleCheckOption = <T>(path: string) => LifecycleOptionInfo<T>;\r\n\r\nexport type Lifecycle = (\r\n  updateHints: LifecycleUpdateHints,\r\n  checkOption: LifecycleCheckOption,\r\n  force: boolean\r\n) => Partial<LifecycleAdaptiveUpdateHints> | void;\r\n\r\nexport type LifecycleOptionInfo<T> = [T, boolean];\r\n\r\nexport interface LifecycleCommunication {\r\n  _paddingInfo: {\r\n    _absolute: boolean;\r\n    _padding: TRBL;\r\n  };\r\n  _viewportPaddingStyle: StyleObject;\r\n  _viewportOverflowScroll: XY<boolean>;\r\n  _viewportOverflowAmount: WH<number>;\r\n}\r\n\r\nexport interface LifecycleAdaptiveUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n  _paddingStyleChanged: boolean;\r\n}\r\n\r\nexport interface LifecycleUpdateHints extends LifecycleAdaptiveUpdateHints {\r\n  _directionIsRTL: CacheValues<boolean>;\r\n  _heightIntrinsic: CacheValues<boolean>;\r\n}\r\n\r\nexport interface LifecycleHubState {\r\n  _overflowAmount: WH<number>;\r\n}\r\n\r\nexport interface LifecycleHubInstance {\r\n  _update(changedOptions?: PartialOptions<OSOptions> | null, force?: boolean): void;\r\n  _state(): LifecycleHubState;\r\n  _destroy(): void;\r\n}\r\n\r\nexport interface LifecycleHub {\r\n  _options: OSOptions;\r\n  _structureSetup: StructureSetup;\r\n  // whether the \"viewport arrange\" strategy must be used (true if no native scrollbar hiding and scrollbars are overlaid)\r\n  _doViewportArrange: boolean;\r\n  _getLifecycleCommunication(): LifecycleCommunication;\r\n  _setLifecycleCommunication(newLifecycleCommunication?: Partial<LifecycleCommunication>): void;\r\n}\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj\r\n    ? path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj)\r\n    : undefined;\r\n\r\nconst booleanCacheValuesFallback: CacheValues<boolean> = [false, false, false];\r\nconst lifecycleCommunicationFallback: LifecycleCommunication = {\r\n  _paddingInfo: {\r\n    _absolute: false,\r\n    _padding: {\r\n      t: 0,\r\n      r: 0,\r\n      b: 0,\r\n      l: 0,\r\n    },\r\n  },\r\n  _viewportOverflowScroll: {\r\n    x: false,\r\n    y: false,\r\n  },\r\n  _viewportOverflowAmount: {\r\n    w: 0,\r\n    h: 0,\r\n  },\r\n  _viewportPaddingStyle: {\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n    marginLeft: 0,\r\n    paddingTop: 0,\r\n    paddingRight: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 0,\r\n  },\r\n};\r\n\r\nexport const createLifecycleHub = (\r\n  options: OSOptions,\r\n  structureSetup: StructureSetup,\r\n  scrollbarsSetup: ScrollbarsSetup\r\n): LifecycleHubInstance => {\r\n  let lifecycleCommunication = lifecycleCommunicationFallback;\r\n  const { _viewport } = structureSetup._targetObj;\r\n  const {\r\n    _nativeScrollbarStyling,\r\n    _nativeScrollbarIsOverlaid,\r\n    _flexboxGlue,\r\n    _addListener: addEnvironmentListener,\r\n    _removeListener: removeEnvironmentListener,\r\n  } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const instance: LifecycleHub = {\r\n    _options: options,\r\n    _structureSetup: structureSetup,\r\n    _doViewportArrange: doViewportArrange,\r\n    _getLifecycleCommunication: () => lifecycleCommunication,\r\n    _setLifecycleCommunication(newLifecycleCommunication) {\r\n      lifecycleCommunication = assignDeep({}, lifecycleCommunication, newLifecycleCommunication);\r\n    },\r\n  };\r\n  const lifecycles: Lifecycle[] = [\r\n    createTrinsicLifecycle(instance),\r\n    createPaddingLifecycle(instance),\r\n    createOverflowLifecycle(instance),\r\n  ];\r\n\r\n  const updateLifecycles = (\r\n    updateHints?: Partial<LifecycleUpdateHints> | null,\r\n    changedOptions?: Partial<OSOptions> | null,\r\n    force?: boolean\r\n  ) => {\r\n    let {\r\n      // eslint-disable-next-line prefer-const\r\n      _directionIsRTL,\r\n      // eslint-disable-next-line prefer-const\r\n      _heightIntrinsic,\r\n      _sizeChanged = force || false,\r\n      _hostMutation = force || false,\r\n      _contentMutation = force || false,\r\n      _paddingStyleChanged = force || false,\r\n    } = updateHints || {};\r\n\r\n    const finalDirectionIsRTL =\r\n      _directionIsRTL ||\r\n      (_sizeObserver\r\n        ? _sizeObserver._getCurrentCacheValues(force)._directionIsRTL\r\n        : booleanCacheValuesFallback);\r\n    const finalHeightIntrinsic =\r\n      _heightIntrinsic ||\r\n      (_trinsicObserver\r\n        ? _trinsicObserver._getCurrentCacheValues(force)._heightIntrinsic\r\n        : booleanCacheValuesFallback);\r\n    const checkOption: LifecycleCheckOption = (path) => [\r\n      getPropByPath(options, path),\r\n      force || getPropByPath(changedOptions, path) !== undefined,\r\n    ];\r\n    const adjustScrollOffset = doViewportArrange || !_flexboxGlue;\r\n    const scrollOffsetX = adjustScrollOffset && scrollLeft(_viewport);\r\n    const scrollOffsetY = adjustScrollOffset && scrollTop(_viewport);\r\n\r\n    // place before updating lifecycles because of possible flushing of debounce\r\n    if (_updateObserverOptions) {\r\n      _updateObserverOptions(checkOption);\r\n    }\r\n\r\n    each(lifecycles, (lifecycle) => {\r\n      const {\r\n        _sizeChanged: adaptiveSizeChanged,\r\n        _hostMutation: adaptiveHostMutation,\r\n        _contentMutation: adaptiveContentMutation,\r\n        _paddingStyleChanged: adaptivePaddingStyleChanged,\r\n      } =\r\n        lifecycle(\r\n          {\r\n            _directionIsRTL: finalDirectionIsRTL,\r\n            _heightIntrinsic: finalHeightIntrinsic,\r\n            _sizeChanged,\r\n            _hostMutation,\r\n            _contentMutation,\r\n            _paddingStyleChanged,\r\n          },\r\n          checkOption,\r\n          !!force\r\n        ) || {};\r\n\r\n      _sizeChanged = adaptiveSizeChanged || _sizeChanged;\r\n      _hostMutation = adaptiveHostMutation || _hostMutation;\r\n      _contentMutation = adaptiveContentMutation || _contentMutation;\r\n      _paddingStyleChanged = adaptivePaddingStyleChanged || _paddingStyleChanged;\r\n    });\r\n\r\n    if (isNumber(scrollOffsetX)) {\r\n      scrollLeft(_viewport, scrollOffsetX);\r\n    }\r\n    if (isNumber(scrollOffsetY)) {\r\n      scrollTop(_viewport, scrollOffsetY);\r\n    }\r\n\r\n    if (options.callbacks.onUpdated) {\r\n      options.callbacks.onUpdated();\r\n    }\r\n  };\r\n  const {\r\n    _sizeObserver,\r\n    _trinsicObserver,\r\n    _updateObserverOptions,\r\n    _destroy: destroyObservers,\r\n  } = lifecycleHubOservers(instance, updateLifecycles);\r\n\r\n  const update = (changedOptions?: Partial<OSOptions> | null, force?: boolean) =>\r\n    updateLifecycles(null, changedOptions, force);\r\n  const envUpdateListener = update.bind(null, null, true);\r\n  addEnvironmentListener(envUpdateListener);\r\n\r\n  console.log(getEnvironment());\r\n\r\n  return {\r\n    _update: update,\r\n    _state: () => ({\r\n      _overflowAmount: lifecycleCommunication._viewportOverflowAmount,\r\n    }),\r\n    _destroy() {\r\n      destroyObservers();\r\n      removeEnvironmentListener(envUpdateListener);\r\n\r\n      structureSetup._destroy();\r\n      scrollbarsSetup._destroy();\r\n    },\r\n  };\r\n};\r\n","import { OSTarget, OSInitializationObject } from 'typings';\r\nimport { PartialOptions, validateOptions, assignDeep, isEmptyObject } from 'support';\r\nimport { createStructureSetup, StructureSetup } from 'setups/structureSetup';\r\nimport { createScrollbarsSetup, ScrollbarsSetup } from 'setups/scrollbarsSetup';\r\nimport { createLifecycleHub } from 'lifecycles/lifecycleHub';\r\nimport { OSOptions, optionsTemplate } from 'options';\r\nimport { getEnvironment } from 'environment';\r\n\r\nexport interface OverlayScrollbarsStatic {\r\n  (\r\n    target: OSTarget | OSInitializationObject,\r\n    options?: PartialOptions<OSOptions>,\r\n    extensions?: any\r\n  ): OverlayScrollbars;\r\n}\r\n\r\nexport interface OverlayScrollbars {\r\n  options(): OSOptions;\r\n  options(newOptions?: PartialOptions<OSOptions>): OSOptions;\r\n\r\n  update(force?: boolean): void;\r\n  destroy(): void;\r\n\r\n  state(): any;\r\n}\r\n\r\nexport const OverlayScrollbars: OverlayScrollbarsStatic = (\r\n  target: OSTarget | OSInitializationObject,\r\n  options?: PartialOptions<OSOptions>,\r\n  extensions?: any\r\n): OverlayScrollbars => {\r\n  const { _getDefaultOptions } = getEnvironment();\r\n  const currentOptions: OSOptions = assignDeep(\r\n    {},\r\n    _getDefaultOptions(),\r\n    validateOptions(options || ({} as PartialOptions<OSOptions>), optionsTemplate, null, true)\r\n      ._validated\r\n  );\r\n  const structureSetup: StructureSetup = createStructureSetup(target);\r\n  const scrollbarsSetup: ScrollbarsSetup = createScrollbarsSetup(target, structureSetup);\r\n  const lifecycleHub = createLifecycleHub(currentOptions, structureSetup, scrollbarsSetup);\r\n\r\n  const instance: OverlayScrollbars = {\r\n    options(newOptions?: PartialOptions<OSOptions>) {\r\n      if (newOptions) {\r\n        const { _validated: _changedOptions } = validateOptions(\r\n          newOptions,\r\n          optionsTemplate,\r\n          currentOptions,\r\n          true\r\n        );\r\n\r\n        if (!isEmptyObject(_changedOptions)) {\r\n          assignDeep(currentOptions, _changedOptions);\r\n          lifecycleHub._update(_changedOptions);\r\n        }\r\n      }\r\n      return currentOptions;\r\n    },\r\n    state: () => lifecycleHub._state(),\r\n    update(force?: boolean) {\r\n      lifecycleHub._update(null, force);\r\n    },\r\n    destroy: () => lifecycleHub._destroy(),\r\n  };\r\n\r\n  instance.update(true);\r\n\r\n  return instance;\r\n};\r\n"],"names":["createCache","update","options","_initialValue","_equal","_alwaysUpdateValues","_value","_previous","cacheUpdate","force","context","curr","newVal","changed","ElementNodeType","Node","ELEMENT_NODE","toString","hasOwnProperty","Object","prototype","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","elm","isEmptyArray","runEach","p1","runFn","fn","Set","forEach","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","getSetProp","topLeft","fallback","value","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","insertedNodes","insertAfter","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","firstLetterToUpper","str","charAt","toUpperCase","slice","getDummyStyle","style","cssPrefixes","jsPrefixes","jsCache","cssCache","cssProperty","uppercasedName","elmStyle","prefix","prefixWithoutDashes","resultPossibilities","resultPossibility","jsAPI","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","addClass","add","removeClass","remove","diffClass","classNameA","classNameB","classNameASplit","split","classNameBSplit","tempObj","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","off","listener","capture","eventName","removeEventListener","on","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","bind","stopPropagation","preventDefault","stopAndPrevent","equal","a","b","props","propMutation","compareA","compareB","equalWH","equalTRBL","equalBCRWH","round","Math","setT","setTimeout","clearTimeouts","id","clearTimeout","noop","debounce","functionToDebounce","timeoutId","maxTimeoutId","prevArguments","latestArguments","_timeout","_maxDelay","_mergeParams","invokeFunctionToDebounce","args","mergeParms","flush","debouncedFn","arguments","finalTimeout","hasTimeout","finalMaxWait","hasMaxWait","setTimeoutFn","mergeParamsResult","invokedArgs","boundInvoke","_flush","cssNumber","opacity","zindex","parseToZeroOrNumber","toFloat","num","parseFloat","parseInt","Number","isNaN","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","setCSSVal","setProperty","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","topRightBottomLeft","propertyPrefix","propertySuffix","finalPrefix","finalSuffix","top","right","bottom","left","t","r","l","x","y","absoluteCoordinates","rect","pageYOffset","pageXOffset","_extends","module","assign","exports","__esModule","stringify","JSON","templateTypePrefixSuffix","optionsTemplateTypes","validateRecursive","template","optionsDiff","doWriteErrors","propPath","validatedOptions","optionsCopy","filter","optionsDiffValue","optionsValue","templateValue","templateIsComplex","propPrefix","validatedResult","_validated","_foreign","isValid","errorEnumStrings","errorPossibleTypes","optionsValueType","templateValueArr","currTemplateType","typeString","isEnumString","enumStringSplit","possibility","string","isPrimitiveArr","some","doStringifyComparison","console","warn","join","validateOptions","transformOptions","optionsWithOptionsTemplate","_template","_options","tmpResult","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameViewportArrange","classNameContent","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","classNameScrollbar","classNameScrollbarHorizontal","classNameScrollbarVertical","classNameScrollbarTrack","classNameScrollbarHandle","numberAllowedValues","oTypes","number","arrayNullValues","null","stringArrayNullAllowedValues","booleanTrueTemplate","boolean","booleanFalseTemplate","resizeAllowedValues","overflowAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","defaultOptionsWithTemplate","resize","paddingAbsolute","updating","elementEvents","attributes","overflow","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","clickScroll","touch","textarea","dynWidth","dynHeight","inheritedAttrs","nativeScrollbarsOverlaid","show","initialize","callbacks","onUpdated","function","optionsTemplate","defaultOptions","environmentInstance","abs","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","getNativeScrollbarSize","body","measureElm","cSize","oSize","getNativeScrollbarStyling","testElm","ex","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","getDefaultInitializationStrategy","nativeScrollbarStyling","_host","_viewport","_padding","_content","_scrollbarsSlot","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","nativeScrollbarSize","nativeScrollbarIsOverlaid","defaultInitializationStrategy","initializationStrategy","defaultDefaultOptions","env","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_cssCustomProperties","_rtlScrollBehavior","_flexboxGlue","_addListener","_removeListener","delete","_getInitializationStrategy","_setInitializationStrategy","newInitializationStrategy","_getDefaultOptions","_setDefaultOptions","newDefaultOptions","_defaultInitializationStrategy","_defaultDefaultOptions","size","dpr","scrollbarSize","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","newScrollbarSize","getEnvironment","contentArrangeCounter","unwrap","createUniqueViewportArrangeElement","create","staticCreationFromStrategy","initializationValue","strategy","elementClass","dynamicCreationFromStrategy","defaultValue","takeInitializationValue","createStructureSetup","hostInitializationStrategy","viewportInitializationStrategy","paddingInitializationStrategy","contentInitializationStrategy","targetIsElm","targetStructureInitialization","targetElement","isTextarea","isBody","ownerDocument","bodyElm","wnd","defaultView","evaluatedTargetObj","_target","host","viewport","padding","content","_viewportArrange","ctx","_windowElm","_documentElm","_htmlElm","_bodyElm","_isTextarea","_isBody","_targetIsElm","generatedElements","elementIsGenerated","destroyFns","isTextareaHostGenerated","targetContents","contentSlot","_targetObj","_targetCtx","_destroy","generateScrollbarDOM","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","createScrollbarsSetup","structureSetup","environmentScrollbarSlot","initializationScrollbarSlot","scrollbarsSlot","initializationScrollbarSlotResult","evaluatedScrollbarSlot","horizontalScrollbarStructure","verticalScrollbarStructure","horizontalScrollbar","verticalScrollbar","_horizontalScrollbarStructure","_verticalScrollbarStructure","animationStartEventName","scrollEventName","scrollAmount","getElmDirectionIsRTL","domRectHasDimensions","height","width","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","getIsDirectionRTL","updateResizeObserverContentRectCache","currVal","onSizeChangedCallbackProxy","sizeChangedContext","isResizeObserverCall","hasDirectionCache","skip","appear","doDirectionScroll","currRContentRect","prevContentRect","pop","contentRect","hasDimensions","hadDimensions","rtl","_sizeChanged","_directionIsRTLCache","appearCallback","directionIsRTLCache","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionIsRTLCache","event","directionIsRTLCacheValues","directionIsRTL","directionIsRTLChanged","_getCurrentCacheValues","_directionIsRTL","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","updateHeightIntrinsicCache","getCurrentHeightIntrinsicCache","ioEntryOrSize","isIntersecting","intersectionRatio","triggerOnTrinsicChangedCallback","updateValue","heightIntrinsic","heightIntrinsicChanged","intersectionObserverInstance","entries","root","onSizeChanged","newSize","_heightIntrinsic","createEventContentChange","eventContentChange","map","destroyed","_updateElements","getElements","eventElmList","elements","entry","entryEventNames","entryOff","set","WeakMap","createDOMObserver","isContentObserver","isConnected","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetChange","_ignoreNestedTargetChange","_ignoreContentChange","destroyEventContentChange","updateEventContentChangeElements","finalAttributes","finalStyleChangingAttributes","observedAttributes","concat","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributeOldValue","attributeFilter","subtree","childList","characterData","_update","takeRecords","ignorePrefix","viewportAttrsFromTarget","baseStyleChangingAttrsTextarea","baseStyleChangingAttrs","newValue","diff","addedOrRemovedClass","lifecycleHubOservers","instance","updateLifecycles","debounceTimeout","debounceMaxDelay","contentMutationObserver","_structureSetup","contentMutationObserverAttr","updateLifecyclesWithDebouncedAdaptiveUpdateHints","prev","prevSizeChanged","_hostMutation","prevHostMutation","_contentMutation","prevContentMutation","currSizeChanged","currvHostMutation","currContentMutation","merged","updateViewportAttrsFromHost","attribute","hostAttr","onTrinsicChanged","updateFn","onContentMutation","contentChangedTroughEvent","onHostMutation","hostMutationObserver","updateOptions","checkOption","elementEventsChanged","attributesChanged","debounceValue","debounceChanged","updateContentMutationObserver","timeout","maxWait","_trinsicObserver","_sizeObserver","_updateObserverOptions","createTrinsicLifecycle","lifecycleHub","updateHints","display","createPaddingLifecycle","_setLifecycleCommunication","updatePaddingCache","currentPaddingCache","paddingChanged","directionChanged","paddingAbsoluteChanged","contentMutation","paddingStyleChanged","paddingRelative","paddingHorizontal","paddingVertical","paddingStyle","marginRight","marginBottom","marginLeft","viewportStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","_paddingInfo","_absolute","_viewportPaddingStyle","_paddingStyleChanged","max","overlaidScrollbarsHideOffset","whCacheOptions","sizeFraction","viewportOffsetSize","viewportRect","fractionalPixelRatioTollerance","setAxisOverflowStyle","horizontal","overflowAmount","behavior","styleObj","overflowKey","behaviorIsVisible","behaviorIsVisibleHidden","behaviorIsScroll","hasOverflow","_visible","_behavior","createOverflowLifecycle","_doViewportArrange","_getLifecycleCommunication","updateViewportSizeFraction","getCurrentViewportSizeFraction","updateViewportScrollSizeCache","getCurrentViewportScrollSizeCache","updateOverflowAmountCache","getCurrentOverflowAmountCache","_viewportScrollSize","_viewportClientSize","_viewportSizeFraction","fixFlexboxGlue","viewportOverflowState","_overflowScroll","_scrollbarsHideOffset","hostSizeFraction","hostClientSize","isContentBox","fractionalClientHeight","subtractXScrollbar","getViewportOverflowState","showNativeOverlaidScrollbars","viewportStyleObj","overlaidX","overlaidY","determineOverflow","arrangeHideOffset","scroll","scrollbarsHideOffset","_scrollbarsHideOffsetArrange","setViewportOverflowState","xVisible","xVisibleBehavior","yVisible","yVisibleBehavior","arrangeViewport","viewportScrollSize","viewportSizeFraction","arrangeX","arrangeY","hideOffsetX","hideOffsetY","viewportPaddingStyle","viewportArrangeHorizontalPaddingKey","viewportArrangeHorizontalPaddingValue","viewportArrangeVerticalPaddingValue","fractionalContentWidth","fractionalContenHeight","arrangeSize","sheet","cssRules","insertRule","ruleStyle","hideNativeScrollbars","viewportArrange","horizontalMarginKey","viewportHorizontalPaddingKey","horizontalMarginValue","verticalMarginValue","horizontalPaddingValue","verticalPaddingValue","undoViewportArrange","finalViewportOverflowState","finalPaddingStyle","assignProps","prevStyle","_redoViewportArrange","_viewportOverflowState","showNativeOverlaidScrollbarsOption","showNativeOverlaidScrollbarsChanged","adjustFlexboxGlue","viewportSizeFractionCache","viewportScrollSizeCache","overflowAmuntCache","preMeasureViewportOverflowState","undoViewportArrangeOverflowState","viewportSizeFractionCahnged","viewportScrollSizeChanged","viewportContentSize","arrangedViewportScrollSize","arrangedViewportClientSize","viewportSizeFractionChanged","overflowAmountChanged","overflowChanged","viewportArranged","_viewportOverflowScroll","_viewportOverflowAmount","getPropByPath","path","o","booleanCacheValuesFallback","lifecycleCommunicationFallback","createLifecycleHub","scrollbarsSetup","lifecycleCommunication","addEnvironmentListener","removeEnvironmentListener","doViewportArrange","newLifecycleCommunication","lifecycles","changedOptions","finalDirectionIsRTL","finalHeightIntrinsic","adjustScrollOffset","scrollOffsetX","scrollOffsetY","lifecycle","adaptiveSizeChanged","adaptiveHostMutation","adaptiveContentMutation","adaptivePaddingStyleChanged","destroyObservers","envUpdateListener","log","_state","_overflowAmount","OverlayScrollbars","extensions","currentOptions","newOptions","_changedOptions","state","destroy"],"mappings":"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"}