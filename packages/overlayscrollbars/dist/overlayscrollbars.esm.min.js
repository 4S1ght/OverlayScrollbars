function r(r){const s=!!r&&r.length;return function(r){return Array.isArray(r)}(r)||!function(r){return"function"==typeof r}(r)&&function(r){return"number"==typeof r}(s)&&s>-1&&s%1==0}function s(o,i){if(r(o))for(let r=0;r<o.length&&!1!==i(o[r],r,o);r++);else o&&s((c=o)?Object.keys(c):[],r=>i(o[r],r,o));var c;return o}const o=i=>{if(r(i))s(Array.from(i),r=>o(r));else if(i){const{parentNode:r}=i;r&&r.removeChild(i)}},i=r=>{const i=document.createElement("div");return i.innerHTML=r.trim(),s((c=i)?Array.from(c.childNodes):[],r=>o(r));var c},c={a:1,b:1,c:1};export default()=>{const{a:r,b:s,c:o}=c;return[i('    <div class="os-host">        <div class="os-resize-observer-host"></div>        <div class="os-padding">            <div class="os-viewport">                <div class="os-content">                    fdfhdfgh                </div>            </div>        </div>        <div class="os-scrollbar os-scrollbar-horizontal">            <div class="os-scrollbar-track">                <div class="os-scrollbar-handle"></div>            </div>        </div>        <div class="os-scrollbar os-scrollbar-vertical">            <div class="os-scrollbar-track">                <div class="os-scrollbar-handle"></div>            </div>        </div>        <div class="os-scrollbar-corner"></div>    </div>'),r,s,o]};