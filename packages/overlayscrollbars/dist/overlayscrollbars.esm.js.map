{"version":3,"file":"overlayscrollbars.esm.js","sources":["../src/support/cache/cache.ts","../src/support/utils/types.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/attribute.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/dom/class.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/utils/equal.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/offset.ts","../src/classnames.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/options.ts","../src/environment.ts","../src/setups/structureSetup.ts","../src/setups/scrollbarsSetup.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/lifecycles/lifecycleHubObservers.ts","../src/lifecycles/trinsicLifecycle.ts","../src/lifecycles/paddingLifecycle.ts","../src/lifecycles/overflowLifecycle.ts","../src/lifecycles/lifecycleHub.ts","../src/plugins/plugins.ts","../src/plugins/optionsValidation/validation.ts","../src/plugins/optionsValidation/optionsValidation.ts","../src/instances.ts","../src/eventListeners.ts","../src/overlayscrollbars.ts"],"sourcesContent":["export interface CacheOptions<Value> {\r\n  // initial value of _value.\r\n  _initialValue: Value;\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<Value>;\r\n  // If true always updates _value and _previous, otherwise they update only when they changed.\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport type CacheValues<T> = [value: T, changed: boolean, previous?: T];\r\n\r\nexport type EqualCachePropFunction<Value> = (currentVal: Value, newVal: Value) => boolean;\r\n\r\nexport type CacheUpdater<Value> = (current: Value, previous?: Value) => Value;\r\n\r\nexport type UpdateCacheContextual<Value> = (newValue: Value, force?: boolean) => CacheValues<Value>;\r\n\r\nexport type UpdateCache<Value> = (force?: boolean) => CacheValues<Value>;\r\n\r\nexport type GetCurrentCache<Value> = (force?: boolean) => CacheValues<Value>;\r\n\r\nexport type Cache<Value> = [UpdateCache<Value>, GetCurrentCache<Value>];\r\n\r\nexport type CacheContextual<Value> = [UpdateCacheContextual<Value>, GetCurrentCache<Value>];\r\n\r\nexport function createCache<Value>(options: CacheOptions<Value>): CacheContextual<Value>;\r\nexport function createCache<Value>(\r\n  options: CacheOptions<Value>,\r\n  update: CacheUpdater<Value>\r\n): Cache<Value>;\r\nexport function createCache<Value>(\r\n  options: CacheOptions<Value>,\r\n  update?: CacheUpdater<Value>\r\n): CacheContextual<Value> | Cache<Value> {\r\n  const { _initialValue, _equal, _alwaysUpdateValues } = options;\r\n  let _value: Value = _initialValue;\r\n  let _previous: Value | undefined;\r\n\r\n  const cacheUpdateContextual: UpdateCacheContextual<Value> = (newValue, force?) => {\r\n    const curr = _value;\r\n\r\n    const newVal = newValue;\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return [_value, changed, _previous];\r\n  };\r\n  const cacheUpdateIsolated: UpdateCache<Value> = (force?) =>\r\n    cacheUpdateContextual(update!(_value, _previous), force);\r\n\r\n  const getCurrentCache: GetCurrentCache<Value> = (force?: boolean) => [\r\n    _value,\r\n    !!force, // changed\r\n    _previous,\r\n  ];\r\n\r\n  return [update ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache] as\r\n    | CacheContextual<Value>\r\n    | Cache<Value>;\r\n}\r\n","import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) =>\r\n  isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: any[]) => any {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat)\r\n    ? length > 0 && isObject(obj)\r\n      ? length - 1 in obj\r\n      : true\r\n    : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(\r\n  obj: PlainObject,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: T[], item: T, fromIndex?: number): number =>\r\n  arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: T[], items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): T[] => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items)\r\n    ? Array.prototype.push.apply(array, items as T[])\r\n    : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr?: ArrayLike<T> | Set<T>) => {\r\n  if (Array.from && arr) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: T[] = [];\r\n\r\n  if (arr instanceof Set) {\r\n    arr.forEach((value) => {\r\n      push(result, value);\r\n    });\r\n  } else {\r\n    each(arr, (elm) => {\r\n      push(result, elm);\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: any[] | null | undefined): boolean =>\r\n  !!array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, p1?: unknown): void => {\r\n  const runFn = (fn: RunEachItem) => fn && fn(p1);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean =>\r\n  Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W\r\n): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W,\r\n  object4: X\r\n): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W,\r\n  object4: X,\r\n  object5: Y\r\n): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(\r\n  elm: HTMLElement | null,\r\n  attrName: string,\r\n  value?: string\r\n): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | false | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> =>\r\n  elm ? from(elm.childNodes) : [];\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (\r\n  elm: InputElementType,\r\n  highBoundarySelector: string,\r\n  deepBoundarySelector: string\r\n): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | false | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (\r\n  parentElm: Node | false | null | undefined,\r\n  preferredAnchor: Node | null | undefined,\r\n  insertedElms: NodeCollection\r\n): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (\r\n  node: Node | null | undefined,\r\n  insertedNodes: NodeCollection\r\n): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = [\r\n  'WebKit',\r\n  'Moz',\r\n  'O',\r\n  'MS',\r\n  'webkit',\r\n  'moz',\r\n  'o',\r\n  'ms',\r\n];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without it, or and empty string if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n\r\n    // eslint-disable-next-line no-return-assign\r\n    return !(result = resultPossibilities.find(\r\n      (resultPossibility: string) => elmStyle[resultPossibility] !== undefined\r\n    ));\r\n  });\r\n\r\n  // eslint-disable-next-line no-return-assign\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported without it, or an empty string if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  // eslint-disable-next-line no-return-assign\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>(\r\n  'IntersectionObserver'\r\n);\r\nexport const ResizeObserverConstructor = jsAPI<typeof ResizeObserver>('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | false | null | undefined,\r\n  className: string,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | false | null | undefined, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n */\r\nexport const addClass = (elm: Element | false | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n};\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | false | null | undefined, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (\r\n  classNameA: string | null | undefined,\r\n  classNameB: string | null | undefined\r\n) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","export interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean =>\r\n  !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null | undefined): boolean =>\r\n  elm ? elementHasDimensions(elm as HTMLElement) : false;\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  capture?: boolean\r\n): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event): void => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event): void => evt.preventDefault();\r\n\r\n/**\r\n * Shorthand for the stopPropagation and preventDefault event Method.\r\n * @param evt The event of which the stopPropagation and preventDefault methods shall be called.\r\n */\r\nexport const stopAndPrevent = (evt: Event): void =>\r\n  (stopPropagation(evt) as undefined) || (preventDefault(evt) as undefined);\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(\r\n  a: T | undefined,\r\n  b: T | undefined,\r\n  props: Array<keyof T>,\r\n  propMutation?: ((value: any) => any) | null | false\r\n): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      const compareA = propMutation ? propMutation(a[prop]) : a[prop];\r\n      const compareB = propMutation ? propMutation(b[prop]) : b[prop];\r\n      if (compareA !== compareB) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = <T>(a?: WH<T>, b?: WH<T>) => equal<WH<T>>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = <T>(a?: XY<T>, b?: XY<T>) => equal<XY<T>>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n\r\n/**\r\n * Compares two DOM Rects for their equality of their width and height properties\r\n * Also returns false if one of the DOM Rects is undefined or null.\r\n * @param a DOM Rect a.\r\n * @param b DOM Rect b.\r\n * @param round Whether the values should be rounded.\r\n */\r\nexport const equalBCRWH = (a?: DOMRect, b?: DOMRect, round?: boolean) =>\r\n  equal<DOMRect>(a, b, ['width', 'height'], round && ((value) => Math.round(value)));\r\n","import { isNumber, isFunction } from 'support/utils/types';\r\nimport { from } from 'support/utils/array';\r\nimport { rAF, cAF } from 'support/compatibility/apis';\r\n\r\nconst clearTimeouts = (id: number | undefined) => {\r\n  id && window.clearTimeout(id);\r\n  id && cAF!(id);\r\n};\r\n\r\ntype DebounceTiming = number | false | null | undefined;\r\n\r\nexport interface DebounceOptions<FunctionToDebounce extends (...args: any) => any> {\r\n  /**\r\n   * The timeout for debouncing. If null, no debounce is applied.\r\n   */\r\n  _timeout?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * A maximum amount of ms. before the function will be called even with debounce.\r\n   */\r\n  _maxDelay?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * Function which merges parameters for each canceled debounce.\r\n   * If parameters can't be merged the function will return null, otherwise it returns the merged parameters.\r\n   */\r\n  _mergeParams?: (\r\n    prev: Parameters<FunctionToDebounce>,\r\n    curr: Parameters<FunctionToDebounce>\r\n  ) => Parameters<FunctionToDebounce> | false | null | undefined;\r\n}\r\n\r\nexport interface Debounced<FunctionToDebounce extends (...args: any) => any> {\r\n  (...args: Parameters<FunctionToDebounce>): ReturnType<FunctionToDebounce>;\r\n  _flush(): void;\r\n}\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param options Options for debouncing.\r\n */\r\nexport const debounce = <FunctionToDebounce extends (...args: any) => any>(\r\n  functionToDebounce: FunctionToDebounce,\r\n  options?: DebounceOptions<FunctionToDebounce>\r\n): Debounced<FunctionToDebounce> => {\r\n  let timeoutId: number | undefined;\r\n  let maxTimeoutId: number | undefined;\r\n  let prevArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  let latestArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  const { _timeout, _maxDelay, _mergeParams } = options || {};\r\n  const setT = window.setTimeout;\r\n\r\n  const invokeFunctionToDebounce = function (args: IArguments) {\r\n    clearTimeouts(timeoutId);\r\n    clearTimeouts(maxTimeoutId);\r\n    maxTimeoutId = timeoutId = prevArguments = undefined;\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  const mergeParms = (\r\n    curr: Parameters<FunctionToDebounce>\r\n  ): Parameters<FunctionToDebounce> | false | null | undefined =>\r\n    _mergeParams && prevArguments ? _mergeParams(prevArguments, curr) : curr;\r\n\r\n  const flush = () => {\r\n    /* istanbul ignore next */\r\n    if (timeoutId) {\r\n      invokeFunctionToDebounce(mergeParms(latestArguments!) || latestArguments!);\r\n    }\r\n  };\r\n\r\n  const debouncedFn = function () {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    const args: Parameters<FunctionToDebounce> = from(arguments) as Parameters<FunctionToDebounce>;\r\n    const finalTimeout = isFunction(_timeout) ? _timeout() : _timeout;\r\n    const hasTimeout = isNumber(finalTimeout) && finalTimeout >= 0;\r\n\r\n    if (hasTimeout) {\r\n      const finalMaxWait = isFunction(_maxDelay) ? _maxDelay() : _maxDelay;\r\n      const hasMaxWait = isNumber(finalMaxWait) && finalMaxWait >= 0;\r\n      const setTimeoutFn = finalTimeout > 0 ? setT : rAF!;\r\n      const mergeParamsResult = mergeParms(args);\r\n      const invokedArgs = mergeParamsResult || args;\r\n      const boundInvoke = invokeFunctionToDebounce.bind(0, invokedArgs);\r\n\r\n      // if (!mergeParamsResult) {\r\n      //   invokeFunctionToDebounce(prevArguments || args);\r\n      // }\r\n\r\n      clearTimeouts(timeoutId);\r\n      // @ts-ignore\r\n      timeoutId = setTimeoutFn(boundInvoke, finalTimeout as number) as number;\r\n\r\n      if (hasMaxWait && !maxTimeoutId) {\r\n        maxTimeoutId = setT(flush, finalMaxWait as number);\r\n      }\r\n\r\n      prevArguments = latestArguments = invokedArgs;\r\n    } else {\r\n      invokeFunctionToDebounce(args);\r\n    }\r\n  };\r\n  debouncedFn._flush = flush;\r\n\r\n  return debouncedFn as Debounced<FunctionToDebounce>;\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray, isUndefined } from 'support/utils/types';\r\nimport { PlainObject, StyleObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\nconst cssNumber = {\r\n  // animationiterationcount: 1,\r\n  // columncount: 1,\r\n  // fillopacity: 1,\r\n  // flexgrow: 1,\r\n  // flexshrink: 1,\r\n  // fontweight: 1,\r\n  // lineheight: 1,\r\n  // order: 1,\r\n  // orphans: 1,\r\n  // widows: 1,\r\n  // zoom: 1,\r\n  opacity: 1,\r\n  zindex: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number =>\r\n  !cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val;\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null\r\n    ? computedStyle[prop] || computedStyle.getPropertyValue(prop)\r\n    : elm.style[prop];\r\nconst setCSSVal = (\r\n  elm: HTMLElement | false | null | undefined,\r\n  prop: string,\r\n  val: string | number\r\n): void => {\r\n  try {\r\n    if (elm) {\r\n      const { style: elmStyle } = elm;\r\n      if (!isUndefined(elmStyle[prop])) {\r\n        elmStyle[prop] = adaptCSSVal(prop, val);\r\n      } else {\r\n        elmStyle.setProperty(prop, val as string);\r\n      }\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps>\r\n): void;\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: string\r\n): string;\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: Array<string> | string\r\n): { [key: string]: string };\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps> | Array<string> | string\r\n): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns the top right bottom left values of the passed css property.\r\n * @param elm The element of which the values shall be returned.\r\n * @param propertyPrefix The css property prefix. (e.g. \"border\")\r\n * @param propertySuffix The css property suffix. (e.g. \"width\")\r\n */\r\nexport const topRightBottomLeft = (\r\n  elm?: HTMLElement | false | null | undefined,\r\n  propertyPrefix?: string,\r\n  propertySuffix?: string\r\n): TRBL => {\r\n  const finalPrefix = propertyPrefix ? `${propertyPrefix}-` : '';\r\n  const finalSuffix = propertySuffix ? `-${propertySuffix}` : '';\r\n  const top = `${finalPrefix}top${finalSuffix}`;\r\n  const right = `${finalPrefix}right${finalSuffix}`;\r\n  const bottom = `${finalPrefix}bottom${finalSuffix}`;\r\n  const left = `${finalPrefix}left${finalSuffix}`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameViewportArrange = `${classNameViewport}-arrange`;\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n\r\nexport const classNameScrollbar = 'os-scrollbar';\r\nexport const classNameScrollbarHorizontal = `${classNameScrollbar}-horizontal`;\r\nexport const classNameScrollbarVertical = `${classNameScrollbar}-vertical`;\r\nexport const classNameScrollbarTrack = 'os-scrollbar-track';\r\nexport const classNameScrollbarHandle = 'os-scrollbar-handle';\r\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { assignDeep, each, isObject, keys, isArray, hasOwnProperty, isFunction } from 'support';\r\nimport { PartialOptions } from 'typings';\r\n\r\nconst stringify = (value: any) =>\r\n  JSON.stringify(value, (_, val) => {\r\n    if (isFunction(val)) {\r\n      throw new Error();\r\n    }\r\n    return val;\r\n  });\r\n\r\nexport type ResizeBehavior = 'none' | 'both' | 'horizontal' | 'vertical';\r\n\r\nexport type OverflowBehavior = 'hidden' | 'scroll' | 'visible' | 'visible-hidden';\r\n\r\nexport type VisibilityBehavior = 'visible' | 'hidden' | 'auto';\r\n\r\nexport type AutoHideBehavior = 'never' | 'scroll' | 'leave' | 'move';\r\n\r\nexport type ScrollBehavior = 'always' | 'ifneeded' | 'never';\r\n\r\nexport type BasicEventCallback = (this: any) => void;\r\n\r\nexport type ScrollEventCallback = (this: any, args?: UIEvent) => void;\r\n\r\nexport type OverflowChangedCallback = (this: any, args?: OverflowChangedArgs) => void;\r\n\r\nexport type OverflowAmountChangedCallback = (this: any, args?: OverflowAmountChangedArgs) => void;\r\n\r\nexport type DirectionChangedCallback = (this: any, args?: DirectionChangedArgs) => void;\r\n\r\nexport type SizeChangedCallback = (this: any, args?: SizeChangedArgs) => void;\r\n\r\nexport type UpdatedCallback = (this: any, args?: UpdatedArgs) => void;\r\n\r\nexport interface OSOptions {\r\n  resize: ResizeBehavior;\r\n  paddingAbsolute: boolean;\r\n  updating: {\r\n    elementEvents: Array<[string, string]> | null;\r\n    attributes: string[] | null;\r\n    debounce: number | [number, number] | null;\r\n  };\r\n  overflow: {\r\n    x: OverflowBehavior;\r\n    y: OverflowBehavior;\r\n  };\r\n  scrollbars: {\r\n    visibility: VisibilityBehavior;\r\n    autoHide: AutoHideBehavior;\r\n    autoHideDelay: number;\r\n    dragScroll: boolean;\r\n    clickScroll: boolean;\r\n    touch: boolean;\r\n  };\r\n  textarea: {\r\n    dynWidth: boolean;\r\n    dynHeight: boolean;\r\n    inheritedAttrs: string | Array<string> | null;\r\n  };\r\n  nativeScrollbarsOverlaid: {\r\n    show: boolean;\r\n    initialize: boolean;\r\n  };\r\n  callbacks: {\r\n    onUpdated: (() => any) | null;\r\n  };\r\n  /*\r\n  callbacks?: {\r\n    onInitialized?: BasicEventCallback | null;\r\n    onInitializationWithdrawn?: BasicEventCallback | null;\r\n    onDestroyed?: BasicEventCallback | null;\r\n    onScrollStart?: ScrollEventCallback | null;\r\n    onScroll?: ScrollEventCallback | null;\r\n    onScrollStop?: ScrollEventCallback | null;\r\n    onOverflowChanged?: OverflowChangedCallback | null;\r\n    onOverflowAmountChanged?: OverflowAmountChangedCallback | null;\r\n    onDirectionChanged?: DirectionChangedCallback | null;\r\n    onContentSizeChanged?: SizeChangedCallback | null;\r\n    onHostSizeChanged?: SizeChangedCallback | null;\r\n    onUpdated?: UpdatedCallback | null;\r\n  };\r\n  */\r\n}\r\n\r\nexport interface OverflowChangedArgs {\r\n  x: boolean;\r\n  y: boolean;\r\n  xScrollable: boolean;\r\n  yScrollable: boolean;\r\n  clipped: boolean;\r\n}\r\n\r\nexport interface OverflowAmountChangedArgs {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface DirectionChangedArgs {\r\n  isRTL: number;\r\n  dir: string;\r\n}\r\n\r\nexport interface SizeChangedArgs {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface UpdatedArgs {\r\n  forced: boolean;\r\n}\r\n\r\nexport const defaultOptions: OSOptions = {\r\n  resize: 'none', // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: false, // true || false\r\n  updating: {\r\n    elementEvents: [['img', 'load']], // array of tuples || null\r\n    attributes: null,\r\n    debounce: [0, 33], // number || number array || null\r\n  },\r\n  overflow: {\r\n    x: 'scroll', // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: 'scroll', // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  scrollbars: {\r\n    visibility: 'auto', // visible || hidden || auto || v || h || a\r\n    autoHide: 'never', // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: 800, // number\r\n    dragScroll: true, // true || false\r\n    clickScroll: false, // true || false\r\n    touch: true, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: false, // true || false\r\n    dynHeight: false, // true || false\r\n    inheritedAttrs: ['style', 'class'], // string || array || null\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: false, // true || false\r\n    initialize: false, // true || false\r\n  },\r\n  callbacks: {\r\n    onUpdated: null,\r\n  },\r\n};\r\n\r\nexport const getOptionsDiff = <T>(\r\n  currOptions: T,\r\n  newOptions: PartialOptions<T>\r\n): PartialOptions<T> => {\r\n  const diff: PartialOptions<T> = {};\r\n  const optionsKeys = keys(newOptions).concat(keys(currOptions));\r\n\r\n  each(optionsKeys, (optionKey) => {\r\n    const currOptionValue = currOptions[optionKey];\r\n    const newOptionValue = newOptions[optionKey];\r\n\r\n    if (isObject(currOptionValue) && isObject(newOptionValue)) {\r\n      assignDeep((diff[optionKey] = {}), getOptionsDiff(currOptionValue, newOptionValue));\r\n    } else if (hasOwnProperty(newOptions, optionKey) && newOptionValue !== currOptionValue) {\r\n      let isDiff = true;\r\n\r\n      if (isArray(currOptionValue) || isArray(newOptionValue)) {\r\n        try {\r\n          if (stringify(currOptionValue) === stringify(newOptionValue)) {\r\n            isDiff = false;\r\n          }\r\n        } catch {}\r\n      }\r\n\r\n      if (isDiff) {\r\n        diff[optionKey] = newOptionValue;\r\n      }\r\n    }\r\n  });\r\n\r\n  return diff;\r\n};\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalBCRWH,\r\n  getBoundingClientRect,\r\n  assignDeep,\r\n  cssProperty,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { OSOptions, defaultOptions } from 'options';\r\nimport { OSTargetElement, PartialOptions } from 'typings';\r\n\r\ntype StructureInitializationElementFn<T> = ((target: OSTargetElement) => HTMLElement | T) | T;\r\n\r\ntype ScrollbarsInitializationElementFn<T> =\r\n  | ((target: OSTargetElement, host: HTMLElement, viewport: HTMLElement) => HTMLElement | T)\r\n  | T;\r\n\r\n/**\r\n * A Static element is an element which MUST be generated.\r\n * If null (or the returned result is null), the initialization function is generatig the element, otherwise\r\n * the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationStaticElement = StructureInitializationElementFn<null>;\r\n\r\n/**\r\n * A Dynamic element is an element which CAN be generated.\r\n * If null (or the returned result is null), then the default behavior is used.\r\n * If boolean (or the returned result is boolean), the generation of the element is forced (or not).\r\n * If the function returns and element, the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationDynamicElement = StructureInitializationElementFn<\r\n  boolean | null\r\n>;\r\n\r\nexport interface StructureInitializationStrategy {\r\n  _host: StructureInitializationStaticElement;\r\n  _viewport: StructureInitializationStaticElement;\r\n  _padding: StructureInitializationDynamicElement;\r\n  _content: StructureInitializationDynamicElement;\r\n}\r\n\r\nexport interface ScrollbarsInitializationStrategy {\r\n  _scrollbarsSlot: ScrollbarsInitializationElementFn<null | undefined>;\r\n}\r\n\r\nexport interface InitializationStrategy\r\n  extends StructureInitializationStrategy,\r\n    ScrollbarsInitializationStrategy {}\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  _nativeScrollbarSize: XY;\r\n  _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  _nativeScrollbarStyling: boolean;\r\n  _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  _flexboxGlue: boolean;\r\n  _cssCustomProperties: boolean;\r\n  _addListener(listener: OnEnvironmentChanged): void;\r\n  _removeListener(listener: OnEnvironmentChanged): void;\r\n  _getInitializationStrategy(): InitializationStrategy;\r\n  _setInitializationStrategy(newInitializationStrategy: Partial<InitializationStrategy>): void;\r\n  _getDefaultOptions(): OSOptions;\r\n  _setDefaultOptions(newDefaultOptions: PartialOptions<OSOptions>): void;\r\n  _defaultInitializationStrategy: InitializationStrategy;\r\n  _defaultDefaultOptions: OSOptions;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst getNativeScrollbarSize = (body: HTMLElement, measureElm: HTMLElement): XY => {\r\n  appendChildren(body, measureElm);\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h,\r\n    y: oSize.w - cSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, cssProperty('scrollbar-width')) === 'none' ||\r\n      window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') ===\r\n        'none';\r\n  } catch (ex) {}\r\n\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (\r\n  parentElm: HTMLElement,\r\n  childElm: HTMLElement\r\n): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const minOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMin = equalBCRWH(minOffsetsize, minOffsetsizeParent, true);\r\n\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const maxOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMax = equalBCRWH(maxOffsetsize, maxOffsetsizeParent, true);\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\n// init function decides for all values\r\nconst getDefaultInitializationStrategy = (\r\n  nativeScrollbarStyling: boolean\r\n): InitializationStrategy => ({\r\n  _host: null,\r\n  _viewport: null,\r\n  _padding: null,\r\n  _content: null,\r\n  _scrollbarsSlot: null,\r\n});\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const nativeScrollbarSize = getNativeScrollbarSize(body, envElm);\r\n  const nativeScrollbarStyling = getNativeScrollbarStyling(envElm);\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n  const defaultInitializationStrategy = getDefaultInitializationStrategy(nativeScrollbarStyling);\r\n  let initializationStrategy = defaultInitializationStrategy;\r\n  let defaultDefaultOptions = defaultOptions;\r\n\r\n  const env: Environment = {\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _cssCustomProperties: style(envElm, 'zIndex') === '-1',\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.add(listener);\r\n    },\r\n    _removeListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.delete(listener);\r\n    },\r\n    _getInitializationStrategy: () => ({ ...initializationStrategy }),\r\n    _setInitializationStrategy(newInitializationStrategy) {\r\n      initializationStrategy = assignDeep({}, initializationStrategy, newInitializationStrategy);\r\n    },\r\n    _getDefaultOptions: () => ({ ...defaultDefaultOptions }),\r\n    _setDefaultOptions(newDefaultOptions) {\r\n      defaultDefaultOptions = assignDeep({}, defaultDefaultOptions, newDefaultOptions);\r\n    },\r\n    _defaultInitializationStrategy: defaultInitializationStrategy,\r\n    _defaultDefaultOptions: defaultDefaultOptions,\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n    let scrollbarSize = nativeScrollbarSize;\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const newScrollbarSize = (environmentInstance._nativeScrollbarSize =\r\n            getNativeScrollbarSize(body, envElm));\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSize.x !== newScrollbarSize.x || scrollbarSize.y !== newScrollbarSize.y) {\r\n            runEach(onChangedListener);\r\n          }\r\n\r\n          scrollbarSize = newScrollbarSize;\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  indexOf,\r\n  removeElements,\r\n  removeClass,\r\n  push,\r\n  runEach,\r\n  insertBefore,\r\n  attr,\r\n  isBoolean,\r\n  isFunction,\r\n  keys,\r\n} from 'support';\r\nimport {\r\n  classNameHost,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameViewportArrange,\r\n  classNameContent,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport {\r\n  getEnvironment,\r\n  StructureInitializationStaticElement,\r\n  StructureInitializationDynamicElement,\r\n  StructureInitializationStrategy,\r\n} from 'environment';\r\nimport { OSTarget, OSTargetElement, StructureInitialization } from 'typings';\r\n\r\nexport interface OSTargetContext {\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: HTMLDocument;\r\n  _targetIsElm: boolean;\r\n}\r\n\r\nexport interface PreparedOSTargetObject {\r\n  _target: OSTargetElement;\r\n  _host: HTMLElement;\r\n  _viewport: HTMLElement;\r\n  _padding: HTMLElement | false;\r\n  _content: HTMLElement | false;\r\n  _viewportArrange: HTMLStyleElement | false;\r\n}\r\n\r\nexport interface StructureSetup {\r\n  _targetObj: PreparedOSTargetObject;\r\n  _targetCtx: OSTargetContext;\r\n  _destroy: () => void;\r\n}\r\n\r\nlet contentArrangeCounter = 0;\r\n\r\nconst unwrap = (elm: HTMLElement | false | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nconst createUniqueViewportArrangeElement = (): HTMLStyleElement | false => {\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _cssCustomProperties } =\r\n    getEnvironment();\r\n  /* istanbul ignore next */\r\n  const create =\r\n    !_cssCustomProperties &&\r\n    !_nativeScrollbarStyling &&\r\n    (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const result = create ? document.createElement('style') : false;\r\n\r\n  if (result) {\r\n    attr(result, 'id', `${classNameViewportArrange}-${contentArrangeCounter}`);\r\n    contentArrangeCounter++;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst staticCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | undefined,\r\n  strategy: StructureInitializationStaticElement,\r\n  elementClass: string\r\n): HTMLElement => {\r\n  const result =\r\n    initializationValue || (isFunction(strategy) ? strategy(target) : (strategy as null));\r\n  return result || createDiv(elementClass);\r\n};\r\n\r\nconst dynamicCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | boolean | undefined,\r\n  strategy: StructureInitializationDynamicElement,\r\n  elementClass: string,\r\n  defaultValue: boolean\r\n): HTMLElement | false => {\r\n  const takeInitializationValue = isBoolean(initializationValue) || initializationValue;\r\n  const result = takeInitializationValue\r\n    ? (initializationValue as boolean | HTMLElement)\r\n    : isFunction(strategy)\r\n    ? strategy(target)\r\n    : strategy;\r\n\r\n  if (result === null) {\r\n    return defaultValue ? createDiv(elementClass) : false;\r\n  }\r\n\r\n  return result === true ? createDiv(elementClass) : result;\r\n};\r\n\r\nexport const createStructureSetup = (\r\n  target: OSTarget | StructureInitialization\r\n): StructureSetup => {\r\n  const { _getInitializationStrategy, _nativeScrollbarStyling } = getEnvironment();\r\n  const {\r\n    _host: hostInitializationStrategy,\r\n    _viewport: viewportInitializationStrategy,\r\n    _padding: paddingInitializationStrategy,\r\n    _content: contentInitializationStrategy,\r\n  } = _getInitializationStrategy() as StructureInitializationStrategy;\r\n  const targetIsElm = isHTMLElement(target);\r\n  const targetStructureInitialization = target as StructureInitialization;\r\n  const targetElement = targetIsElm\r\n    ? (target as OSTargetElement)\r\n    : targetStructureInitialization.target;\r\n  const isTextarea = is(targetElement, 'textarea');\r\n  const isBody = !isTextarea && is(targetElement, 'body');\r\n  const ownerDocument: HTMLDocument = targetElement!.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const evaluatedTargetObj: PreparedOSTargetObject = {\r\n    _target: targetElement,\r\n    _host: isTextarea\r\n      ? staticCreationFromStrategy(\r\n          targetElement,\r\n          targetStructureInitialization.host,\r\n          hostInitializationStrategy,\r\n          classNameHost\r\n        )\r\n      : (targetElement as HTMLElement),\r\n    _viewport: staticCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.viewport,\r\n      viewportInitializationStrategy,\r\n      classNameViewport\r\n    ),\r\n    _padding: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.padding,\r\n      paddingInitializationStrategy,\r\n      classNamePadding,\r\n      !_nativeScrollbarStyling // default value for padding\r\n    ),\r\n    _content: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.content,\r\n      contentInitializationStrategy,\r\n      classNameContent,\r\n      false // default value for content\r\n    ),\r\n    _viewportArrange: createUniqueViewportArrangeElement(),\r\n  };\r\n  const ctx: OSTargetContext = {\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n    _targetIsElm: targetIsElm,\r\n  };\r\n  const generatedElements = keys(evaluatedTargetObj).reduce((arr, key: string) => {\r\n    const value = evaluatedTargetObj[key];\r\n    return push(arr, value && !parent(value) ? value : false);\r\n  }, [] as HTMLElement[]);\r\n  const elementIsGenerated = (elm: HTMLElement | false) =>\r\n    elm ? indexOf(generatedElements, elm) > -1 : null;\r\n  const { _target, _host, _padding, _viewport, _content, _viewportArrange } = evaluatedTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextareaHostGenerated = isTextarea && elementIsGenerated(_host);\r\n  const targetContents = isTextarea\r\n    ? _target\r\n    : contents(\r\n        [_content, _viewport, _padding, _host, _target].find(\r\n          (elm) => elementIsGenerated(elm) === false\r\n        )\r\n      );\r\n  const contentSlot = _content || _viewport;\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  appendChildren(contentSlot, targetContents);\r\n  appendChildren(_host, _padding);\r\n  appendChildren(_padding || _host, _viewport);\r\n  appendChildren(_viewport, _content);\r\n\r\n  addClass(_host, classNameHost);\r\n  addClass(_padding, classNamePadding);\r\n  addClass(_viewport, classNameViewport);\r\n  addClass(_content, classNameContent);\r\n\r\n  push(destroyFns, () => {\r\n    if (targetIsElm) {\r\n      appendChildren(_host, contents(contentSlot));\r\n      removeElements(_padding || _viewport);\r\n      removeClass(_host, classNameHost);\r\n    } else {\r\n      if (elementIsGenerated(_content)) {\r\n        unwrap(_content);\r\n      }\r\n      if (elementIsGenerated(_viewport)) {\r\n        unwrap(_viewport);\r\n      }\r\n      if (elementIsGenerated(_padding)) {\r\n        unwrap(_padding);\r\n      }\r\n      removeClass(_host, classNameHost);\r\n      removeClass(_padding, classNamePadding);\r\n      removeClass(_viewport, classNameViewport);\r\n      removeClass(_content, classNameContent);\r\n    }\r\n  });\r\n\r\n  if (_nativeScrollbarStyling) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  }\r\n  if (_viewportArrange) {\r\n    insertBefore(_viewport, _viewportArrange);\r\n    push(destroyFns, removeElements.bind(0, _viewportArrange));\r\n  }\r\n\r\n  return {\r\n    _targetObj: evaluatedTargetObj,\r\n    _targetCtx: ctx,\r\n    _destroy: () => {\r\n      runEach(destroyFns);\r\n    },\r\n  };\r\n};\r\n","import { appendChildren, createDiv, removeElements, isFunction } from 'support';\r\nimport {\r\n  classNameScrollbar,\r\n  classNameScrollbarHorizontal,\r\n  classNameScrollbarVertical,\r\n  classNameScrollbarTrack,\r\n  classNameScrollbarHandle,\r\n} from 'classnames';\r\nimport { getEnvironment, ScrollbarsInitializationStrategy } from 'environment';\r\nimport { OSTarget, ScrollbarsInitialization } from 'typings';\r\nimport { StructureSetup } from 'setups/structureSetup';\r\n\r\nexport interface ScrollbarStructure {\r\n  _scrollbar: HTMLElement;\r\n  _track: HTMLElement;\r\n  _handle: HTMLElement;\r\n}\r\n\r\nexport interface ScrollbarsSetup {\r\n  _horizontalScrollbarStructure: ScrollbarStructure;\r\n  _verticalScrollbarStructure: ScrollbarStructure;\r\n  _destroy: () => void;\r\n}\r\n\r\nconst generateScrollbarDOM = (scrollbarClassName: string): ScrollbarStructure => {\r\n  const scrollbar = createDiv(`${classNameScrollbar} ${scrollbarClassName}`);\r\n  const track = createDiv(classNameScrollbarTrack);\r\n  const handle = createDiv(classNameScrollbarHandle);\r\n\r\n  appendChildren(scrollbar, track);\r\n  appendChildren(track, handle);\r\n\r\n  return {\r\n    _scrollbar: scrollbar,\r\n    _track: track,\r\n    _handle: handle,\r\n  };\r\n};\r\n\r\nexport const createScrollbarsSetup = (target: OSTarget | ScrollbarsInitialization, structureSetup: StructureSetup): ScrollbarsSetup => {\r\n  const { _getInitializationStrategy } = getEnvironment();\r\n  const { _scrollbarsSlot: environmentScrollbarSlot } = _getInitializationStrategy() as ScrollbarsInitializationStrategy;\r\n  const { _targetObj, _targetCtx } = structureSetup;\r\n  const { _target, _host, _viewport } = _targetObj;\r\n  const initializationScrollbarSlot = !_targetCtx._targetIsElm && (target as ScrollbarsInitialization).scrollbarsSlot;\r\n  const initializationScrollbarSlotResult = isFunction(initializationScrollbarSlot)\r\n    ? initializationScrollbarSlot(_target, _host, _viewport)\r\n    : initializationScrollbarSlot;\r\n  const evaluatedScrollbarSlot =\r\n    initializationScrollbarSlotResult ||\r\n    (isFunction(environmentScrollbarSlot) ? environmentScrollbarSlot(_target, _host, _viewport) : environmentScrollbarSlot) ||\r\n    _host;\r\n\r\n  const horizontalScrollbarStructure = generateScrollbarDOM(classNameScrollbarHorizontal);\r\n  const verticalScrollbarStructure = generateScrollbarDOM(classNameScrollbarVertical);\r\n\r\n  const { _scrollbar: horizontalScrollbar } = horizontalScrollbarStructure;\r\n  const { _scrollbar: verticalScrollbar } = verticalScrollbarStructure;\r\n\r\n  appendChildren(evaluatedScrollbarSlot, horizontalScrollbar);\r\n  appendChildren(evaluatedScrollbarSlot, verticalScrollbar);\r\n\r\n  return {\r\n    _horizontalScrollbarStructure: horizontalScrollbarStructure,\r\n    _verticalScrollbarStructure: verticalScrollbarStructure,\r\n    _destroy() {\r\n      removeElements([horizontalScrollbar, verticalScrollbar]);\r\n    },\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  stopAndPrevent,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  isBoolean,\r\n  removeClass,\r\n  isObject,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\nexport interface SizeObserverOptions {\r\n  _direction?: boolean;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserverCallbackParams {\r\n  _sizeChanged: boolean;\r\n  _directionIsRTLCache?: CacheValues<boolean>;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport type DestroySizeObserver = () => void;\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst getElmDirectionIsRTL = (elm: HTMLElement): boolean => style(elm, 'direction') === 'rtl';\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\n/**\r\n * Creates a size observer which observes any size, padding, border, margin and box-sizing changes of the target element. Depending on the options also direction and appear can be observed.\r\n * @param target The target element which shall be observed.\r\n * @param onSizeChangedCallback The callback which gets called after a size change was detected.\r\n * @param options The options for size detection, whether to observe also direction and appear.\r\n * @returns A object which represents the instance of the size observer.\r\n */\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (params: SizeObserverCallbackParams) => any,\r\n  options?: SizeObserverOptions\r\n): DestroySizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } =\r\n    options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(\r\n    `<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`\r\n  );\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const getIsDirectionRTL = getElmDirectionIsRTL.bind(0, sizeObserver);\r\n  const [updateResizeObserverContentRectCache] = createCache<DOMRectReadOnly | undefined>({\r\n    _initialValue: undefined,\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (\r\n    sizeChangedContext?: CacheValues<boolean> | ResizeObserverEntry[] | Event | boolean\r\n  ) => {\r\n    const isResizeObserverCall =\r\n      isArray(sizeChangedContext) &&\r\n      sizeChangedContext.length > 0 &&\r\n      isObject(sizeChangedContext[0]);\r\n\r\n    const hasDirectionCache =\r\n      !isResizeObserverCall && isBoolean((sizeChangedContext as CacheValues<boolean>)[0]);\r\n\r\n    let skip = false;\r\n    let appear: boolean | number | undefined = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isResizeObserverCall) {\r\n      const [currRContentRect, , prevContentRect] = updateResizeObserverContentRectCache(\r\n        (sizeChangedContext as ResizeObserverEntry[]).pop()!.contentRect\r\n      );\r\n      const hasDimensions = domRectHasDimensions(currRContentRect);\r\n      const hadDimensions = domRectHasDimensions(prevContentRect);\r\n      skip = !prevContentRect || !hasDimensions; // skip on initial RO. call or if display is none\r\n      appear = !hadDimensions && hasDimensions;\r\n\r\n      doDirectionScroll = !skip; // direction scroll when not skipping\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      [, doDirectionScroll] = sizeChangedContext as CacheValues<boolean>; // direction scroll when DirectionCache changed, false otherwise\r\n    }\r\n    // else if it triggered with appear from polyfill\r\n    else {\r\n      appear = sizeChangedContext === true;\r\n    }\r\n\r\n    if (observeDirectionChange && doDirectionScroll) {\r\n      const rtl = hasDirectionCache\r\n        ? (sizeChangedContext as CacheValues<boolean>)[0]\r\n        : getElmDirectionIsRTL(sizeObserver);\r\n      scrollLeft(\r\n        sizeObserver,\r\n        rtl\r\n          ? rtlScrollBehavior.n\r\n            ? -scrollAmount\r\n            : rtlScrollBehavior.i\r\n            ? 0\r\n            : scrollAmount\r\n          : scrollAmount\r\n      );\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback({\r\n        _sizeChanged: !hasDirectionCache,\r\n        _directionIsRTLCache: hasDirectionCache\r\n          ? (sizeChangedContext as CacheValues<boolean>)\r\n          : undefined,\r\n        _appear: !!appear,\r\n      });\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange\r\n    ? onSizeChangedCallbackProxy\r\n    : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => {\r\n      resizeObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(observerElementChildrenRoot);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = (appear?: unknown) => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy(appear === true);\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event | false) => {\r\n      currSize = offsetSize(observerElementChildrenRoot);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent) {\r\n        stopAndPrevent(scrollEvent);\r\n\r\n        if (isDirty && !rAFId) {\r\n          cAF!(rAFId);\r\n          rAFId = rAF!(onResized);\r\n        }\r\n      } else {\r\n        onResized(scrollEvent === false);\r\n      }\r\n\r\n      reset();\r\n    };\r\n\r\n    push(offListeners, [\r\n      on(expandElement, scrollEventName, onScroll),\r\n      on(shrinkElement, scrollEventName, onScroll),\r\n    ]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n\r\n    reset();\r\n\r\n    appearCallback = observeAppearChange ? onScroll.bind(0, false) : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(\r\n      {\r\n        _initialValue: !getIsDirectionRTL(), // invert current value to trigger initial change\r\n      },\r\n      getIsDirectionRTL\r\n    );\r\n    const [updateDirectionIsRTLCache] = directionIsRTLCache;\r\n\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        const [directionIsRTL, directionIsRTLChanged] = directionIsRTLCacheValues;\r\n\r\n        if (directionIsRTLChanged) {\r\n          removeClass(listenerElement, 'ltr rtl');\r\n          if (directionIsRTL) {\r\n            addClass(listenerElement, 'rtl');\r\n          } else {\r\n            addClass(listenerElement, 'ltr');\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        stopAndPrevent(event);\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(sizeObserver);\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDiv,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport type DestroyTrinsicObserver = () => void;\r\n\r\nconst isHeightIntrinsic = (ioEntryOrSize: IntersectionObserverEntry | WH<number>): boolean =>\r\n  (ioEntryOrSize as WH<number>).h === 0 ||\r\n  (ioEntryOrSize as IntersectionObserverEntry).isIntersecting ||\r\n  (ioEntryOrSize as IntersectionObserverEntry).intersectionRatio > 0;\r\n\r\n/**\r\n * Creates a trinsic observer which observes changes to intrinsic or extrinsic sizing for the height of the target element.\r\n * @param target The element which shall be observed.\r\n * @param onTrinsicChangedCallback The callback which gets called after a change was detected.\r\n * @returns A object which represents the instance of the trinsic observer.\r\n */\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): DestroyTrinsicObserver => {\r\n  const trinsicObserver = createDiv(classNameTrinsicObserver);\r\n  const offListeners: (() => void)[] = [];\r\n  const [updateHeightIntrinsicCache] = createCache({\r\n    _initialValue: false,\r\n  });\r\n\r\n  const triggerOnTrinsicChangedCallback = (\r\n    updateValue?: IntersectionObserverEntry | WH<number>\r\n  ) => {\r\n    if (updateValue) {\r\n      const heightIntrinsic = updateHeightIntrinsicCache(isHeightIntrinsic(updateValue));\r\n      const [, heightIntrinsicChanged] = heightIntrinsic;\r\n\r\n      if (heightIntrinsicChanged) {\r\n        onTrinsicChangedCallback(heightIntrinsic);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          triggerOnTrinsicChangedCallback(entries.pop());\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => {\r\n      intersectionObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const onSizeChanged = () => {\r\n      const newSize = offsetSize(trinsicObserver);\r\n      triggerOnTrinsicChangedCallback(newSize);\r\n    };\r\n    push(offListeners, createSizeObserver(trinsicObserver, onSizeChanged));\r\n    onSizeChanged();\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(trinsicObserver);\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n} from 'support';\r\n\r\ntype DOMContentObserverCallback = (contentChangedTroughEvent: boolean) => any;\r\n\r\ntype DOMTargetObserverCallback = (targetChangedAttrs: string[], targetStyleChanged: boolean) => any;\r\n\r\ninterface DOMObserverOptionsBase {\r\n  _attributes?: string[];\r\n  _styleChangingAttributes?: string[];\r\n}\r\n\r\ninterface DOMContentObserverOptions extends DOMObserverOptionsBase {\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname(s) | function returning eventname(s)] -> eventnames divided by whitespaces\r\n  _nestedTargetSelector?: string;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange; // function which will prevent marking certain dom changes as content change if it returns true\r\n  _ignoreNestedTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed on nested targets if it returns true\r\n}\r\n\r\ninterface DOMTargetObserverOptions extends DOMObserverOptionsBase {\r\n  _ignoreTargetChange?: DOMObserverIgnoreTargetChange; // a function which will prevent marking certain attributes as changed if it returns true\r\n}\r\n\r\ntype ContentChangeArrayItem = [string?, string?] | null | undefined;\r\n\r\nexport type DOMObserverEventContentChange =\r\n  | Array<ContentChangeArrayItem>\r\n  | false\r\n  | null\r\n  | undefined;\r\n\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions?: DOMContentObserverOptions\r\n) => boolean;\r\n\r\nexport type DOMObserverIgnoreTargetChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\n\r\nexport type DOMObserverCallback<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverCallback\r\n  : DOMTargetObserverCallback;\r\n\r\nexport type DOMObserverOptions<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverOptions\r\n  : DOMTargetObserverOptions;\r\n\r\nexport type DOMObserver = [destroy: () => void, update: () => void];\r\n\r\ntype EventContentChangeUpdateElement = (getElements?: (selector: string) => Node[]) => void;\r\ntype EventContentChange = [destroy: () => void, updateElements: EventContentChangeUpdateElement];\r\n\r\n/**\r\n * Creates a set of helper functions to observe events of elements inside the target element.\r\n * @param target The target element of which the children elements shall be observed. (not only direct children but also nested ones)\r\n * @param eventContentChange The event content change array. (array of tuples: selector and eventname(s))\r\n * @param callback Callback which is called if one of the elements emits the corresponding event.\r\n * @returns A object which contains a set of helper functions to destroy and update the observation of elements.\r\n */\r\nconst createEventContentChange = (\r\n  target: Element,\r\n  callback: (...args: any) => any,\r\n  eventContentChange?: DOMObserverEventContentChange\r\n): EventContentChange => {\r\n  let map: WeakMap<Node, [string, () => any]> | undefined; // weak map to prevent memory leak for detached elements\r\n  let destroyed = false;\r\n  const destroy = () => {\r\n    destroyed = true;\r\n  };\r\n  const updateElements: EventContentChangeUpdateElement = (getElements?) => {\r\n    if (eventContentChange) {\r\n      const eventElmList = eventContentChange.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventNames = item[1];\r\n          const elements =\r\n            eventNames &&\r\n            selector &&\r\n            (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements && elements.length && eventNames && isString(eventNames)) {\r\n            push(arr, [elements, eventNames.trim()], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) =>\r\n        each(item[0], (elm) => {\r\n          const eventNames = item[1];\r\n          const entry = map!.get(elm);\r\n\r\n          if (entry) {\r\n            const entryEventNames = entry[0];\r\n            const entryOff = entry[1];\r\n\r\n            // in case an already registered element is registered again, unregister the previous events\r\n            if (entryEventNames === eventNames) {\r\n              entryOff();\r\n            }\r\n          }\r\n\r\n          const off = on(elm, eventNames, (event: Event) => {\r\n            if (destroyed) {\r\n              off();\r\n              map!.delete(elm);\r\n            } else {\r\n              callback(event);\r\n            }\r\n          });\r\n          map!.set(elm, [eventNames, off]);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    map = new WeakMap();\r\n    updateElements();\r\n  }\r\n\r\n  return [destroy, updateElements];\r\n};\r\n\r\n/**\r\n * Creates a DOM observer which observes DOM changes to either the target element or its children.\r\n * @param target The element which shall be observed.\r\n * @param isContentObserver Whether this observer is just observing the target or just the targets children. (not only direct children but also nested ones)\r\n * @param callback The callback which gets called if a change was detected.\r\n * @param options The options for DOM change detection.\r\n * @returns A object which represents the instance of the DOM observer.\r\n */\r\nexport const createDOMObserver = <ContentObserver extends boolean>(\r\n  target: HTMLElement,\r\n  isContentObserver: ContentObserver,\r\n  callback: DOMObserverCallback<ContentObserver>,\r\n  options?: DOMObserverOptions<ContentObserver>\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetChange,\r\n    _ignoreNestedTargetChange,\r\n    _ignoreContentChange,\r\n  } = (options as DOMContentObserverOptions & DOMTargetObserverOptions) || {};\r\n  const [destroyEventContentChange, updateEventContentChangeElements] = createEventContentChange(\r\n    target,\r\n    debounce(\r\n      () => {\r\n        if (isConnected) {\r\n          (callback as DOMContentObserverCallback)(true);\r\n        }\r\n      },\r\n      { _timeout: 33, _maxDelay: 99 }\r\n    ),\r\n    _eventContentChange\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes);\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange =\r\n      (isContentObserver ? _ignoreNestedTargetChange : _ignoreTargetChange) || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue =\r\n        isAttributesType && isString(attributeName)\r\n          ? attr(mutationTarget as HTMLElement, attributeName!)\r\n          : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const styleChangingAttrChanged =\r\n        indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      // if is content observer and something changed in children\r\n      if (isContentObserver && !targetIsMutationTarget) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged;\r\n        const isNestedTarget =\r\n          contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged =\r\n          baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      // if is target observer and target attr changed\r\n      if (\r\n        !isContentObserver &&\r\n        targetIsMutationTarget &&\r\n        attributeChanged &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n      ) {\r\n        push(targetChangedAttrs, attributeName!);\r\n        targetStyleChanged = targetStyleChanged || styleChangingAttrChanged;\r\n      }\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      // adds / removes the new elements from the event content change\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n\r\n    if (isContentObserver) {\r\n      contentChanged && (callback as DOMContentObserverCallback)(false);\r\n    } else if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged) {\r\n      (callback as DOMTargetObserverCallback)(targetChangedAttrs, targetStyleChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: isContentObserver,\r\n    childList: isContentObserver,\r\n    characterData: isContentObserver,\r\n  });\r\n  isConnected = true;\r\n\r\n  return [\r\n    () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  ];\r\n};\r\n","import {\r\n  diffClass,\r\n  debounce,\r\n  isArray,\r\n  isNumber,\r\n  each,\r\n  indexOf,\r\n  isString,\r\n  attr,\r\n  removeAttr,\r\n  CacheValues,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport { createSizeObserver, SizeObserverCallbackParams } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver, DOMObserver } from 'observers/domObserver';\r\nimport { LifecycleHub, LifecycleCheckOption, LifecycleUpdateHints } from 'lifecycles/lifecycleHub';\r\n\r\nexport type UpdateObserverOptions = (checkOption: LifecycleCheckOption) => void;\r\n\r\nexport type LifecycleHubObservers = [\r\n  updateObserverOptions: UpdateObserverOptions,\r\n  destroy: () => void\r\n];\r\n\r\n// const hostSelector = `.${classNameHost}`;\r\n\r\n// TODO: observer textarea attrs if textarea\r\n// TODO: test _ignoreContentChange & _ignoreNestedTargetChange for content dom observer\r\n// TODO: test _ignoreTargetChange for target dom observer\r\n\r\n// const viewportSelector = `.${classNameViewport}`;\r\n// const contentSelector = `.${classNameContent}`;\r\nconst ignorePrefix = 'os-';\r\nconst viewportAttrsFromTarget = ['tabindex'];\r\nconst baseStyleChangingAttrsTextarea = ['wrap', 'cols', 'rows'];\r\nconst baseStyleChangingAttrs = ['id', 'class', 'style', 'open'];\r\n\r\nconst ignoreTargetChange = (\r\n  target: Node,\r\n  attrName: string,\r\n  oldValue: string | null,\r\n  newValue: string | null\r\n) => {\r\n  if (attrName === 'class' && oldValue && newValue) {\r\n    const diff = diffClass(oldValue, newValue);\r\n    return !!diff.find((addedOrRemovedClass) => addedOrRemovedClass.indexOf(ignorePrefix) !== 0);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const lifecycleHubOservers = (\r\n  instance: LifecycleHub,\r\n  updateLifecycles: (updateHints: Partial<LifecycleUpdateHints>) => unknown\r\n): LifecycleHubObservers => {\r\n  let debounceTimeout: number | false | undefined;\r\n  let debounceMaxDelay: number | false | undefined;\r\n  let contentMutationObserver: DOMObserver | undefined;\r\n  const { _structureSetup } = instance;\r\n  const { _targetObj, _targetCtx } = _structureSetup;\r\n  const { _host, _viewport, _content } = _targetObj;\r\n  const { _isTextarea } = _targetCtx;\r\n  const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n  const contentMutationObserverAttr = _isTextarea\r\n    ? baseStyleChangingAttrsTextarea\r\n    : baseStyleChangingAttrs.concat(baseStyleChangingAttrsTextarea);\r\n  const updateLifecyclesWithDebouncedAdaptiveUpdateHints = debounce(updateLifecycles, {\r\n    _timeout: () => debounceTimeout,\r\n    _maxDelay: () => debounceMaxDelay,\r\n    _mergeParams(prev, curr) {\r\n      const {\r\n        _sizeChanged: prevSizeChanged,\r\n        _hostMutation: prevHostMutation,\r\n        _contentMutation: prevContentMutation,\r\n      } = prev[0];\r\n      const {\r\n        _sizeChanged: currSizeChanged,\r\n        _hostMutation: currvHostMutation,\r\n        _contentMutation: currContentMutation,\r\n      } = curr[0];\r\n      const merged: [Partial<LifecycleUpdateHints>] = [\r\n        {\r\n          _sizeChanged: prevSizeChanged || currSizeChanged,\r\n          _hostMutation: prevHostMutation || currvHostMutation,\r\n          _contentMutation: prevContentMutation || currContentMutation,\r\n        },\r\n      ];\r\n\r\n      return merged;\r\n    },\r\n  });\r\n\r\n  const updateViewportAttrsFromHost = (attributes?: string[]) => {\r\n    each(attributes || viewportAttrsFromTarget, (attribute) => {\r\n      if (indexOf(viewportAttrsFromTarget, attribute) > -1) {\r\n        const hostAttr = attr(_host, attribute);\r\n        if (isString(hostAttr)) {\r\n          attr(_viewport, attribute, hostAttr);\r\n        } else {\r\n          removeAttr(_viewport, attribute);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsic: CacheValues<boolean>) => {\r\n    updateLifecycles({\r\n      _heightIntrinsic: heightIntrinsic,\r\n    });\r\n  };\r\n  const onSizeChanged = ({\r\n    _sizeChanged,\r\n    _directionIsRTLCache,\r\n    _appear,\r\n  }: SizeObserverCallbackParams) => {\r\n    const updateFn =\r\n      !_sizeChanged || _appear\r\n        ? updateLifecycles\r\n        : updateLifecyclesWithDebouncedAdaptiveUpdateHints;\r\n\r\n    updateFn({\r\n      _sizeChanged,\r\n      _directionIsRTL: _directionIsRTLCache,\r\n    });\r\n  };\r\n  const onContentMutation = (contentChangedTroughEvent: boolean) => {\r\n    // if contentChangedTroughEvent is true its already debounced\r\n    const updateFn = contentChangedTroughEvent\r\n      ? updateLifecycles\r\n      : updateLifecyclesWithDebouncedAdaptiveUpdateHints;\r\n    updateFn({\r\n      _contentMutation: true,\r\n    });\r\n  };\r\n  const onHostMutation = (targetChangedAttrs: string[], targetStyleChanged: boolean) => {\r\n    if (targetStyleChanged) {\r\n      updateLifecyclesWithDebouncedAdaptiveUpdateHints({\r\n        _hostMutation: true,\r\n      });\r\n    } else {\r\n      updateViewportAttrsFromHost(targetChangedAttrs);\r\n    }\r\n  };\r\n\r\n  const destroyTrinsicObserver =\r\n    (_content || !_flexboxGlue) && createTrinsicObserver(_host, onTrinsicChanged);\r\n  const destroySizeObserver = createSizeObserver(_host, onSizeChanged, {\r\n    _appear: true,\r\n    _direction: !_nativeScrollbarStyling,\r\n  });\r\n  const [destroyHostMutationObserver] = createDOMObserver(_host, false, onHostMutation, {\r\n    _styleChangingAttributes: baseStyleChangingAttrs,\r\n    _attributes: baseStyleChangingAttrs.concat(viewportAttrsFromTarget),\r\n    _ignoreTargetChange: ignoreTargetChange,\r\n  });\r\n\r\n  const updateOptions: UpdateObserverOptions = (checkOption) => {\r\n    const [elementEvents, elementEventsChanged] = checkOption<Array<[string, string]> | null>(\r\n      'updating.elementEvents'\r\n    );\r\n    const [attributes, attributesChanged] = checkOption<string[] | null>('updating.attributes');\r\n    const [debounceValue, debounceChanged] = checkOption<Array<number> | number | null>(\r\n      'updating.debounce'\r\n    );\r\n    const updateContentMutationObserver = elementEventsChanged || attributesChanged;\r\n\r\n    if (updateContentMutationObserver) {\r\n      if (contentMutationObserver) {\r\n        contentMutationObserver[1](); // update\r\n        contentMutationObserver[0](); // destroy\r\n      }\r\n      contentMutationObserver = createDOMObserver(_content || _viewport, true, onContentMutation, {\r\n        _styleChangingAttributes: contentMutationObserverAttr.concat(attributes || []),\r\n        _attributes: contentMutationObserverAttr.concat(attributes || []),\r\n        _eventContentChange: elementEvents,\r\n        _ignoreNestedTargetChange: ignoreTargetChange,\r\n        // _nestedTargetSelector: hostSelector,\r\n        /*\r\n        _ignoreContentChange: (mutation, isNestedTarget) => {\r\n          const { target, attributeName } = mutation;\r\n          return isNestedTarget\r\n            ? false\r\n            : attributeName\r\n            ? liesBetween(target as Element, hostSelector, viewportSelector) || liesBetween(target as Element, hostSelector, contentSelector)\r\n            : false;\r\n        },\r\n        */\r\n      });\r\n    }\r\n\r\n    if (debounceChanged) {\r\n      updateLifecyclesWithDebouncedAdaptiveUpdateHints._flush();\r\n      if (isArray(debounceValue)) {\r\n        const timeout = debounceValue[0];\r\n        const maxWait = debounceValue[1];\r\n        debounceTimeout = isNumber(timeout) ? timeout : false;\r\n        debounceMaxDelay = isNumber(maxWait) ? maxWait : false;\r\n      } else if (isNumber(debounceValue)) {\r\n        debounceTimeout = debounceValue;\r\n        debounceMaxDelay = false;\r\n      } else {\r\n        debounceTimeout = false;\r\n        debounceMaxDelay = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  updateViewportAttrsFromHost();\r\n\r\n  return [\r\n    updateOptions,\r\n    () => {\r\n      contentMutationObserver && contentMutationObserver[0](); // destroy\r\n      destroyTrinsicObserver && destroyTrinsicObserver();\r\n      destroySizeObserver();\r\n      destroyHostMutationObserver();\r\n    },\r\n  ];\r\n};\r\n","import { style } from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the trinsic behavior of the content element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createTrinsicLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup } = lifecycleHub;\r\n  const { _content } = _structureSetup._targetObj;\r\n\r\n  return (updateHints) => {\r\n    const { _heightIntrinsic } = updateHints;\r\n    const [heightIntrinsic, heightIntrinsicChanged] = _heightIntrinsic;\r\n\r\n    if (heightIntrinsicChanged) {\r\n      style(_content, {\r\n        height: heightIntrinsic ? '' : '100%',\r\n        display: heightIntrinsic ? '' : 'inline',\r\n      });\r\n    }\r\n\r\n    return {\r\n      _sizeChanged: heightIntrinsicChanged,\r\n      _contentMutation: heightIntrinsicChanged,\r\n    };\r\n  };\r\n};\r\n","import { createCache, topRightBottomLeft, equalTRBL, style, assignDeep } from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\nimport { StyleObject } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the padding styling of the padding and viewport element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createPaddingLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const { _structureSetup, _setLifecycleCommunication } = lifecycleHub;\r\n  const { _host, _padding, _viewport } = _structureSetup._targetObj;\r\n  const [updatePaddingCache, currentPaddingCache] = createCache(\r\n    {\r\n      _equal: equalTRBL,\r\n      _initialValue: topRightBottomLeft(),\r\n    },\r\n    topRightBottomLeft.bind(0, _host, 'padding', '')\r\n  );\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    let [padding, paddingChanged] = currentPaddingCache(force);\r\n    const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n    const { _sizeChanged, _directionIsRTL, _contentMutation } = updateHints;\r\n    const [directionIsRTL, directionChanged] = _directionIsRTL;\r\n    const [paddingAbsolute, paddingAbsoluteChanged] = checkOption('paddingAbsolute');\r\n    const contentMutation = !_flexboxGlue && _contentMutation;\r\n\r\n    if (_sizeChanged || paddingChanged || contentMutation) {\r\n      [padding, paddingChanged] = updatePaddingCache(force);\r\n    }\r\n\r\n    const paddingStyleChanged = paddingAbsoluteChanged || directionChanged || paddingChanged;\r\n\r\n    if (paddingStyleChanged) {\r\n      // if there is no padding element and no scrollbar styling, paddingAbsolute isn't supported\r\n      const paddingRelative = !paddingAbsolute || (!_padding && !_nativeScrollbarStyling);\r\n      const paddingHorizontal = padding.r + padding.l;\r\n      const paddingVertical = padding.t + padding.b;\r\n\r\n      const paddingStyle: StyleObject = {\r\n        marginRight: paddingRelative && !directionIsRTL ? -paddingHorizontal : 0,\r\n        marginBottom: paddingRelative ? -paddingVertical : 0,\r\n        marginLeft: paddingRelative && directionIsRTL ? -paddingHorizontal : 0,\r\n        top: paddingRelative ? -padding.t : 0,\r\n        right: paddingRelative ? (directionIsRTL ? -padding.r : 'auto') : 0,\r\n        left: paddingRelative ? (directionIsRTL ? 'auto' : -padding.l) : 0,\r\n        width: paddingRelative ? `calc(100% + ${paddingHorizontal}px)` : '',\r\n      };\r\n      const viewportStyle: StyleObject = {\r\n        paddingTop: paddingRelative ? padding.t : 0,\r\n        paddingRight: paddingRelative ? padding.r : 0,\r\n        paddingBottom: paddingRelative ? padding.b : 0,\r\n        paddingLeft: paddingRelative ? padding.l : 0,\r\n      };\r\n\r\n      // if there is no padding element apply the style to the viewport element instead\r\n      style(_padding || _viewport, paddingStyle);\r\n      style(_viewport, viewportStyle);\r\n\r\n      _setLifecycleCommunication({\r\n        _padding: padding,\r\n        _paddingAbsolute: !paddingRelative,\r\n        _viewportPaddingStyle: _padding\r\n          ? viewportStyle\r\n          : assignDeep({}, paddingStyle, viewportStyle),\r\n      });\r\n    }\r\n\r\n    return {\r\n      _paddingStyleChanged: paddingStyleChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  keys,\r\n  attr,\r\n  WH,\r\n  XY,\r\n  style,\r\n  scrollSize,\r\n  CacheValues,\r\n  equalWH,\r\n  addClass,\r\n  removeClass,\r\n  clientSize,\r\n  offsetSize,\r\n  getBoundingClientRect,\r\n  noop,\r\n  each,\r\n  equalXY,\r\n} from 'support';\r\nimport { LifecycleHub, Lifecycle } from 'lifecycles/lifecycleHub';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverflowBehavior } from 'options';\r\nimport { StyleObject } from 'typings';\r\nimport { classNameViewportArrange, classNameViewportScrollbarStyling } from 'classnames';\r\n\r\ninterface ViewportOverflowState {\r\n  _scrollbarsHideOffset: XY<number>;\r\n  _scrollbarsHideOffsetArrange: XY<boolean>;\r\n  _overflowScroll: XY<boolean>;\r\n}\r\n\r\ntype UndoViewportArrangeResult = [\r\n  () => void, // redoViewportArrange\r\n  ViewportOverflowState?\r\n];\r\n\r\nconst { max, abs, round } = Math;\r\nconst overlaidScrollbarsHideOffset = 42;\r\nconst whCacheOptions = {\r\n  _equal: equalWH,\r\n  _initialValue: { w: 0, h: 0 },\r\n};\r\nconst xyCacheOptions = {\r\n  _equal: equalXY,\r\n  _initialValue: { x: false, y: false },\r\n};\r\nconst sizeFraction = (elm: HTMLElement): WH<number> => {\r\n  const viewportOffsetSize = offsetSize(elm);\r\n  const viewportRect = getBoundingClientRect(elm);\r\n  return {\r\n    w: viewportRect.width - viewportOffsetSize.w,\r\n    h: viewportRect.height - viewportOffsetSize.h,\r\n  };\r\n};\r\nconst fractionalPixelRatioTollerance = () => (window.devicePixelRatio % 1 === 0 ? 0 : 1);\r\nconst setAxisOverflowStyle = (\r\n  horizontal: boolean,\r\n  overflowAmount: number,\r\n  behavior: OverflowBehavior,\r\n  styleObj: StyleObject\r\n) => {\r\n  const overflowKey: keyof StyleObject = horizontal ? 'overflowX' : 'overflowY';\r\n  const behaviorIsVisible = behavior.indexOf('visible') === 0;\r\n  const behaviorIsVisibleHidden = behavior === 'visible-hidden';\r\n  const behaviorIsScroll = behavior === 'scroll';\r\n  const hasOverflow = overflowAmount > 0;\r\n\r\n  if (behaviorIsVisible) {\r\n    styleObj[overflowKey] = 'visible';\r\n  }\r\n  if (behaviorIsScroll && hasOverflow) {\r\n    styleObj[overflowKey] = behavior;\r\n  }\r\n\r\n  return {\r\n    _visible: behaviorIsVisible,\r\n    _behavior: behaviorIsVisibleHidden ? 'hidden' : 'scroll',\r\n  };\r\n};\r\n\r\nconst getOverflowAmount = (\r\n  viewportScrollSize: WH<number>,\r\n  viewportClientSize: WH<number>,\r\n  viewportSizeFraction: WH<number>\r\n) => ({\r\n  w: max(\r\n    0,\r\n    round(\r\n      max(0, viewportScrollSize.w - viewportClientSize.w) -\r\n        (fractionalPixelRatioTollerance() || max(0, viewportSizeFraction.w))\r\n    )\r\n  ),\r\n  h: max(\r\n    0,\r\n    round(\r\n      max(0, viewportScrollSize.h - viewportClientSize.h) -\r\n        (fractionalPixelRatioTollerance() || max(0, viewportSizeFraction.h))\r\n    )\r\n  ),\r\n});\r\n\r\n/**\r\n * Lifecycle with the responsibility to set the correct overflow and scrollbar hiding styles of the viewport element.\r\n * @param lifecycleHub\r\n * @returns\r\n */\r\nexport const createOverflowLifecycle = (lifecycleHub: LifecycleHub): Lifecycle => {\r\n  const {\r\n    _structureSetup,\r\n    _doViewportArrange,\r\n    _getLifecycleCommunication,\r\n    _setLifecycleCommunication,\r\n  } = lifecycleHub;\r\n\r\n  const { _host, _viewport, _viewportArrange } = _structureSetup._targetObj;\r\n\r\n  const [updateViewportSizeFraction, getCurrentViewportSizeFraction] = createCache<WH<number>>(\r\n    whCacheOptions,\r\n    sizeFraction.bind(0, _viewport)\r\n  );\r\n\r\n  const [updateViewportScrollSizeCache, getCurrentViewportScrollSizeCache] = createCache<\r\n    WH<number>\r\n  >(whCacheOptions, scrollSize.bind(0, _viewport));\r\n\r\n  const [updateOverflowAmountCache, getCurrentOverflowAmountCache] =\r\n    createCache<WH<number>>(whCacheOptions);\r\n\r\n  const [updateOverflowScrollCache] = createCache<XY<boolean>>(xyCacheOptions);\r\n\r\n  /**\r\n   * Applies a fixed height to the viewport so it can't overflow or underflow the host element.\r\n   * @param viewportOverflowState The current overflow state.\r\n   * @param heightIntrinsic Whether the host height is intrinsic or not.\r\n   */\r\n  const fixFlexboxGlue = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    heightIntrinsic: boolean\r\n  ) => {\r\n    style(_viewport, {\r\n      height: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      const { _nativeScrollbarIsOverlaid } = getEnvironment();\r\n      const { _paddingAbsolute, _padding } = _getLifecycleCommunication();\r\n      const { _overflowScroll, _scrollbarsHideOffset } = viewportOverflowState;\r\n      const hostSizeFraction = sizeFraction(_host);\r\n      const hostClientSize = clientSize(_host);\r\n      // padding subtraction is only needed if padding is absolute or if viewport is content-box\r\n      const isContentBox = style(_viewport, 'boxSizing') === 'content-box';\r\n      const paddingVertical = _paddingAbsolute || isContentBox ? _padding.b + _padding.t : 0;\r\n      const fractionalClientHeight =\r\n        hostClientSize.h + (abs(hostSizeFraction.h) < 1 ? hostSizeFraction.h : 0);\r\n      const subtractXScrollbar = !(_nativeScrollbarIsOverlaid.x && isContentBox);\r\n\r\n      style(_viewport, {\r\n        height:\r\n          fractionalClientHeight +\r\n          (_overflowScroll.x && subtractXScrollbar ? _scrollbarsHideOffset.x : 0) -\r\n          paddingVertical,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the current overflow state of the viewport.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param viewportStyleObj The viewport style object where the overflow scroll property can be read of, or undefined if shall be determined.\r\n   * @returns A object which contains informations about the current overflow state.\r\n   */\r\n  const getViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    viewportStyleObj?: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const { _nativeScrollbarSize, _nativeScrollbarIsOverlaid, _nativeScrollbarStyling } =\r\n      getEnvironment();\r\n    const { x: overlaidX, y: overlaidY } = _nativeScrollbarIsOverlaid;\r\n    const determineOverflow = !viewportStyleObj;\r\n    const arrangeHideOffset =\r\n      !_nativeScrollbarStyling && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const styleObj = determineOverflow\r\n      ? style(_viewport, ['overflowX', 'overflowY'])\r\n      : viewportStyleObj;\r\n    const scroll = {\r\n      x: styleObj.overflowX === 'scroll',\r\n      y: styleObj.overflowY === 'scroll',\r\n    };\r\n    const nonScrollbarStylingHideOffset = {\r\n      x: overlaidX ? arrangeHideOffset : _nativeScrollbarSize.x,\r\n      y: overlaidY ? arrangeHideOffset : _nativeScrollbarSize.y,\r\n    };\r\n    const scrollbarsHideOffset = {\r\n      x: scroll.x && !_nativeScrollbarStyling ? nonScrollbarStylingHideOffset.x : 0,\r\n      y: scroll.y && !_nativeScrollbarStyling ? nonScrollbarStylingHideOffset.y : 0,\r\n    };\r\n\r\n    return {\r\n      _overflowScroll: scroll,\r\n      _scrollbarsHideOffsetArrange: {\r\n        x: overlaidX && !!arrangeHideOffset,\r\n        y: overlaidY && !!arrangeHideOffset,\r\n      },\r\n      _scrollbarsHideOffset: scrollbarsHideOffset,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Sets the overflow property of the viewport and calculates the a overflow state according to the new parameters.\r\n   * @param showNativeOverlaidScrollbars Whether to show natively overlaid scrollbars.\r\n   * @param overflowAmount The overflow amount.\r\n   * @param overflow The overflow behavior according to the options.\r\n   * @param viewportStyleObj The viewport style object to which the overflow style shall be applied.\r\n   * @returns A object which represents the newly set overflow state.\r\n   */\r\n  const setViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    overflowAmount: WH<number>,\r\n    overflow: XY<OverflowBehavior>,\r\n    viewportStyleObj: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const { _visible: xVisible, _behavior: xVisibleBehavior } = setAxisOverflowStyle(\r\n      true,\r\n      overflowAmount.w,\r\n      overflow.x,\r\n      viewportStyleObj\r\n    );\r\n    const { _visible: yVisible, _behavior: yVisibleBehavior } = setAxisOverflowStyle(\r\n      false,\r\n      overflowAmount.h,\r\n      overflow.y,\r\n      viewportStyleObj\r\n    );\r\n\r\n    if (xVisible && !yVisible) {\r\n      viewportStyleObj.overflowX = xVisibleBehavior;\r\n    }\r\n    if (yVisible && !xVisible) {\r\n      viewportStyleObj.overflowY = yVisibleBehavior;\r\n    }\r\n\r\n    return getViewportOverflowState(showNativeOverlaidScrollbars, viewportStyleObj);\r\n  };\r\n\r\n  /**\r\n   * Sets the styles of the viewport arrange element.\r\n   * @param viewportOverflowState The viewport overflow state according to which the scrollbars shall be hidden.\r\n   * @param viewportScrollSize The content scroll size.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @returns A boolean which indicates whether the viewport arrange element was adjusted.\r\n   */\r\n  const arrangeViewport = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    viewportScrollSize: WH<number>,\r\n    viewportSizeFraction: WH<number>,\r\n    directionIsRTL: boolean\r\n  ) => {\r\n    if (_doViewportArrange) {\r\n      const { _viewportPaddingStyle } = _getLifecycleCommunication();\r\n      const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n      const viewportArrangeHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n        ? 'paddingRight'\r\n        : 'paddingLeft';\r\n      const viewportArrangeHorizontalPaddingValue = _viewportPaddingStyle[\r\n        viewportArrangeHorizontalPaddingKey\r\n      ] as number;\r\n      const viewportArrangeVerticalPaddingValue = _viewportPaddingStyle.paddingTop as number;\r\n      const fractionalContentWidth =\r\n        viewportScrollSize.w + (abs(viewportSizeFraction.w) < 1 ? viewportSizeFraction.w : 0);\r\n      const fractionalContenHeight =\r\n        viewportScrollSize.h + (abs(viewportSizeFraction.h) < 1 ? viewportSizeFraction.h : 0);\r\n      const arrangeSize = {\r\n        w:\r\n          hideOffsetY && arrangeY\r\n            ? `${hideOffsetY + fractionalContentWidth - viewportArrangeHorizontalPaddingValue}px`\r\n            : '',\r\n        h:\r\n          hideOffsetX && arrangeX\r\n            ? `${hideOffsetX + fractionalContenHeight - viewportArrangeVerticalPaddingValue}px`\r\n            : '',\r\n      };\r\n\r\n      // adjust content arrange / before element\r\n      if (_viewportArrange) {\r\n        const { sheet } = _viewportArrange;\r\n        if (sheet) {\r\n          const { cssRules } = sheet;\r\n          if (cssRules) {\r\n            if (!cssRules.length) {\r\n              sheet.insertRule(\r\n                `#${attr(_viewportArrange, 'id')} + .${classNameViewportArrange}::before {}`,\r\n                0\r\n              );\r\n            }\r\n\r\n            // @ts-ignore\r\n            const ruleStyle = cssRules[0].style;\r\n\r\n            ruleStyle.width = arrangeSize.w;\r\n            ruleStyle.height = arrangeSize.h;\r\n          }\r\n        }\r\n      } else {\r\n        style<'--os-vaw' | '--os-vah'>(_viewport, {\r\n          '--os-vaw': arrangeSize.w,\r\n          '--os-vah': arrangeSize.h,\r\n        });\r\n      }\r\n    }\r\n\r\n    return _doViewportArrange;\r\n  };\r\n\r\n  /**\r\n   * Hides the native scrollbars according to the passed parameters.\r\n   * @param viewportOverflowState The viewport overflow state.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportArrange Whether special styles related to the viewport arrange strategy shall be applied.\r\n   * @param viewportStyleObj The viewport style object to which the needed styles shall be applied.\r\n   */\r\n  const hideNativeScrollbars = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    directionIsRTL: boolean,\r\n    viewportArrange: boolean,\r\n    viewportStyleObj: StyleObject\r\n  ) => {\r\n    const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n    const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n    const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n    const { _viewportPaddingStyle: viewportPaddingStyle } = _getLifecycleCommunication();\r\n    const horizontalMarginKey: keyof StyleObject = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const viewportHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n      ? 'paddingLeft'\r\n      : 'paddingRight';\r\n    const horizontalMarginValue = viewportPaddingStyle[horizontalMarginKey] as number;\r\n    const verticalMarginValue = viewportPaddingStyle.marginBottom as number;\r\n    const horizontalPaddingValue = viewportPaddingStyle[viewportHorizontalPaddingKey] as number;\r\n    const verticalPaddingValue = viewportPaddingStyle.paddingBottom as number;\r\n\r\n    // horizontal\r\n    viewportStyleObj.width = `calc(100% + ${hideOffsetY + horizontalMarginValue * -1}px)`;\r\n    viewportStyleObj[horizontalMarginKey] = -hideOffsetY + horizontalMarginValue;\r\n\r\n    // vertical\r\n    viewportStyleObj.marginBottom = -hideOffsetX + verticalMarginValue;\r\n\r\n    // viewport arrange additional styles\r\n    if (viewportArrange) {\r\n      viewportStyleObj[viewportHorizontalPaddingKey] =\r\n        horizontalPaddingValue + (arrangeY ? hideOffsetY : 0);\r\n      viewportStyleObj.paddingBottom = verticalPaddingValue + (arrangeX ? hideOffsetX : 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes all styles applied because of the viewport arrange strategy.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportOverflowState The currentviewport overflow state or undefined if it has to be determined.\r\n   * @returns A object with a function which applies all the removed styles and the determined viewport vverflow state.\r\n   */\r\n  const undoViewportArrange = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    directionIsRTL: boolean,\r\n    viewportOverflowState?: ViewportOverflowState\r\n  ): UndoViewportArrangeResult => {\r\n    if (_doViewportArrange) {\r\n      const finalViewportOverflowState =\r\n        viewportOverflowState || getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      const { _viewportPaddingStyle: viewportPaddingStyle } = _getLifecycleCommunication();\r\n      const { _flexboxGlue } = getEnvironment();\r\n      const { _scrollbarsHideOffsetArrange } = finalViewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const finalPaddingStyle: StyleObject = {};\r\n      const assignProps = (props: string) =>\r\n        each(props.split(' '), (prop) => {\r\n          finalPaddingStyle[prop] = viewportPaddingStyle[prop];\r\n        });\r\n\r\n      if (!_flexboxGlue) {\r\n        finalPaddingStyle.height = '';\r\n      }\r\n\r\n      if (arrangeX) {\r\n        assignProps('marginBottom paddingTop paddingBottom');\r\n      }\r\n\r\n      if (arrangeY) {\r\n        assignProps('marginLeft marginRight paddingLeft paddingRight');\r\n      }\r\n\r\n      const prevStyle = style(_viewport, keys(finalPaddingStyle));\r\n      removeClass(_viewport, classNameViewportArrange);\r\n      style(_viewport, finalPaddingStyle);\r\n\r\n      return [\r\n        () => {\r\n          hideNativeScrollbars(\r\n            finalViewportOverflowState,\r\n            directionIsRTL,\r\n            _doViewportArrange,\r\n            prevStyle\r\n          );\r\n          style(_viewport, prevStyle);\r\n          addClass(_viewport, classNameViewportArrange);\r\n        },\r\n        finalViewportOverflowState,\r\n      ];\r\n    }\r\n    return [noop];\r\n  };\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    const {\r\n      _directionIsRTL,\r\n      _heightIntrinsic,\r\n      _sizeChanged,\r\n      _hostMutation,\r\n      _contentMutation,\r\n      _paddingStyleChanged,\r\n    } = updateHints;\r\n    const { _flexboxGlue, _nativeScrollbarStyling, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n    const [heightIntrinsic, heightIntrinsicChanged] = _heightIntrinsic;\r\n    const [directionIsRTL, directionChanged] = _directionIsRTL;\r\n    const [showNativeOverlaidScrollbarsOption, showNativeOverlaidScrollbarsChanged] =\r\n      checkOption<boolean>('nativeScrollbarsOverlaid.show');\r\n    const showNativeOverlaidScrollbars =\r\n      showNativeOverlaidScrollbarsOption &&\r\n      _nativeScrollbarIsOverlaid.x &&\r\n      _nativeScrollbarIsOverlaid.y;\r\n    const adjustFlexboxGlue =\r\n      !_flexboxGlue &&\r\n      (_sizeChanged ||\r\n        _contentMutation ||\r\n        _hostMutation ||\r\n        showNativeOverlaidScrollbarsChanged ||\r\n        heightIntrinsicChanged);\r\n\r\n    let viewportSizeFractionCache: CacheValues<WH<number>> = getCurrentViewportSizeFraction(force);\r\n    let viewportScrollSizeCache: CacheValues<WH<number>> = getCurrentViewportScrollSizeCache(force);\r\n    let overflowAmuntCache: CacheValues<WH<number>> = getCurrentOverflowAmountCache(force);\r\n    let preMeasureViewportOverflowState: ViewportOverflowState | undefined;\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      if (showNativeOverlaidScrollbars) {\r\n        removeClass(_viewport, classNameViewportScrollbarStyling);\r\n      } else {\r\n        addClass(_viewport, classNameViewportScrollbarStyling);\r\n      }\r\n    }\r\n\r\n    if (adjustFlexboxGlue) {\r\n      preMeasureViewportOverflowState = getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      fixFlexboxGlue(preMeasureViewportOverflowState, !!heightIntrinsic);\r\n    }\r\n\r\n    if (\r\n      _sizeChanged ||\r\n      _paddingStyleChanged ||\r\n      _contentMutation ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      directionChanged\r\n    ) {\r\n      const [redoViewportArrange, undoViewportArrangeOverflowState] = undoViewportArrange(\r\n        showNativeOverlaidScrollbars,\r\n        directionIsRTL,\r\n        preMeasureViewportOverflowState\r\n      );\r\n      const [viewportSizeFraction, viewportSizeFractionCahnged] = (viewportSizeFractionCache =\r\n        updateViewportSizeFraction(force));\r\n      const [viewportScrollSize, viewportScrollSizeChanged] = (viewportScrollSizeCache =\r\n        updateViewportScrollSizeCache(force));\r\n      const viewportContentSize = clientSize(_viewport);\r\n      let arrangedViewportScrollSize = viewportScrollSize;\r\n      let arrangedViewportClientSize = viewportContentSize;\r\n\r\n      redoViewportArrange();\r\n\r\n      // if re measure is required (only required if content arrange strategy is used)\r\n      if (\r\n        (viewportScrollSizeChanged ||\r\n          viewportSizeFractionCahnged ||\r\n          showNativeOverlaidScrollbarsChanged) &&\r\n        undoViewportArrangeOverflowState &&\r\n        !showNativeOverlaidScrollbars &&\r\n        arrangeViewport(\r\n          undoViewportArrangeOverflowState,\r\n          viewportScrollSize,\r\n          viewportSizeFraction,\r\n          directionIsRTL\r\n        )\r\n      ) {\r\n        arrangedViewportClientSize = clientSize(_viewport);\r\n        arrangedViewportScrollSize = scrollSize(_viewport);\r\n      }\r\n\r\n      overflowAmuntCache = updateOverflowAmountCache(\r\n        getOverflowAmount(\r\n          {\r\n            w: max(viewportScrollSize.w, arrangedViewportScrollSize.w),\r\n            h: max(viewportScrollSize.h, arrangedViewportScrollSize.h),\r\n          }, // scroll size\r\n          {\r\n            w: arrangedViewportClientSize.w + max(0, viewportContentSize.w - viewportScrollSize.w),\r\n            h: arrangedViewportClientSize.h + max(0, viewportContentSize.h - viewportScrollSize.h),\r\n          }, // client size\r\n          viewportSizeFraction\r\n        ),\r\n        force\r\n      );\r\n    }\r\n\r\n    const [viewportSizeFraction, viewportSizeFractionChanged] = viewportSizeFractionCache;\r\n    const [viewportScrollSize, viewportScrollSizeChanged] = viewportScrollSizeCache;\r\n    const [overflowAmount, overflowAmountChanged] = overflowAmuntCache;\r\n    const [overflow, overflowChanged] = checkOption<XY<OverflowBehavior>>('overflow');\r\n\r\n    if (\r\n      _paddingStyleChanged ||\r\n      viewportSizeFractionChanged ||\r\n      viewportScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      directionChanged ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: StyleObject = {\r\n        marginRight: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n        width: '',\r\n        overflowY: '',\r\n        overflowX: '',\r\n      };\r\n\r\n      const viewportOverflowState = setViewportOverflowState(\r\n        showNativeOverlaidScrollbars,\r\n        overflowAmount,\r\n        overflow,\r\n        viewportStyle\r\n      );\r\n      const viewportArranged = arrangeViewport(\r\n        viewportOverflowState,\r\n        viewportScrollSize,\r\n        viewportSizeFraction,\r\n        directionIsRTL\r\n      );\r\n      hideNativeScrollbars(viewportOverflowState, directionIsRTL, viewportArranged, viewportStyle);\r\n\r\n      if (adjustFlexboxGlue) {\r\n        fixFlexboxGlue(viewportOverflowState, !!heightIntrinsic);\r\n      }\r\n\r\n      // TODO: hide host overflow if scroll x or y and no padding element there\r\n      // TODO: Test without content\r\n      // TODO: Test without padding\r\n      // TODO: overflow: visible on padding / host if overflow visible on both axis\r\n\r\n      style(_viewport, viewportStyle);\r\n\r\n      _setLifecycleCommunication({\r\n        _viewportOverflowScrollCache: updateOverflowScrollCache(\r\n          viewportOverflowState._overflowScroll\r\n        ),\r\n        _viewportOverflowAmountCache: overflowAmuntCache,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import {\r\n  XY,\r\n  WH,\r\n  TRBL,\r\n  CacheValues,\r\n  each,\r\n  hasOwnProperty,\r\n  isNumber,\r\n  scrollLeft,\r\n  scrollTop,\r\n  assignDeep,\r\n  keys,\r\n  isBoolean,\r\n} from 'support';\r\nimport { OSOptions } from 'options';\r\nimport { getEnvironment } from 'environment';\r\nimport { StructureSetup } from 'setups/structureSetup';\r\nimport { lifecycleHubOservers, UpdateObserverOptions } from 'lifecycles/lifecycleHubObservers';\r\nimport { createTrinsicLifecycle } from 'lifecycles/trinsicLifecycle';\r\nimport { createPaddingLifecycle } from 'lifecycles/paddingLifecycle';\r\nimport { createOverflowLifecycle } from 'lifecycles/overflowLifecycle';\r\nimport { StyleObject, PartialOptions } from 'typings';\r\nimport { ScrollbarsSetup } from 'setups/scrollbarsSetup';\r\nimport { TriggerEventListener } from 'eventListeners';\r\n\r\nexport type LifecycleCheckOption = <T>(path: string) => LifecycleOptionInfo<T>;\r\n\r\nexport type Lifecycle = (\r\n  updateHints: LifecycleUpdateHints,\r\n  checkOption: LifecycleCheckOption,\r\n  force: boolean\r\n) => Partial<LifecycleUpdateHints> | void;\r\n\r\nexport type LifecycleOptionInfo<T> = [T, boolean];\r\n\r\nexport interface LifecycleCommunication {\r\n  _padding: TRBL;\r\n  _paddingAbsolute: boolean;\r\n  _viewportPaddingStyle: StyleObject;\r\n  _viewportOverflowScrollCache: CacheValues<XY<boolean>>;\r\n  _viewportOverflowAmountCache: CacheValues<WH<number>>;\r\n}\r\n\r\nexport interface LifecycleUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n  _paddingStyleChanged: boolean;\r\n  _directionIsRTL: CacheValues<boolean>;\r\n  _heightIntrinsic: CacheValues<boolean>;\r\n}\r\n\r\nexport interface LifecycleHubState {\r\n  _overflowAmount: WH<number>;\r\n}\r\n\r\nexport interface LifecycleHubInstance {\r\n  _update(changedOptions: PartialOptions<OSOptions>, force?: boolean): void;\r\n  _state(): LifecycleHubState;\r\n  _destroy(): void;\r\n}\r\n\r\nexport interface LifecycleHub {\r\n  _options: OSOptions;\r\n  _structureSetup: StructureSetup;\r\n  // whether the \"viewport arrange\" strategy must be used (true if no native scrollbar hiding and scrollbars are overlaid)\r\n  _doViewportArrange: boolean;\r\n  _getLifecycleCommunication(): LifecycleCommunication;\r\n  _setLifecycleCommunication(newLifecycleCommunication?: Partial<LifecycleCommunication>): void;\r\n}\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj\r\n    ? path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj)\r\n    : undefined;\r\n\r\nconst applyForceToCache = <T>(cacheValues: CacheValues<T>, force?: boolean): CacheValues<T> => [\r\n  cacheValues[0],\r\n  force || cacheValues[1],\r\n  cacheValues[2],\r\n];\r\nconst booleanCacheValuesFallback: CacheValues<boolean> = [false, false, false];\r\nconst initialLifecycleCommunication: LifecycleCommunication = {\r\n  _padding: {\r\n    t: 0,\r\n    r: 0,\r\n    b: 0,\r\n    l: 0,\r\n  },\r\n  _paddingAbsolute: false,\r\n  _viewportOverflowScrollCache: [\r\n    {\r\n      x: false,\r\n      y: false,\r\n    },\r\n    false,\r\n  ],\r\n  _viewportOverflowAmountCache: [\r\n    {\r\n      w: 0,\r\n      h: 0,\r\n    },\r\n    false,\r\n  ],\r\n  _viewportPaddingStyle: {\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n    marginLeft: 0,\r\n    paddingTop: 0,\r\n    paddingRight: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 0,\r\n  },\r\n};\r\n\r\nconst prepareUpdateHints = <T extends LifecycleUpdateHints>(\r\n  leading: Required<T>,\r\n  adaptive?: Partial<T>,\r\n  force?: boolean\r\n): Required<T> => {\r\n  const result = {};\r\n  const finalAdaptive = adaptive || {};\r\n  const objKeys = keys(leading).concat(keys(finalAdaptive));\r\n\r\n  each(objKeys, (key) => {\r\n    const leadingValue = leading[key];\r\n    const adaptiveValue = finalAdaptive[key];\r\n    result[key] = isBoolean(leadingValue)\r\n      ? !!force || !!leadingValue || !!adaptiveValue\r\n      : applyForceToCache(leadingValue || booleanCacheValuesFallback, force);\r\n  });\r\n\r\n  return result as Required<T>;\r\n};\r\n\r\nconst createOverflowChangedArgs = (overflowAmount: WH<number>, overflowScroll: XY<boolean>) => ({\r\n  amount: {\r\n    x: overflowAmount.w,\r\n    y: overflowAmount.h,\r\n  },\r\n  overflow: {\r\n    x: overflowAmount.w > 0,\r\n    y: overflowAmount.h > 0,\r\n  },\r\n  scrollableOverflow: assignDeep({}, overflowScroll),\r\n});\r\n\r\nexport const createLifecycleHub = (\r\n  options: OSOptions,\r\n  triggerListener: TriggerEventListener,\r\n  structureSetup: StructureSetup,\r\n  scrollbarsSetup: ScrollbarsSetup\r\n): LifecycleHubInstance => {\r\n  let lifecycleCommunication = initialLifecycleCommunication;\r\n  let updateObserverOptions: UpdateObserverOptions;\r\n  let destroyObservers: () => void;\r\n  const { _viewport } = structureSetup._targetObj;\r\n  const {\r\n    _nativeScrollbarStyling,\r\n    _nativeScrollbarIsOverlaid,\r\n    _flexboxGlue,\r\n    _addListener: addEnvironmentListener,\r\n    _removeListener: removeEnvironmentListener,\r\n  } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const instance: LifecycleHub = {\r\n    _options: options,\r\n    _structureSetup: structureSetup,\r\n    _doViewportArrange: doViewportArrange,\r\n    _getLifecycleCommunication: () => lifecycleCommunication,\r\n    _setLifecycleCommunication(newLifecycleCommunication) {\r\n      lifecycleCommunication = assignDeep({}, lifecycleCommunication, newLifecycleCommunication);\r\n    },\r\n  };\r\n  const lifecycles: Lifecycle[] = [\r\n    createTrinsicLifecycle(instance),\r\n    createPaddingLifecycle(instance),\r\n    createOverflowLifecycle(instance),\r\n  ];\r\n\r\n  const updateLifecycles = (\r\n    updateHints: Partial<LifecycleUpdateHints>,\r\n    changedOptions?: Partial<OSOptions>,\r\n    force?: boolean\r\n  ) => {\r\n    const initialUpdateHints = prepareUpdateHints(\r\n      assignDeep(\r\n        {\r\n          _sizeChanged: false,\r\n          _hostMutation: false,\r\n          _contentMutation: false,\r\n          _paddingStyleChanged: false,\r\n          _directionIsRTL: booleanCacheValuesFallback,\r\n          _heightIntrinsic: booleanCacheValuesFallback,\r\n        },\r\n        updateHints\r\n      ),\r\n      {},\r\n      force\r\n    );\r\n    const checkOption: LifecycleCheckOption = (path) => [\r\n      getPropByPath(options, path),\r\n      force || getPropByPath(changedOptions, path) !== undefined,\r\n    ];\r\n    const adjustScrollOffset = doViewportArrange || !_flexboxGlue;\r\n    const scrollOffsetX = adjustScrollOffset && scrollLeft(_viewport);\r\n    const scrollOffsetY = adjustScrollOffset && scrollTop(_viewport);\r\n\r\n    // place before updating lifecycles because of possible flushing of debounce\r\n    if (updateObserverOptions) {\r\n      updateObserverOptions(checkOption);\r\n    }\r\n\r\n    let adaptivedUpdateHints: Required<LifecycleUpdateHints> = initialUpdateHints;\r\n    each(lifecycles, (lifecycle) => {\r\n      adaptivedUpdateHints = prepareUpdateHints<LifecycleUpdateHints>(\r\n        adaptivedUpdateHints,\r\n        lifecycle(adaptivedUpdateHints, checkOption, !!force) || {},\r\n        force\r\n      );\r\n    });\r\n\r\n    if (isNumber(scrollOffsetX)) {\r\n      scrollLeft(_viewport, scrollOffsetX);\r\n    }\r\n    if (isNumber(scrollOffsetY)) {\r\n      scrollTop(_viewport, scrollOffsetY);\r\n    }\r\n\r\n    const {\r\n      _viewportOverflowAmountCache: overflowAmountCache,\r\n      _viewportOverflowScrollCache: overflowScrollCache,\r\n    } = lifecycleCommunication;\r\n    const [overflowAmount, overflowAmountChanged, prevOverflowAmount] = overflowAmountCache;\r\n    const [overflowScroll, overflowScrollChanged, prevOverflowScroll] = overflowScrollCache;\r\n\r\n    if (overflowAmountChanged || overflowScrollChanged) {\r\n      triggerListener(\r\n        'overflowChanged',\r\n        assignDeep({}, createOverflowChangedArgs(overflowAmount, overflowScroll), {\r\n          previous: createOverflowChangedArgs(prevOverflowAmount!, prevOverflowScroll!),\r\n        })\r\n      );\r\n    }\r\n\r\n    triggerListener('updated', {\r\n      updateHints: {\r\n        sizeChanged: adaptivedUpdateHints._sizeChanged,\r\n        contentMutation: adaptivedUpdateHints._contentMutation,\r\n        hostMutation: adaptivedUpdateHints._hostMutation,\r\n        directionChanged: adaptivedUpdateHints._directionIsRTL[1],\r\n        heightIntrinsicChanged: adaptivedUpdateHints._heightIntrinsic[1],\r\n      },\r\n      changedOptions: changedOptions || {},\r\n      force: !!force,\r\n    });\r\n  };\r\n  // eslint-disable-next-line prefer-const\r\n  [updateObserverOptions, destroyObservers] = lifecycleHubOservers(instance, updateLifecycles);\r\n\r\n  const update = (changedOptions: Partial<OSOptions>, force?: boolean) =>\r\n    updateLifecycles({}, changedOptions, force);\r\n  const envUpdateListener = update.bind(0, {}, true);\r\n  addEnvironmentListener(envUpdateListener);\r\n\r\n  return {\r\n    _update: update,\r\n    _state: () => ({\r\n      _overflowAmount: lifecycleCommunication._viewportOverflowAmountCache[0],\r\n    }),\r\n    _destroy() {\r\n      destroyObservers();\r\n      removeEnvironmentListener(envUpdateListener);\r\n\r\n      structureSetup._destroy();\r\n      scrollbarsSetup._destroy();\r\n    },\r\n  };\r\n};\r\n","import { assignDeep, each, isArray } from 'support';\r\nimport { OverlayScrollbars, OverlayScrollbarsStatic } from 'overlayscrollbars';\r\n\r\nexport type OSPluginInstance =\r\n  | Record<string, unknown>\r\n  | ((staticObj: OverlayScrollbarsStatic, instanceObj: OverlayScrollbars) => void);\r\nexport type OSPlugin<T extends OSPluginInstance = OSPluginInstance> = [string, T];\r\n\r\nconst pluginRegistry: Record<string, OSPluginInstance> = {};\r\n\r\nexport const getPlugins = () => assignDeep({}, pluginRegistry);\r\n\r\nexport const addPlugin = (addedPlugin: OSPlugin | OSPlugin[]) =>\r\n  each((isArray(addedPlugin) ? addedPlugin : [addedPlugin]) as OSPlugin[], (plugin) => {\r\n    pluginRegistry[plugin[0]] = plugin[1];\r\n  });\r\n","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { PlainObject, PartialOptions } from 'typings';\r\n\r\nexport type OptionsObjectType = Record<string, unknown>;\r\nexport type OptionsFunctionType = (this: unknown, ...args: unknown[]) => unknown;\r\nexport type OptionsTemplateType<T extends OptionsTemplateNativeTypes> = ExtractPropsKey<\r\n  OptionsTemplateTypeMap,\r\n  T\r\n>;\r\nexport type OptionsTemplateTypes = keyof OptionsTemplateTypeMap;\r\nexport type OptionsTemplateNativeTypes = OptionsTemplateTypeMap[keyof OptionsTemplateTypeMap];\r\n\r\nexport type OptionsTemplateValue<T extends OptionsTemplateNativeTypes = string> = T extends string\r\n  ? string extends T\r\n    ? OptionsTemplateValueNonEnum<T>\r\n    : string\r\n  : OptionsTemplateValueNonEnum<T>;\r\n\r\nexport type OptionsTemplate<T> = {\r\n  [P in keyof T]: T[P] extends OptionsObjectType\r\n    ? OptionsTemplate<T[P]>\r\n    : T[P] extends OptionsTemplateNativeTypes\r\n    ? OptionsTemplateValue<T[P]>\r\n    : never;\r\n};\r\n\r\nexport type OptionsValidationResult<T> = [\r\n  PartialOptions<T>, // validated\r\n  Record<string, unknown> // foreign\r\n];\r\n\r\ntype OptionsTemplateTypeMap = {\r\n  __TPL_boolean_TYPE__: boolean;\r\n  __TPL_number_TYPE__: number;\r\n  __TPL_string_TYPE__: string;\r\n  __TPL_array_TYPE__: Array<any> | ReadonlyArray<any>;\r\n  __TPL_function_TYPE__: OptionsFunctionType;\r\n  __TPL_null_TYPE__: null;\r\n  __TPL_object_TYPE__: OptionsObjectType;\r\n};\r\n\r\ntype OptionsTemplateValueNonEnum<T extends OptionsTemplateNativeTypes> =\r\n  | OptionsTemplateType<T>\r\n  | [OptionsTemplateType<T>, ...Array<OptionsTemplateTypes>];\r\n\r\ntype ExtractPropsKey<T, TProps extends T[keyof T]> = {\r\n  [P in keyof T]: TProps extends T[P] ? P : never;\r\n}[keyof T];\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<OptionsObjectType>;\r\n  readonly function: OptionsTemplateType<OptionsFunctionType>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = [\r\n  'boolean',\r\n  'number',\r\n  'string',\r\n  'array',\r\n  'object',\r\n  'function',\r\n  'null',\r\n].reduce((result, item) => {\r\n  result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n  return result;\r\n}, {} as OptionsTemplateTypesDictionary);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param template The template according to which the options object shall be validated.\r\n * @param options The options object which shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  template: OptionsTemplate<T>,\r\n  options: PartialOptions<T>,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: PartialOptions<T> = {};\r\n  const optionsCopy: PartialOptions<T> = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> =\r\n      template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const [validated, foreign] = validateRecursive(\r\n        templateValue as T,\r\n        optionsValue,\r\n        doWriteErrors,\r\n        propPrefix + prop\r\n      );\r\n      validatedOptions[prop] = validated as any;\r\n      optionsCopy[prop] = foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        validatedOptions[prop] = optionsValue;\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${\r\n            errorEnumStrings.length > 0\r\n              ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].`\r\n              : ''\r\n          }`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return [validatedOptions, optionsCopy]; // optionsCopy equals now to foreign options\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a tuple which looks like:\r\n * [\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n * ]\r\n * @param template The template according to which the options object shall be validated.\r\n * @param options The options object which shall be validated.\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  template: OptionsTemplate<T>,\r\n  options: PartialOptions<T>,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => validateRecursive<T>(template, options, doWriteErrors);\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n","import { OSPlugin } from 'plugins';\r\nimport {\r\n  OSOptions,\r\n  ResizeBehavior,\r\n  OverflowBehavior,\r\n  VisibilityBehavior,\r\n  AutoHideBehavior,\r\n} from 'options';\r\nimport {\r\n  validateOptions,\r\n  OptionsTemplate,\r\n  OptionsTemplateValue,\r\n  optionsTemplateTypes as oTypes,\r\n} from 'plugins/optionsValidation/validation';\r\nimport { PartialOptions } from 'typings';\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst booleanAllowedValues: OptionsTemplateValue<boolean> = oTypes.boolean;\r\nconst arrayNullValues: OptionsTemplateValue<Array<unknown> | null> = [oTypes.array, oTypes.null];\r\nconst stringArrayNullAllowedValues: OptionsTemplateValue<string | ReadonlyArray<string> | null> = [\r\n  oTypes.string,\r\n  oTypes.array,\r\n  oTypes.null,\r\n];\r\nconst resizeAllowedValues: OptionsTemplateValue<ResizeBehavior> = 'none both horizontal vertical';\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> =\r\n  'hidden scroll visible visible-hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> =\r\n  'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> =\r\n  'never scroll leavemove';\r\n\r\nconst optionsTemplate: OptionsTemplate<OSOptions> = {\r\n  resize: resizeAllowedValues, // none || both  || horizontal || vertical || n || b ||\r\n  paddingAbsolute: booleanAllowedValues, // true || false\r\n  updating: {\r\n    elementEvents: arrayNullValues, // array of tuples || null\r\n    attributes: arrayNullValues,\r\n    debounce: [oTypes.number, oTypes.array, oTypes.null], // number || number array || null\r\n  },\r\n  overflow: {\r\n    x: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n    y: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n  },\r\n  scrollbars: {\r\n    visibility: scrollbarsVisibilityAllowedValues, // visible || hidden || auto || v ||\r\n    autoHide: scrollbarsAutoHideAllowedValues, // never || scroll || leave || move ||\r\n    autoHideDelay: numberAllowedValues, // number\r\n    dragScroll: booleanAllowedValues, // true || false\r\n    clickScroll: booleanAllowedValues, // true || false\r\n    touch: booleanAllowedValues, // true || false\r\n  },\r\n  textarea: {\r\n    dynWidth: booleanAllowedValues, // true || false\r\n    dynHeight: booleanAllowedValues, // true || false\r\n    inheritedAttrs: stringArrayNullAllowedValues, // string || array || nul\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanAllowedValues, // true || false\r\n    initialize: booleanAllowedValues, // true || false\r\n  },\r\n  callbacks: {\r\n    onUpdated: [oTypes.function, oTypes.null],\r\n  },\r\n};\r\n\r\nexport type OptionsValidationPluginInstance = {\r\n  _: (options: PartialOptions<OSOptions>, doWriteErrors?: boolean) => PartialOptions<OSOptions>;\r\n};\r\n\r\nexport const optionsValidationPluginName = '__osOptionsValidationPlugin';\r\n\r\nexport const optionsValidationPlugin: OSPlugin<OptionsValidationPluginInstance> = [\r\n  optionsValidationPluginName,\r\n  {\r\n    _: (options: PartialOptions<OSOptions>, doWriteErrors?: boolean) => {\r\n      const [validated, foreign] = validateOptions(optionsTemplate, options, doWriteErrors);\r\n      return { ...foreign, ...validated };\r\n    },\r\n  },\r\n];\r\n","import { OverlayScrollbars } from 'overlayscrollbars';\r\n\r\nconst targets: Set<Element> = new Set();\r\nconst targetInstanceMap: WeakMap<Element, OverlayScrollbars> = new WeakMap();\r\n\r\n/**\r\n * Adds the given OverlayScrollbars instance to the given element.\r\n * @param target The element which is the target of the OverlayScrollbars instance.\r\n * @param osInstance The OverlayScrollbars instance.\r\n */\r\nexport const addInstance = (target: Element, osInstance: OverlayScrollbars): void => {\r\n  targetInstanceMap.set(target, osInstance);\r\n  targets.add(target);\r\n};\r\n\r\n/**\r\n * Removes a OverlayScrollbars instance from the given element.\r\n * @param target The element from which its OverlayScrollbars instance shall be removed.\r\n */\r\nexport const removeInstance = (target: Element): void => {\r\n  targetInstanceMap.delete(target);\r\n  targets.delete(target);\r\n};\r\n\r\n/**\r\n * Gets the OverlayScrollbars from the given element or undefined if it doesn't have one.\r\n * @param target The element of which its OverlayScrollbars instance shall be get.\r\n */\r\nexport const getInstance = (target: Element): OverlayScrollbars | undefined =>\r\n  targetInstanceMap.get(target);\r\n\r\n/**\r\n * Gets a Map which represents all active OverayScrollbars instances.\r\n * The Key is the element and the value is the instance.\r\n */\r\nexport const allInstances = (): ReadonlyMap<Element, OverlayScrollbars> => {\r\n  const validTargetInstanceMap: Map<Element, OverlayScrollbars> = new Map();\r\n\r\n  targets.forEach((target: Element) => {\r\n    /* istanbul ignore else */\r\n    if (targetInstanceMap.has(target)) {\r\n      validTargetInstanceMap.set(target, targetInstanceMap.get(target)!);\r\n    }\r\n  });\r\n\r\n  targets.clear();\r\n\r\n  validTargetInstanceMap.forEach((instance: OverlayScrollbars, validTarget: Element) => {\r\n    targets.add(validTarget);\r\n  });\r\n\r\n  return validTargetInstanceMap;\r\n};\r\n","import { OSOptions } from 'options';\r\nimport { each, from, isArray, keys, XY } from 'support';\r\nimport { PartialOptions } from 'typings';\r\n/*\r\nonScrollStart               : null,\r\nonScroll                    : null,\r\nonScrollStop                : null,\r\nonOverflowChanged           : null,\r\nonOverflowAmountChanged     : null, // fusion with onOverflowChanged\r\nonDirectionChanged          : null, // gone\r\nonContentSizeChanged        : null, // gone\r\nonHostSizeChanged           : null, // gone\r\n*/\r\n\r\nexport interface OnUpdatedEventListenerArgs {\r\n  updateHints: {\r\n    sizeChanged: boolean;\r\n    hostMutation: boolean;\r\n    contentMutation: boolean;\r\n    directionChanged: boolean;\r\n    heightIntrinsicChanged: boolean;\r\n  };\r\n  changedOptions: PartialOptions<OSOptions>;\r\n  force: boolean;\r\n}\r\n\r\nexport interface OnOverflowChangedEventListenerArgs {\r\n  overflow: XY<boolean>; // whether there is an overflow\r\n  scrollableOverflow: XY<boolean>; // whether there is an scrollable overflow\r\n  amount: XY<number>; // the overflow amount in pixel\r\n  previous: {\r\n    overflow: XY<boolean>;\r\n    scrollableOverflow: XY<boolean>;\r\n    amount: XY<number>;\r\n  };\r\n}\r\n\r\nexport interface EventListenerArgsMap {\r\n  initialized: undefined;\r\n  initializationWithdrawn: undefined;\r\n  overflowChanged: OnOverflowChangedEventListenerArgs;\r\n  updated: OnUpdatedEventListenerArgs;\r\n  destroyed: undefined;\r\n}\r\n\r\nexport type OSEventListener<N extends keyof EventListenerArgsMap = keyof EventListenerArgsMap> =\r\n  undefined extends EventListenerArgsMap[N] ? () => void : (args: EventListenerArgsMap[N]) => void;\r\n\r\nexport type AddEventListener = <N extends keyof EventListenerArgsMap>(\r\n  name: N,\r\n  listener: OSEventListener<N> | OSEventListener<N>[]\r\n) => () => void;\r\n\r\nexport type RemoveEventListener = <N extends keyof EventListenerArgsMap>(\r\n  name?: N,\r\n  listener?: OSEventListener<N> | OSEventListener<N>[]\r\n) => void;\r\n\r\nexport type TriggerEventListener = <N extends keyof EventListenerArgsMap>(\r\n  name: N,\r\n  ...args: undefined extends EventListenerArgsMap[N]\r\n    ? [args?: never]\r\n    : [args: EventListenerArgsMap[N]]\r\n) => void;\r\n\r\nexport type EventListenersHub = [AddEventListener, RemoveEventListener, TriggerEventListener];\r\n\r\nexport type EventListenersMap = {\r\n  [K in keyof EventListenerArgsMap]?: OSEventListener<K> | OSEventListener<K>[];\r\n};\r\n\r\nconst manageListener = <N extends keyof EventListenerArgsMap>(\r\n  callback: (listener?: OSEventListener<any>) => void,\r\n  listener?: OSEventListener<N> | OSEventListener<N>[]\r\n) => {\r\n  each(isArray(listener) ? listener : [listener], callback);\r\n};\r\n\r\nexport const createEventListenerHub = (\r\n  initialEventListeners?: EventListenersMap\r\n): EventListenersHub => {\r\n  const events = new Map<keyof EventListenerArgsMap, Set<OSEventListener>>();\r\n  const removeEvent: RemoveEventListener = (name?, listener?) => {\r\n    if (name) {\r\n      const eventSet = events.get(name);\r\n\r\n      manageListener((currListener) => {\r\n        if (eventSet) {\r\n          eventSet[currListener ? 'delete' : 'clear'](currListener!);\r\n        }\r\n      }, listener);\r\n    } else {\r\n      events.forEach((eventSet) => {\r\n        eventSet.clear();\r\n      });\r\n      events.clear();\r\n    }\r\n  };\r\n  const addEvent: AddEventListener = (name, listener) => {\r\n    const eventSet = events.get(name) || new Set();\r\n    events.set(name, eventSet);\r\n\r\n    manageListener((currListener) => {\r\n      eventSet.add(currListener!);\r\n    }, listener);\r\n\r\n    return removeEvent.bind(0, name, listener as any);\r\n  };\r\n  const triggerEvent: TriggerEventListener = (name, args?) => {\r\n    const eventSet = events.get(name);\r\n\r\n    each(from(eventSet), (event) => {\r\n      if (args) {\r\n        (event as (args: any) => void)(args);\r\n      } else {\r\n        (event as () => void)();\r\n      }\r\n    });\r\n  };\r\n\r\n  const initialListenerKeys = keys(initialEventListeners) as (keyof EventListenerArgsMap)[];\r\n  each(initialListenerKeys, (key) => {\r\n    addEvent(key, initialEventListeners![key] as any);\r\n  });\r\n\r\n  return [addEvent, removeEvent, triggerEvent];\r\n};\r\n","import { OSTarget, OSInitializationObject, PartialOptions } from 'typings';\r\nimport { assignDeep, isEmptyObject, each, isFunction, keys, isHTMLElement } from 'support';\r\nimport { createStructureSetup, StructureSetup } from 'setups/structureSetup';\r\nimport { createScrollbarsSetup, ScrollbarsSetup } from 'setups/scrollbarsSetup';\r\nimport { createLifecycleHub } from 'lifecycles/lifecycleHub';\r\nimport { getOptionsDiff, OSOptions } from 'options';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  getPlugins,\r\n  addPlugin,\r\n  optionsValidationPluginName,\r\n  OSPlugin,\r\n  OptionsValidationPluginInstance,\r\n} from 'plugins';\r\nimport { addInstance, getInstance, removeInstance } from 'instances';\r\nimport {\r\n  createEventListenerHub,\r\n  EventListenersMap,\r\n  AddEventListener,\r\n  RemoveEventListener,\r\n} from 'eventListeners';\r\n\r\nexport interface OverlayScrollbarsStatic {\r\n  (\r\n    target: OSTarget | OSInitializationObject,\r\n    options?: PartialOptions<OSOptions>,\r\n    eventListeners?: EventListenersMap\r\n  ): OverlayScrollbars;\r\n\r\n  extend(osPlugin: OSPlugin | OSPlugin[]): void;\r\n}\r\n\r\nexport interface OverlayScrollbars {\r\n  options(): OSOptions;\r\n  options(newOptions?: PartialOptions<OSOptions>): OSOptions;\r\n\r\n  update(force?: boolean): void;\r\n  destroy(): void;\r\n\r\n  state(): any;\r\n\r\n  on: AddEventListener;\r\n  off: RemoveEventListener;\r\n}\r\n\r\nexport const OverlayScrollbars: OverlayScrollbarsStatic = (\r\n  target,\r\n  options?,\r\n  eventListeners?\r\n): OverlayScrollbars => {\r\n  const { _getDefaultOptions, _nativeScrollbarIsOverlaid } = getEnvironment();\r\n  const plugins = getPlugins();\r\n  const instanceTarget = isHTMLElement(target) ? target : target.target;\r\n  const potentialInstance = getInstance(instanceTarget);\r\n  if (potentialInstance) {\r\n    return potentialInstance;\r\n  }\r\n\r\n  const optionsValidationPlugin = plugins[\r\n    optionsValidationPluginName\r\n  ] as OptionsValidationPluginInstance;\r\n  const validateOptions = (newOptions?: PartialOptions<OSOptions>) => {\r\n    const opts = newOptions || {};\r\n    const validate = optionsValidationPlugin && optionsValidationPlugin._;\r\n    return validate ? validate(opts, true) : opts;\r\n  };\r\n  const currentOptions: OSOptions = assignDeep({}, _getDefaultOptions(), validateOptions(options));\r\n  const [addEvent, removeEvent, triggerEvent] = createEventListenerHub(eventListeners);\r\n\r\n  if (\r\n    _nativeScrollbarIsOverlaid.x &&\r\n    _nativeScrollbarIsOverlaid.y &&\r\n    !currentOptions.nativeScrollbarsOverlaid.initialize\r\n  ) {\r\n    triggerEvent('initializationWithdrawn');\r\n  }\r\n\r\n  const structureSetup: StructureSetup = createStructureSetup(target);\r\n  const scrollbarsSetup: ScrollbarsSetup = createScrollbarsSetup(target, structureSetup);\r\n  const lifecycleHub = createLifecycleHub(\r\n    currentOptions,\r\n    triggerEvent,\r\n    structureSetup,\r\n    scrollbarsSetup\r\n  );\r\n\r\n  const instance: OverlayScrollbars = {\r\n    options(newOptions?: PartialOptions<OSOptions>) {\r\n      if (newOptions) {\r\n        const changedOptions = getOptionsDiff(currentOptions, validateOptions(newOptions));\r\n\r\n        if (!isEmptyObject(changedOptions)) {\r\n          assignDeep(currentOptions, changedOptions);\r\n          lifecycleHub._update(changedOptions);\r\n        }\r\n      }\r\n      return currentOptions;\r\n    },\r\n    on: addEvent,\r\n    off: removeEvent,\r\n    state: () => lifecycleHub._state(),\r\n    update(force?: boolean) {\r\n      lifecycleHub._update({}, force);\r\n    },\r\n    destroy: () => {\r\n      lifecycleHub._destroy();\r\n      removeInstance(instanceTarget);\r\n      removeEvent();\r\n      triggerEvent('destroyed');\r\n    },\r\n  };\r\n\r\n  each(keys(plugins), (pluginName) => {\r\n    const pluginInstance = plugins[pluginName];\r\n    if (isFunction(pluginInstance)) {\r\n      pluginInstance(OverlayScrollbars, instance);\r\n    }\r\n  });\r\n\r\n  instance.update(true);\r\n\r\n  addInstance(instanceTarget, instance);\r\n\r\n  triggerEvent('initialized');\r\n\r\n  return instance;\r\n};\r\n\r\nOverlayScrollbars.extend = addPlugin;\r\n"],"names":["createCache","options","update","_initialValue","_equal","_alwaysUpdateValues","_value","_previous","cacheUpdateContextual","newValue","force","curr","newVal","changed","cacheUpdateIsolated","getCurrentCache","ElementNodeType","Node","ELEMENT_NODE","toString","hasOwnProperty","Object","prototype","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","Set","forEach","value","elm","isEmptyArray","runEach","p1","runFn","fn","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","getSetProp","topLeft","fallback","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","insertedNodes","insertAfter","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","firstLetterToUpper","str","charAt","toUpperCase","slice","getDummyStyle","style","cssPrefixes","jsPrefixes","jsCache","cssCache","cssProperty","uppercasedName","elmStyle","prefix","prefixWithoutDashes","resultPossibilities","resultPossibility","jsAPI","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","addClass","add","removeClass","remove","diffClass","classNameA","classNameB","classNameASplit","split","classNameBSplit","tempObj","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","off","listener","capture","eventName","removeEventListener","on","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","bind","stopPropagation","preventDefault","stopAndPrevent","equal","a","b","props","propMutation","compareA","compareB","equalWH","equalXY","equalTRBL","equalBCRWH","round","Math","clearTimeouts","id","clearTimeout","noop","debounce","functionToDebounce","timeoutId","maxTimeoutId","prevArguments","latestArguments","_timeout","_maxDelay","_mergeParams","setT","setTimeout","invokeFunctionToDebounce","args","mergeParms","flush","debouncedFn","arguments","finalTimeout","hasTimeout","finalMaxWait","hasMaxWait","setTimeoutFn","mergeParamsResult","invokedArgs","boundInvoke","_flush","cssNumber","opacity","zindex","parseToZeroOrNumber","toFloat","num","parseFloat","parseInt","Number","isNaN","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","setCSSVal","setProperty","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","topRightBottomLeft","propertyPrefix","propertySuffix","finalPrefix","finalSuffix","top","right","bottom","left","t","r","l","x","y","absoluteCoordinates","rect","pageYOffset","pageXOffset","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameViewportArrange","classNameContent","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","classNameScrollbar","classNameScrollbarHorizontal","classNameScrollbarVertical","classNameScrollbarTrack","classNameScrollbarHandle","_extends","module","assign","exports","__esModule","stringify","JSON","_","Error","defaultOptions","resize","paddingAbsolute","updating","elementEvents","attributes","overflow","scrollbars","visibility","autoHide","autoHideDelay","dragScroll","clickScroll","touch","textarea","dynWidth","dynHeight","inheritedAttrs","nativeScrollbarsOverlaid","show","initialize","callbacks","onUpdated","getOptionsDiff","currOptions","newOptions","diff","optionsKeys","concat","optionKey","currOptionValue","newOptionValue","isDiff","environmentInstance","abs","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","getNativeScrollbarSize","body","measureElm","cSize","oSize","getNativeScrollbarStyling","testElm","ex","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","getDefaultInitializationStrategy","nativeScrollbarStyling","_host","_viewport","_padding","_content","_scrollbarsSlot","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","nativeScrollbarSize","nativeScrollbarIsOverlaid","defaultInitializationStrategy","initializationStrategy","defaultDefaultOptions","env","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_cssCustomProperties","_rtlScrollBehavior","_flexboxGlue","_addListener","_removeListener","delete","_getInitializationStrategy","_setInitializationStrategy","newInitializationStrategy","_getDefaultOptions","_setDefaultOptions","newDefaultOptions","_defaultInitializationStrategy","_defaultDefaultOptions","size","dpr","scrollbarSize","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","newScrollbarSize","getEnvironment","contentArrangeCounter","unwrap","createUniqueViewportArrangeElement","create","staticCreationFromStrategy","initializationValue","strategy","elementClass","dynamicCreationFromStrategy","defaultValue","takeInitializationValue","createStructureSetup","hostInitializationStrategy","viewportInitializationStrategy","paddingInitializationStrategy","contentInitializationStrategy","targetIsElm","targetStructureInitialization","targetElement","isTextarea","isBody","ownerDocument","bodyElm","wnd","defaultView","evaluatedTargetObj","_target","host","viewport","padding","content","_viewportArrange","ctx","_windowElm","_documentElm","_htmlElm","_bodyElm","_isTextarea","_isBody","_targetIsElm","generatedElements","elementIsGenerated","destroyFns","isTextareaHostGenerated","targetContents","contentSlot","_targetObj","_targetCtx","_destroy","generateScrollbarDOM","scrollbarClassName","scrollbar","track","handle","_scrollbar","_track","_handle","createScrollbarsSetup","structureSetup","environmentScrollbarSlot","initializationScrollbarSlot","scrollbarsSlot","initializationScrollbarSlotResult","evaluatedScrollbarSlot","horizontalScrollbarStructure","verticalScrollbarStructure","horizontalScrollbar","verticalScrollbar","_horizontalScrollbarStructure","_verticalScrollbarStructure","animationStartEventName","scrollEventName","scrollAmount","getElmDirectionIsRTL","domRectHasDimensions","height","width","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","getIsDirectionRTL","updateResizeObserverContentRectCache","currVal","onSizeChangedCallbackProxy","sizeChangedContext","isResizeObserverCall","hasDirectionCache","skip","appear","doDirectionScroll","currRContentRect","prevContentRect","pop","contentRect","hasDimensions","hadDimensions","rtl","_sizeChanged","_directionIsRTLCache","appearCallback","directionIsRTLCache","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionIsRTLCache","event","directionIsRTLCacheValues","directionIsRTL","directionIsRTLChanged","isHeightIntrinsic","ioEntryOrSize","isIntersecting","intersectionRatio","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","updateHeightIntrinsicCache","triggerOnTrinsicChangedCallback","updateValue","heightIntrinsic","heightIntrinsicChanged","intersectionObserverInstance","entries","root","onSizeChanged","newSize","createEventContentChange","eventContentChange","map","destroyed","destroy","updateElements","getElements","eventElmList","elements","entry","entryEventNames","entryOff","set","WeakMap","createDOMObserver","isContentObserver","isConnected","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetChange","_ignoreNestedTargetChange","_ignoreContentChange","destroyEventContentChange","updateEventContentChangeElements","finalAttributes","finalStyleChangingAttributes","observedAttributes","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributeOldValue","attributeFilter","subtree","childList","characterData","takeRecords","ignorePrefix","viewportAttrsFromTarget","baseStyleChangingAttrsTextarea","baseStyleChangingAttrs","addedOrRemovedClass","lifecycleHubOservers","instance","updateLifecycles","debounceTimeout","debounceMaxDelay","contentMutationObserver","_structureSetup","contentMutationObserverAttr","updateLifecyclesWithDebouncedAdaptiveUpdateHints","prev","prevSizeChanged","_hostMutation","prevHostMutation","_contentMutation","prevContentMutation","currSizeChanged","currvHostMutation","currContentMutation","merged","updateViewportAttrsFromHost","attribute","hostAttr","onTrinsicChanged","_heightIntrinsic","updateFn","_directionIsRTL","onContentMutation","contentChangedTroughEvent","onHostMutation","destroyTrinsicObserver","destroySizeObserver","destroyHostMutationObserver","updateOptions","checkOption","elementEventsChanged","attributesChanged","debounceValue","debounceChanged","updateContentMutationObserver","timeout","maxWait","createTrinsicLifecycle","lifecycleHub","updateHints","display","createPaddingLifecycle","_setLifecycleCommunication","updatePaddingCache","currentPaddingCache","paddingChanged","directionChanged","paddingAbsoluteChanged","contentMutation","paddingStyleChanged","paddingRelative","paddingHorizontal","paddingVertical","paddingStyle","marginRight","marginBottom","marginLeft","viewportStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","_paddingAbsolute","_viewportPaddingStyle","_paddingStyleChanged","max","overlaidScrollbarsHideOffset","whCacheOptions","xyCacheOptions","sizeFraction","viewportOffsetSize","viewportRect","fractionalPixelRatioTollerance","setAxisOverflowStyle","horizontal","overflowAmount","behavior","styleObj","overflowKey","behaviorIsVisible","behaviorIsVisibleHidden","behaviorIsScroll","hasOverflow","_visible","_behavior","getOverflowAmount","viewportScrollSize","viewportClientSize","viewportSizeFraction","createOverflowLifecycle","_doViewportArrange","_getLifecycleCommunication","updateViewportSizeFraction","getCurrentViewportSizeFraction","updateViewportScrollSizeCache","getCurrentViewportScrollSizeCache","updateOverflowAmountCache","getCurrentOverflowAmountCache","updateOverflowScrollCache","fixFlexboxGlue","viewportOverflowState","_overflowScroll","_scrollbarsHideOffset","hostSizeFraction","hostClientSize","isContentBox","fractionalClientHeight","subtractXScrollbar","getViewportOverflowState","showNativeOverlaidScrollbars","viewportStyleObj","overlaidX","overlaidY","determineOverflow","arrangeHideOffset","scroll","nonScrollbarStylingHideOffset","scrollbarsHideOffset","_scrollbarsHideOffsetArrange","setViewportOverflowState","xVisible","xVisibleBehavior","yVisible","yVisibleBehavior","arrangeViewport","arrangeX","arrangeY","hideOffsetX","hideOffsetY","viewportArrangeHorizontalPaddingKey","viewportArrangeHorizontalPaddingValue","viewportArrangeVerticalPaddingValue","fractionalContentWidth","fractionalContenHeight","arrangeSize","sheet","cssRules","insertRule","ruleStyle","hideNativeScrollbars","viewportArrange","viewportPaddingStyle","horizontalMarginKey","viewportHorizontalPaddingKey","horizontalMarginValue","verticalMarginValue","horizontalPaddingValue","verticalPaddingValue","undoViewportArrange","finalViewportOverflowState","finalPaddingStyle","assignProps","prevStyle","showNativeOverlaidScrollbarsOption","showNativeOverlaidScrollbarsChanged","adjustFlexboxGlue","viewportSizeFractionCache","viewportScrollSizeCache","overflowAmuntCache","preMeasureViewportOverflowState","redoViewportArrange","undoViewportArrangeOverflowState","viewportSizeFractionCahnged","viewportScrollSizeChanged","viewportContentSize","arrangedViewportScrollSize","arrangedViewportClientSize","viewportSizeFractionChanged","overflowAmountChanged","overflowChanged","viewportArranged","_viewportOverflowScrollCache","_viewportOverflowAmountCache","getPropByPath","path","o","applyForceToCache","cacheValues","booleanCacheValuesFallback","initialLifecycleCommunication","prepareUpdateHints","leading","adaptive","finalAdaptive","objKeys","leadingValue","adaptiveValue","createOverflowChangedArgs","overflowScroll","amount","scrollableOverflow","createLifecycleHub","triggerListener","scrollbarsSetup","lifecycleCommunication","updateObserverOptions","destroyObservers","addEnvironmentListener","removeEnvironmentListener","doViewportArrange","_options","newLifecycleCommunication","lifecycles","changedOptions","initialUpdateHints","adjustScrollOffset","scrollOffsetX","scrollOffsetY","adaptivedUpdateHints","lifecycle","overflowAmountCache","overflowScrollCache","prevOverflowAmount","overflowScrollChanged","prevOverflowScroll","previous","sizeChanged","hostMutation","envUpdateListener","_update","_state","_overflowAmount","pluginRegistry","getPlugins","addPlugin","addedPlugin","plugin","templateTypePrefixSuffix","optionsTemplateTypes","numberAllowedValues","oTypes","number","booleanAllowedValues","boolean","arrayNullValues","null","stringArrayNullAllowedValues","string","resizeAllowedValues","overflowAllowedValues","scrollbarsVisibilityAllowedValues","scrollbarsAutoHideAllowedValues","function","optionsValidationPluginName","targets","targetInstanceMap","addInstance","osInstance","removeInstance","getInstance","manageListener","createEventListenerHub","initialEventListeners","events","Map","removeEvent","eventSet","currListener","clear","addEvent","triggerEvent","initialListenerKeys","OverlayScrollbars","eventListeners","plugins","instanceTarget","potentialInstance","optionsValidationPlugin","validateOptions","opts","validate","currentOptions","state","pluginName","pluginInstance","extend"],"mappings":"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"}