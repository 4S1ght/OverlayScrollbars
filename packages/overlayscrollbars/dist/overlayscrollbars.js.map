{"version":3,"file":"overlayscrollbars.js","sources":["../src/support/utils/types.ts","../src/support/dom/attribute.ts","../src/support/dom/class.ts","../src/support/utils/array.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/utils/equal.ts","../src/support/utils/object.ts","../src/support/dom/style.ts","../src/support/dom/offset.ts","../src/support/cache/cache.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/support/options/validation.ts","../src/support/options/transformation.ts","../src/classnames.ts","../src/environment/environment.ts","../src/lifecycles/lifecycleBase.ts","../src/lifecycles/structureLifecycle.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/overlayscrollbars/overlayscrollbars.ts","../src/index.ts"],"sourcesContent":["import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport const type: (obj: any) => string = (obj) => {\r\n  return obj === undefined || obj === null\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n};\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: Array<unknown>) => unknown {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat) ? (length > 0 && isObject(obj) ? length - 1 in obj : true) : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value?: string): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isString } from 'support/utils/types';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (elm: Element | null, className: string, action: (elmClassList: DOMTokenList, clazz: string) => boolean | void): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | null, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n */\r\nexport const addClass = (elm: Element | null, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n};\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | null, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(obj: PlainObject, callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: Array<T>, item: T, fromIndex?: number): number => arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: Array<T>, items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): Array<T> => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items) ? Array.prototype.push.apply(array, items as Array<T>) : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr: ArrayLike<T>) => {\r\n  if (Array.from) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: Array<T> = [];\r\n\r\n  each(arr, (elm) => {\r\n    push(result, elm);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: Array<any> | null | undefined) => array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, p1?: unknown): void => {\r\n  const runFn = (fn: RunEachItem) => fn && fn(p1);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> => (elm ? from(elm.childNodes) : []);\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (elm: InputElementType, highBoundarySelector: string, deepBoundarySelector: string): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | undefined | null;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (parentElm: Node | null, preferredAnchor: Node | null, insertedElms: NodeCollection): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | undefined | null;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (node: Node | null, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","export interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean => !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null): boolean => (elm ? elementHasDimensions(elm as HTMLElement) : false);\r\n","import { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (passiveEventsSupport === undefined) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = (target: EventTarget, eventNames: string, listener: EventListener, capture?: boolean): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = (target: EventTarget, eventNames: string, listener: EventListener, options?: OnOptions): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = once\r\n      ? (evt: Event) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event) => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event) => evt.preventDefault();\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(a: T | undefined, b: T | undefined, props: Array<keyof T>): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      if (a[prop] !== b[prop]) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = (a?: WH, b?: WH) => equal<WH>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = (a?: XY, b?: XY) => equal<XY>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\ntype CssStyles = { [key: string]: string | number };\r\nconst cssNumber = {\r\n  animationiterationcount: 1,\r\n  columncount: 1,\r\n  fillopacity: 1,\r\n  flexgrow: 1,\r\n  flexshrink: 1,\r\n  fontweight: 1,\r\n  lineheight: 1,\r\n  opacity: 1,\r\n  order: 1,\r\n  orphans: 1,\r\n  widows: 1,\r\n  zindex: 1,\r\n  zoom: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number => (!cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val);\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null ? computedStyle.getPropertyValue(prop) : elm.style[prop];\r\nconst setCSSVal = (elm: HTMLElement | null, prop: string, val: string | number): void => {\r\n  try {\r\n    if (elm && elm.style[prop] !== undefined) {\r\n      elm.style[prop] = adaptCSSVal(prop, val);\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style(elm: HTMLElement | null, styles: CssStyles): void;\r\nexport function style(elm: HTMLElement | null, styles: string): string;\r\nexport function style(elm: HTMLElement | null, styles: Array<string> | string): { [key: string]: string };\r\nexport function style(elm: HTMLElement | null, styles: CssStyles | Array<string> | string): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | null): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | null): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns a top\r\n * @param elm\r\n * @param property\r\n */\r\nexport const topRightBottomLeft = (elm: HTMLElement | null, property?: string): TRBL => {\r\n  const finalProp = property || '';\r\n  const top = `${finalProp}-top`;\r\n  const right = `${finalProp}-right`;\r\n  const bottom = `${finalProp}-bottom`;\r\n  const left = `${finalProp}-left`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","export interface Cache<T> {\r\n  readonly _value?: T;\r\n  readonly _previous?: T;\r\n  readonly _changed: boolean;\r\n}\r\n\r\nexport interface CacheOptions<T> {\r\n  _equal?: EqualCachePropFunction<T>;\r\n  _initialValue?: T;\r\n}\r\n\r\nexport type CacheUpdate<T, C> = (force?: boolean | 0, context?: C) => Cache<T>;\r\n\r\nexport type UpdateCachePropFunction<T, C> = (context?: C, current?: T, previous?: T) => T;\r\n\r\nexport type EqualCachePropFunction<T> = (currentVal?: T, newVal?: T) => boolean;\r\n\r\nexport const createCache = <T, C = undefined>(update: UpdateCachePropFunction<T, C>, options?: CacheOptions<T>): CacheUpdate<T, C> => {\r\n  const { _equal, _initialValue } = options || {};\r\n  let _value: T | undefined = _initialValue;\r\n  let _previous: T | undefined;\r\n  return (force, context) => {\r\n    const curr = _value;\r\n    const newVal = update(context, _value, _previous);\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return {\r\n      _value,\r\n      _previous,\r\n      _changed: changed,\r\n    };\r\n  };\r\n};\r\n","import { each, hasOwnProperty } from 'support/utils';\r\nimport { createDiv } from 'support/dom';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = ['WebKit', 'Moz', 'O', 'MS', 'webkit', 'moz', 'o', 'ms'];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without, or undefined if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string | undefined => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n    result = resultPossibilities.find((resultPossibility: string) => elmStyle[resultPossibility] !== undefined);\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported wuthout, or undefined if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string | undefined => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>('IntersectionObserver');\r\nexport const ResizeObserverConstructor: any | undefined = jsAPI('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { OptionsTemplate, OptionsTemplateTypes, OptionsTemplateType, Func, OptionsValidationResult, OptionsValidated } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\n\r\nconst { stringify } = JSON;\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = ['boolean', 'number', 'string', 'array', 'object', 'function', 'null'].reduce(\r\n  (result, item) => {\r\n    result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n    return result;\r\n  },\r\n  {} as OptionsTemplateTypesDictionary\r\n);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff: T,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: OptionsValidated<T> = {};\r\n  const optionsCopy: T = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsDiffValue: any = isUndefined(optionsDiff[prop]) ? {} : optionsDiff[prop];\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> = template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const validatedResult = validateRecursive(optionsValue, templateValue as PlainObject, optionsDiffValue, doWriteErrors, propPrefix + prop);\r\n      validatedOptions[prop] = validatedResult._validated as any;\r\n      optionsCopy[prop] = validatedResult._foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = typeString === undefined;\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        const doStringifyComparison = isArray(optionsValue) || isPlainObject(optionsValue);\r\n        if (doStringifyComparison ? stringify(optionsValue) !== stringify(optionsDiffValue) : optionsValue !== optionsDiffValue) {\r\n          validatedOptions[prop] = optionsValue;\r\n        }\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${errorEnumStrings.length > 0 ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].` : ''}`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    _foreign: optionsCopy,\r\n    _validated: validatedOptions,\r\n  };\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff?: T | null,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => {\r\n  /*\r\n    if (!isEmptyObject(foreign) && doWriteErrors)\r\n        console.warn(`The following options are discarded due to invalidity:\\r\\n ${window.JSON.stringify(foreign, null, 2)}`);\r\n\r\n    //add values, which aren't specified in the template, to the finished validated object to prevent them from being discarded\r\n    if (keepForeignProps) {\r\n        Object.assign(result.validated, foreign);\r\n    }\r\n    */\r\n  return validateRecursive<T>(options, template, optionsDiff || ({} as T), doWriteErrors || false);\r\n};\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<Record<string, unknown>>;\r\n  readonly function: OptionsTemplateType<Func>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n","import { OptionsTemplate, OptionsWithOptionsTemplate, OptionsTemplateTypes } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\nimport { isArray } from 'support/utils/types';\r\nimport { each, keys } from 'support/utils';\r\n\r\nexport interface OptionsWithOptionsTemplateTransformation<T extends Required<T>> {\r\n  _template: OptionsTemplate<T>;\r\n  _options: T;\r\n}\r\n\r\n/**\r\n * Transforms the given OptionsWithOptionsTemplate<T> object to its corresponding generic (T) Object or its corresponding Template object.\r\n * @param optionsWithOptionsTemplate The OptionsWithOptionsTemplate<T> object which shall be converted.\r\n * @param toTemplate True if the given OptionsWithOptionsTemplate<T> shall be converted to its corresponding Template object.\r\n */\r\nexport function transformOptions<T extends Required<T>>(\r\n  optionsWithOptionsTemplate: OptionsWithOptionsTemplate<T>\r\n): OptionsWithOptionsTemplateTransformation<T> {\r\n  const result: any = {\r\n    _template: {},\r\n    _options: {},\r\n  };\r\n\r\n  each(keys(optionsWithOptionsTemplate), (key: Extract<keyof T, string>) => {\r\n    const val: PlainObject | OptionsTemplateTypes | Array<OptionsTemplateTypes> = optionsWithOptionsTemplate[key];\r\n\r\n    if (isArray(val)) {\r\n      result._template[key] = val[1];\r\n      result._options[key] = val[0];\r\n    } else {\r\n      //  if (isObject(val))\r\n      const tmpResult = transformOptions(val as OptionsWithOptionsTemplate<typeof val>);\r\n      result._template[key] = tmpResult._template;\r\n      result._options[key] = tmpResult._options;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalWH,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  _autoUpdateLoop: boolean;\r\n  _nativeScrollbarSize: XY;\r\n  _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  _nativeScrollbarStyling: boolean;\r\n  _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  _flexboxGlue: boolean;\r\n  _addListener(listener: OnEnvironmentChanged): void;\r\n  _removeListener(listener: OnEnvironmentChanged): void;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst getNativeScrollbarSize = (body: HTMLElement, measureElm: HTMLElement): XY => {\r\n  appendChildren(body, measureElm);\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h,\r\n    y: oSize.w - cSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, 'scrollbar-width') === 'none' || window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n  } catch (ex) {}\r\n\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (parentElm: HTMLElement, childElm: HTMLElement): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = offsetSize(parentElm);\r\n  const minOffsetsize = offsetSize(childElm);\r\n  const supportsMin = equalWH(minOffsetsize, minOffsetsizeParent);\r\n\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = offsetSize(parentElm);\r\n  const maxOffsetsize = offsetSize(childElm);\r\n  const supportsMax = equalWH(maxOffsetsize, maxOffsetsizeParent);\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const nativeScrollBarSize = getNativeScrollbarSize(body, envElm);\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollBarSize.x === 0,\r\n    y: nativeScrollBarSize.y === 0,\r\n  };\r\n\r\n  const env: Environment = {\r\n    _autoUpdateLoop: false,\r\n    _nativeScrollbarSize: nativeScrollBarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: getNativeScrollbarStyling(envElm),\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.add(listener);\r\n    },\r\n    _removeListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.delete(listener);\r\n    },\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeAttr(envElm, 'class');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n    let scrollbarSize = nativeScrollBarSize;\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const newScrollbarSize = (environmentInstance._nativeScrollbarSize = getNativeScrollbarSize(body, envElm));\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSize.x !== newScrollbarSize.x || scrollbarSize.y !== newScrollbarSize.y) {\r\n            runEach(onChangedListener);\r\n          }\r\n\r\n          scrollbarSize = newScrollbarSize;\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  Cache,\r\n  OptionsValidated,\r\n  OptionsWithOptionsTemplate,\r\n  transformOptions,\r\n  validateOptions,\r\n  assignDeep,\r\n  hasOwnProperty,\r\n  isEmptyObject,\r\n} from 'support';\r\nimport { CSSDirection, PlainObject } from 'typings';\r\n\r\ninterface LifecycleBaseUpdateHints<O> {\r\n  _force?: boolean;\r\n  _changedOptions?: OptionsValidated<O>;\r\n}\r\n\r\nexport interface LifecycleBase<O extends PlainObject> {\r\n  _options(newOptions?: O): O;\r\n  _update(force?: boolean): void;\r\n}\r\n\r\nexport interface Lifecycle<T extends PlainObject> extends LifecycleBase<T> {\r\n  _destruct(): void;\r\n  _onSizeChanged?(): void;\r\n  _onDirectionChanged?(directionCache: Cache<CSSDirection>): void;\r\n  _onTrinsicChanged?(widthIntrinsic: boolean, heightIntrinsicCache: Cache<boolean>): void;\r\n}\r\n\r\nexport interface LifecycleOptionInfo<T> {\r\n  _value: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport type LifecycleCheckOption = <T>(path: string) => LifecycleOptionInfo<T>;\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj && path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj);\r\n\r\n/**\r\n * Creates a object which can be seen as the base of a lifecycle because it provides all the tools to manage a lifecycle and its options, cache and base functions.\r\n * @param defaultOptionsWithTemplate A object which describes the options and the default options of the lifecycle.\r\n * @param initialOptions The initialOptions for the lifecylce. (Can be undefined)\r\n * @param updateFunction The update function where cache and options updates are handled. Has two arguments which are the changedOptions and the changedCache objects.\r\n */\r\nexport const createLifecycleBase = <O>(\r\n  defaultOptionsWithTemplate: OptionsWithOptionsTemplate<Required<O>>,\r\n  initialOptions: O | undefined,\r\n  updateFunction: (force: boolean, checkOption: LifecycleCheckOption) => any\r\n): LifecycleBase<O> => {\r\n  const { _template: optionsTemplate, _options: defaultOptions } = transformOptions<Required<O>>(defaultOptionsWithTemplate);\r\n  const options: Required<O> = assignDeep(\r\n    {},\r\n    defaultOptions,\r\n    validateOptions<O>(initialOptions || ({} as O), optionsTemplate, null, true)._validated\r\n  );\r\n\r\n  const update = (hints: LifecycleBaseUpdateHints<O>) => {\r\n    const { _force, _changedOptions } = hints;\r\n    const checkOption: LifecycleCheckOption = (path) => ({\r\n      _value: getPropByPath(options, path),\r\n      _changed: _force || getPropByPath(_changedOptions, path) !== undefined,\r\n    });\r\n    updateFunction(!!_force, checkOption);\r\n  };\r\n\r\n  update({ _force: true });\r\n\r\n  return {\r\n    _options(newOptions?: O) {\r\n      if (newOptions) {\r\n        const { _validated: _changedOptions } = validateOptions(newOptions, optionsTemplate, options, true);\r\n\r\n        if (!isEmptyObject(_changedOptions)) {\r\n          assignDeep(options, _changedOptions);\r\n          update({ _changedOptions });\r\n        }\r\n      }\r\n      return options;\r\n    },\r\n    _update: (_force?: boolean) => {\r\n      update({ _force });\r\n    },\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  cssProperty,\r\n  runEach,\r\n  createCache,\r\n  topRightBottomLeft,\r\n  TRBL,\r\n  WH,\r\n  XY,\r\n  equalTRBL,\r\n  equalXY,\r\n  optionsTemplateTypes as oTypes,\r\n  OptionsTemplateValue,\r\n  style,\r\n  OptionsWithOptionsTemplate,\r\n  scrollSize,\r\n  offsetSize,\r\n} from 'support';\r\nimport { OSTargetObject } from 'typings';\r\nimport { createLifecycleBase, Lifecycle } from 'lifecycles/lifecycleBase';\r\nimport { getEnvironment, Environment } from 'environment';\r\n\r\nexport type OverflowBehavior = 'hidden' | 'scroll' | 'visible-hidden' | 'visible-scroll';\r\nexport interface StructureLifecycleOptions {\r\n  paddingAbsolute: boolean;\r\n  overflowBehavior?: {\r\n    x?: OverflowBehavior;\r\n    y?: OverflowBehavior;\r\n  };\r\n}\r\n\r\nconst overflowBehaviorAllowedValues: OptionsTemplateValue<OverflowBehavior> = 'visible-hidden visible-scroll scroll hidden';\r\nconst defaultOptionsWithTemplate: OptionsWithOptionsTemplate<Required<StructureLifecycleOptions>> = {\r\n  paddingAbsolute: [false, oTypes.boolean],\r\n  overflowBehavior: {\r\n    x: ['scroll', overflowBehaviorAllowedValues],\r\n    y: ['scroll', overflowBehaviorAllowedValues],\r\n  },\r\n};\r\n\r\nconst cssMarginEnd = cssProperty('margin-inline-end');\r\nconst cssBorderEnd = cssProperty('border-inline-end');\r\n\r\nexport const createStructureLifecycle = (\r\n  target: OSTargetObject,\r\n  initialOptions?: StructureLifecycleOptions\r\n): Lifecycle<StructureLifecycleOptions> => {\r\n  const { host, padding: paddingElm, viewport, content } = target;\r\n  const destructFns: (() => any)[] = [];\r\n  const env: Environment = getEnvironment();\r\n  const scrollbarsOverlaid = env._nativeScrollbarIsOverlaid;\r\n  const supportsScrollbarStyling = env._nativeScrollbarStyling;\r\n  const supportFlexboxGlue = env._flexboxGlue;\r\n  // direction change is only needed to update scrollbar hiding, therefore its not needed if css can do it, scrollbars are invisible or overlaid on y axis\r\n  const directionObserverObsolete = (cssMarginEnd && cssBorderEnd) || supportsScrollbarStyling || scrollbarsOverlaid.y;\r\n\r\n  const updatePaddingCache = createCache(() => topRightBottomLeft(host, 'padding'), { _equal: equalTRBL });\r\n  const updateOverflowAmountCache = createCache<XY<number>, { _contentScrollSize: WH<number>; _viewportSize: WH<number> }>(\r\n    (ctx) => ({\r\n      x: Math.max(0, Math.round((ctx!._contentScrollSize.w - ctx!._viewportSize.w) * 100) / 100),\r\n      y: Math.max(0, Math.round((ctx!._contentScrollSize.h - ctx!._viewportSize.h) * 100) / 100),\r\n    }),\r\n    { _equal: equalXY }\r\n  );\r\n\r\n  const { _options, _update } = createLifecycleBase<StructureLifecycleOptions>(defaultOptionsWithTemplate, initialOptions, (force, checkOption) => {\r\n    const { _value: paddingAbsolute, _changed: paddingAbsoluteChanged } = checkOption('paddingAbsolute');\r\n    const { _value: padding, _changed: paddingChanged } = updatePaddingCache(force);\r\n\r\n    if (paddingAbsoluteChanged || paddingChanged) {\r\n      const paddingStyle: TRBL = {\r\n        t: 0,\r\n        r: 0,\r\n        b: 0,\r\n        l: 0,\r\n      };\r\n\r\n      if (!paddingAbsolute) {\r\n        paddingStyle.t = -padding!.t;\r\n        paddingStyle.r = -(padding!.r + padding!.l);\r\n        paddingStyle.b = -(padding!.b + padding!.t);\r\n        paddingStyle.l = -padding!.l;\r\n      }\r\n\r\n      style(paddingElm, {\r\n        top: paddingStyle.t,\r\n        left: paddingStyle.l,\r\n        'margin-right': paddingStyle.r,\r\n        'margin-bottom': paddingStyle.b,\r\n        'max-width': `calc(100% + ${paddingStyle.r * -1}px)`,\r\n      });\r\n    }\r\n\r\n    const viewportOffsetSize = offsetSize(paddingElm);\r\n    const contentClientSize = offsetSize(content);\r\n    const contentScrollSize = scrollSize(content);\r\n    const overflowAmuntCache = updateOverflowAmountCache(force, {\r\n      _contentScrollSize: contentScrollSize,\r\n      _viewportSize: {\r\n        w: viewportOffsetSize.w + Math.max(0, contentClientSize.w - contentScrollSize.w),\r\n        h: viewportOffsetSize.h + Math.max(0, contentClientSize.h - contentScrollSize.h),\r\n      },\r\n    });\r\n    const { _value: overflowAmount, _changed: overflowAmountChanged } = overflowAmuntCache;\r\n\r\n    console.log('overflowAmount', overflowAmount);\r\n    console.log('overflowAmountChanged', overflowAmountChanged);\r\n\r\n    /*\r\n    var setOverflowVariables = function (horizontal) {\r\n      var scrollbarVars = getScrollbarVars(horizontal);\r\n      var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n      var xyI = scrollbarVarsInverted._x_y;\r\n      var xy = scrollbarVars._x_y;\r\n      var wh = scrollbarVars._w_h;\r\n      var widthHeight = scrollbarVars._width_height;\r\n      var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n      var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n      var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n      overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n      overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n      overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n      overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n      overflowAmount[xy] *=\r\n        hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1) ? 0 : 1;\r\n      hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n      //hideOverflow:\r\n      //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n      //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n      hideOverflow[xy] =\r\n        overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy]\r\n          ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]\r\n          : hasOverflow[xy];\r\n      hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\r\n\r\n      canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n    };\r\n*/\r\n    /*\r\n    if (!supportsScrollbarStyling) {\r\n      paddingStyle.r -= env._nativeScrollbarSize.y;\r\n      paddingStyle.b -= env._nativeScrollbarSize.x;\r\n    }\r\n    */\r\n  });\r\n\r\n  const onSizeChanged = () => {\r\n    _update();\r\n  };\r\n  const onTrinsicChanged = (widthIntrinsic: boolean, heightIntrinsicCache: Cache<boolean>) => {\r\n    const { _changed, _value } = heightIntrinsicCache;\r\n    if (_changed) {\r\n      style(content, { height: _value ? 'auto' : '100%' });\r\n    }\r\n  };\r\n\r\n  return {\r\n    _options,\r\n    _update,\r\n    _onSizeChanged: onSizeChanged,\r\n    _onTrinsicChanged: onTrinsicChanged,\r\n    _destruct() {\r\n      runEach(destructFns);\r\n    },\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  preventDefault,\r\n  stopPropagation,\r\n  addClass,\r\n  isString,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n} from 'support';\r\nimport { CSSDirection } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst getDirection = (elm: HTMLElement): CSSDirection => style(elm, 'direction') as CSSDirection;\r\n\r\nexport type SizeObserverOptions = { _direction?: boolean; _appear?: boolean };\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (directionCache?: Cache<CSSDirection>) => any,\r\n  options?: SizeObserverOptions\r\n): (() => void) => {\r\n  const { _direction: direction = false, _appear: appear = false } = options || {};\r\n  const rtlScrollBehavior = getEnvironment()._rtlScrollBehavior;\r\n  const baseElements = createDOM(`<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`);\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const onSizeChangedCallbackProxy = (directionCache?: Cache<CSSDirection>) => {\r\n    if (direction) {\r\n      const rtl = getDirection(sizeObserver) === 'rtl';\r\n      scrollLeft(sizeObserver, rtl ? (rtlScrollBehavior.n ? -scrollAmount : rtlScrollBehavior.i ? 0 : scrollAmount) : scrollAmount);\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n    onSizeChangedCallback(isString((directionCache || {})._value) ? directionCache : undefined);\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | null = appear ? onSizeChangedCallbackProxy : null;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => resizeObserverInstance.disconnect());\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(listenerElement);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = () => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy();\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event) => {\r\n      currSize = offsetSize(listenerElement);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent && isDirty && !rAFId) {\r\n        cAF!(rAFId);\r\n        rAFId = rAF!(onResized);\r\n      } else if (!scrollEvent) {\r\n        onResized();\r\n      }\r\n\r\n      reset();\r\n\r\n      if (scrollEvent) {\r\n        preventDefault(scrollEvent);\r\n        stopPropagation(scrollEvent);\r\n      }\r\n      return false;\r\n    };\r\n\r\n    push(offListeners, [on(expandElement, scrollEventName, onScroll), on(shrinkElement, scrollEventName, onScroll)]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n    reset();\r\n    appearCallback = appear ? () => onScroll() : reset;\r\n  }\r\n\r\n  if (direction) {\r\n    const updateDirectionCache = createCache(() => getDirection(sizeObserver));\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionCache = updateDirectionCache();\r\n        const { _value, _changed } = directionCache;\r\n        if (_changed) {\r\n          if (_value === 'rtl') {\r\n            style(listenerElement, { left: 'auto', right: 0 });\r\n          } else {\r\n            style(listenerElement, { left: 0, right: 'auto' });\r\n          }\r\n          onSizeChangedCallbackProxy(directionCache);\r\n        }\r\n\r\n        preventDefault(event);\r\n        stopPropagation(event);\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(offListeners, on(sizeObserver, animationStartEventName, appearCallback));\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(sizeObserver);\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  Cache,\r\n  createDOM,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (widthIntrinsic: boolean, heightIntrinsicCache: Cache<boolean>) => any\r\n): (() => void) => {\r\n  const trinsicObserver = createDOM(`<div class=\"${classNameTrinsicObserver}\"></div>`)[0] as HTMLElement;\r\n  const offListeners: (() => void)[] = [];\r\n  const updateHeightIntrinsicCache = createCache<boolean, IntersectionObserverEntry | WH<number>>(\r\n    (ioEntryOrSize) =>\r\n      (ioEntryOrSize! as WH<number>).h === 0 ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).isIntersecting ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).intersectionRatio > 0,\r\n    {\r\n      _initialValue: false,\r\n    }\r\n  );\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          const last = entries.pop();\r\n          if (last) {\r\n            const heightIntrinsicCache = updateHeightIntrinsicCache(0, last);\r\n\r\n            if (heightIntrinsicCache._changed) {\r\n              onTrinsicChangedCallback(false, heightIntrinsicCache);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => intersectionObserverInstance.disconnect());\r\n  } else {\r\n    push(\r\n      offListeners,\r\n      createSizeObserver(trinsicObserver, () => {\r\n        const newSize = offsetSize(trinsicObserver);\r\n        const heightIntrinsicCache = updateHeightIntrinsicCache(0, newSize);\r\n\r\n        if (heightIntrinsicCache._changed) {\r\n          onTrinsicChangedCallback(false, heightIntrinsicCache);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(trinsicObserver);\r\n  };\r\n};\r\n","import { OSTarget, OSTargetObject, CSSDirection } from 'typings';\r\nimport { createStructureLifecycle } from 'lifecycles/structureLifecycle';\r\nimport { Cache, appendChildren, addClass, contents, is, isHTMLElement, createDiv, each, push } from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { Lifecycle } from 'lifecycles/lifecycleBase';\r\nimport { classNameHost, classNamePadding, classNameViewport, classNameContent } from 'classnames';\r\n\r\nconst normalizeTarget = (target: OSTarget): OSTargetObject => {\r\n  if (isHTMLElement(target)) {\r\n    const isTextarea = is(target, 'textarea');\r\n    const host = (isTextarea ? createDiv() : target) as HTMLElement;\r\n    const padding = createDiv(classNamePadding);\r\n    const viewport = createDiv(classNameViewport);\r\n    const content = createDiv(classNameContent);\r\n\r\n    appendChildren(padding, viewport);\r\n    appendChildren(viewport, content);\r\n    appendChildren(content, contents(target));\r\n    appendChildren(target, padding);\r\n    addClass(host, classNameHost);\r\n\r\n    return {\r\n      target,\r\n      host,\r\n      padding,\r\n      viewport,\r\n      content,\r\n    };\r\n  }\r\n\r\n  const { host, padding, viewport, content } = target;\r\n\r\n  addClass(host, classNameHost);\r\n  addClass(padding, classNamePadding);\r\n  addClass(viewport, classNameViewport);\r\n  addClass(content, classNameContent);\r\n\r\n  return target;\r\n};\r\n\r\nconst OverlayScrollbars = (target: OSTarget, options?: any, extensions?: any): void => {\r\n  const osTarget: OSTargetObject = normalizeTarget(target);\r\n  const lifecycles: Lifecycle<any>[] = [];\r\n  const { host } = osTarget;\r\n\r\n  push(lifecycles, createStructureLifecycle(osTarget));\r\n\r\n  // eslint-disable-next-line\r\n  const onSizeChanged = (directionCache?: Cache<CSSDirection>) => {\r\n    if (directionCache) {\r\n      each(lifecycles, (lifecycle) => {\r\n        lifecycle._onDirectionChanged && lifecycle._onDirectionChanged(directionCache);\r\n      });\r\n    } else {\r\n      each(lifecycles, (lifecycle) => {\r\n        lifecycle._onSizeChanged && lifecycle._onSizeChanged();\r\n      });\r\n    }\r\n  };\r\n  const onTrinsicChanged = (widthIntrinsic: boolean, heightIntrinsicCache: Cache<boolean>) => {\r\n    each(lifecycles, (lifecycle) => {\r\n      lifecycle._onTrinsicChanged && lifecycle._onTrinsicChanged(widthIntrinsic, heightIntrinsicCache);\r\n    });\r\n  };\r\n\r\n  createSizeObserver(host, onSizeChanged, { _appear: true, _direction: true });\r\n  createTrinsicObserver(host, onTrinsicChanged);\r\n};\r\n\r\nexport { OverlayScrollbars };\r\n","import { createDOM } from 'support/dom';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverlayScrollbars } from 'overlayscrollbars/overlayscrollbars';\r\n\r\nconst abc = {\r\n  a: 1,\r\n  b: 1,\r\n  c: 1,\r\n};\r\n\r\nexport default () => {\r\n  return [\r\n    getEnvironment(),\r\n    OverlayScrollbars(document.body),\r\n    createDOM(\r\n      '\\\r\n    <div class=\"os-host\">\\\r\n        <div class=\"os-resize-observer-host\"></div>\\\r\n        <div class=\"os-padding\">\\\r\n            <div class=\"os-viewport\">\\\r\n                <div class=\"os-content\">\\\r\n                    fdfhdfgh\\\r\n                </div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar os-scrollbar-horizontal\">\\\r\n            <div class=\"os-scrollbar-track\">\\\r\n                <div class=\"os-scrollbar-handle\"></div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar os-scrollbar-vertical\">\\\r\n            <div class=\"os-scrollbar-track\">\\\r\n                <div class=\"os-scrollbar-handle\"></div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar-corner\"></div>\\\r\n    </div>'\r\n    ),\r\n  ];\r\n};\r\n"],"names":["ElementNodeType","Node","ELEMENT_NODE","Object","prototype","toString","hasOwnProperty","type","obj","undefined","call","replace","toLowerCase","isNumber","isString","isFunction","isUndefined","isNull","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","getSetProp","topLeft","fallback","elm","value","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","rnothtmlwhite","classListAction","className","action","clazz","i","result","classes","match","classList","addClass","add","each","source","callback","keys","push","array","items","arrayIsSingleItem","apply","from","arr","runEach","p1","runFn","fn","Set","forEach","elmPrototype","is","selector","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","document","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","split","off","target","listener","capture","eventName","removeEventListener","on","options","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","bind","stopPropagation","preventDefault","equal","a","b","props","prop","equalWH","equalXY","equalTRBL","assignDeep","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","cssNumber","animationiterationcount","columncount","fillopacity","flexgrow","flexshrink","fontweight","lineheight","opacity","order","orphans","widows","zindex","zoom","parseToZeroOrNumber","toFloat","num","parseFloat","parseInt","Number","isNaN","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","style","setCSSVal","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","topRightBottomLeft","property","finalProp","top","right","bottom","left","t","r","l","x","y","absoluteCoordinates","rect","pageYOffset","pageXOffset","createCache","update","_equal","_initialValue","_value","_previous","force","context","curr","newVal","changed","_changed","firstLetterToUpper","str","charAt","toUpperCase","slice","getDummyStyle","cssPrefixes","jsPrefixes","jsCache","cssCache","cssProperty","uppercasedName","elmStyle","prefix","prefixWithoutDashes","resultPossibilities","find","resultPossibility","jsAPI","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","_extends","module","assign","arguments","stringify","JSON","templateTypePrefixSuffix","optionsTemplateTypes","item","validateRecursive","template","optionsDiff","doWriteErrors","propPath","validatedOptions","optionsCopy","filter","optionsDiffValue","optionsValue","templateValue","templateIsComplex","propPrefix","validatedResult","_validated","_foreign","isValid","errorEnumStrings","errorPossibleTypes","optionsValueType","templateValueArr","currTemplateType","typeString","isEnumString","enumStringSplit","possibility","string","doStringifyComparison","console","warn","join","validateOptions","transformOptions","optionsWithOptionsTemplate","_template","_options","tmpResult","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameContent","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","environmentInstance","abs","Math","round","getNativeScrollbarSize","body","measureElm","cSize","oSize","getNativeScrollbarStyling","testElm","ex","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","nativeScrollBarSize","nativeScrollbarIsOverlaid","env","_autoUpdateLoop","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_rtlScrollBehavior","_flexboxGlue","_addListener","_removeListener","delete","size","dpr","scrollbarSize","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","newScrollbarSize","getEnvironment","getPropByPath","path","o","createLifecycleBase","defaultOptionsWithTemplate","initialOptions","updateFunction","optionsTemplate","defaultOptions","hints","_force","_changedOptions","checkOption","newOptions","_update","overflowBehaviorAllowedValues","paddingAbsolute","oTypes","boolean","overflowBehavior","cssMarginEnd","cssBorderEnd","createStructureLifecycle","host","paddingElm","padding","viewport","content","destructFns","scrollbarsOverlaid","supportsScrollbarStyling","supportFlexboxGlue","directionObserverObsolete","updatePaddingCache","updateOverflowAmountCache","ctx","max","_contentScrollSize","_viewportSize","paddingAbsoluteChanged","paddingChanged","paddingStyle","viewportOffsetSize","contentClientSize","contentScrollSize","overflowAmuntCache","overflowAmount","overflowAmountChanged","log","onSizeChanged","onTrinsicChanged","widthIntrinsic","heightIntrinsicCache","height","_onSizeChanged","_onTrinsicChanged","_destruct","animationStartEventName","scrollEventName","scrollAmount","getDirection","createSizeObserver","onSizeChangedCallback","_direction","_appear","appear","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","onSizeChangedCallbackProxy","directionCache","rtl","appearCallback","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","width","updateDirectionCache","event","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","updateHeightIntrinsicCache","ioEntryOrSize","isIntersecting","intersectionRatio","intersectionObserverInstance","entries","last","pop","root","newSize","normalizeTarget","isTextarea","OverlayScrollbars","extensions","osTarget","lifecycles","lifecycle","_onDirectionChanged"],"mappings":"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"}