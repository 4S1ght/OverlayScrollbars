{"version":3,"file":"overlayscrollbars.js","sources":["../src/support/utils/types.ts","../src/support/dom/attribute.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/class.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/utils/equal.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/offset.ts","../src/support/cache/cache.ts","../../../node_modules/@babel/runtime/helpers/extends.js","../src/support/options/validation.ts","../src/support/options/transformation.ts","../src/classnames.ts","../src/environment/environment.ts","../src/lifecycles/lifecycleBase.ts","../src/lifecycles/structureLifecycle.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/overlayscrollbars/overlayscrollbars.ts","../src/index.ts"],"sourcesContent":["import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) => {\r\n  return isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n};\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: Array<unknown>) => unknown {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat) ? (length > 0 && isObject(obj) ? length - 1 in obj : true) : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj ? (instanceofObj ? obj instanceof instanceofObj : obj.nodeType === ElementNodeType) : false;\r\n}\r\n","import { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | null,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | null, attrName: string): string | null;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value: string): void;\r\nexport function attr(elm: HTMLElement | null, attrName: string, value?: string): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | null, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | null): number;\r\nexport function scrollLeft(elm: HTMLElement | null, value: number): void;\r\nexport function scrollLeft(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | null): number;\r\nexport function scrollTop(elm: HTMLElement | null, value: number): void;\r\nexport function scrollTop(elm: HTMLElement | null, value?: number): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | null): string;\r\nexport function val(elm: HTMLInputElement | null, value: string): void;\r\nexport function val(elm: HTMLInputElement | null, value?: string): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | void\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(obj: PlainObject, callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | void\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | void\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: Array<T>, item: T, fromIndex?: number): number => arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: Array<T>, items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): Array<T> => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items) ? Array.prototype.push.apply(array, items as Array<T>) : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr: ArrayLike<T>) => {\r\n  if (Array.from) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: Array<T> = [];\r\n\r\n  each(arr, (elm) => {\r\n    push(result, elm);\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: Array<any> | null | undefined) => array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, p1?: unknown): void => {\r\n  const runFn = (fn: RunEachItem) => fn && fn(p1);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean => Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (elm: Element | null, className: string, action: (elmClassList: DOMTokenList, clazz: string) => boolean | void): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: Element | null, className: string): boolean =>\r\n  classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n */\r\nexport const addClass = (elm: Element | null, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n};\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: Element | null, className: string): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (classNameA: string | null | undefined, classNameB: string | null | undefined) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> => (elm ? from(elm.childNodes) : []);\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (elm: InputElementType, highBoundarySelector: string, deepBoundarySelector: string): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | undefined | null;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (parentElm: Node | null, preferredAnchor: Node | null, insertedElms: NodeCollection): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | undefined | null;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (node: Node | null, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","export interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean => !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | null): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | null): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | null): boolean => (elm ? elementHasDimensions(elm as HTMLElement) : false);\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = (target: EventTarget, eventNames: string, listener: EventListener, capture?: boolean): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = (target: EventTarget, eventNames: string, listener: EventListener, options?: OnOptions): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = once\r\n      ? (evt: Event) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event) => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event) => evt.preventDefault();\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(a: T | undefined, b: T | undefined, props: Array<keyof T>): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      if (a[prop] !== b[prop]) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = (a?: WH, b?: WH) => equal<WH>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = (a?: XY, b?: XY) => equal<XY>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = ['WebKit', 'Moz', 'O', 'MS', 'webkit', 'moz', 'o', 'ms'];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without, or undefined if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string | undefined => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n    result = resultPossibilities.find((resultPossibility: string) => elmStyle[resultPossibility] !== undefined);\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported wuthout, or undefined if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string | undefined => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  cssCache[name] = result;\r\n  return result;\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>('IntersectionObserver');\r\nexport const ResizeObserverConstructor: any | undefined = jsAPI('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isNumber } from 'support/utils/types';\r\nimport { cAF, rAF } from 'support/compatibility/apis';\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param timeout The timeout for debouncing. If 0 or lower animation frame is used for debouncing, a timeout otherwise.\r\n * @param maxWait A maximum amount of ms. before the function will be called even with debounce.\r\n */\r\nexport const debounce = (functionToDebounce: (...args: any) => any, timeout?: number, maxWait?: number) => {\r\n  let timeoutId: number | void;\r\n  let lastCallTime: number;\r\n  const hasTimeout = isNumber(timeout) && timeout > 0;\r\n  const hasMaxWait = isNumber(maxWait) && maxWait > 0;\r\n  const cancel = hasTimeout ? window.clearTimeout : cAF!;\r\n  const set = hasTimeout ? window.setTimeout : rAF!;\r\n  const setFn = function (args: IArguments) {\r\n    lastCallTime = hasMaxWait ? performance.now() : 0;\r\n    timeoutId && cancel(timeoutId);\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  return function () {\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const boundSetFn = setFn.bind(this, arguments); // eslint-disable-line\r\n    const forceCall = hasMaxWait ? performance.now() - lastCallTime >= maxWait! : false;\r\n\r\n    timeoutId && cancel(timeoutId);\r\n    timeoutId = forceCall ? boundSetFn() : (set(boundSetFn, timeout!) as number);\r\n  };\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\ntype CssStyles = { [key: string]: string | number };\r\nconst cssNumber = {\r\n  animationiterationcount: 1,\r\n  columncount: 1,\r\n  fillopacity: 1,\r\n  flexgrow: 1,\r\n  flexshrink: 1,\r\n  fontweight: 1,\r\n  lineheight: 1,\r\n  opacity: 1,\r\n  order: 1,\r\n  orphans: 1,\r\n  widows: 1,\r\n  zindex: 1,\r\n  zoom: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number => (!cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val);\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null ? computedStyle.getPropertyValue(prop) : elm.style[prop];\r\nconst setCSSVal = (elm: HTMLElement | null, prop: string, val: string | number): void => {\r\n  try {\r\n    if (elm && elm.style[prop] !== undefined) {\r\n      elm.style[prop] = adaptCSSVal(prop, val);\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style(elm: HTMLElement | null, styles: CssStyles): void;\r\nexport function style(elm: HTMLElement | null, styles: string): string;\r\nexport function style(elm: HTMLElement | null, styles: Array<string> | string): { [key: string]: string };\r\nexport function style(elm: HTMLElement | null, styles: CssStyles | Array<string> | string): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | null): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | null): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns a top\r\n * @param elm\r\n * @param property\r\n */\r\nexport const topRightBottomLeft = (elm: HTMLElement | null, property?: string): TRBL => {\r\n  const finalProp = property || '';\r\n  const top = `${finalProp}-top`;\r\n  const right = `${finalProp}-right`;\r\n  const bottom = `${finalProp}-bottom`;\r\n  const left = `${finalProp}-left`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","export interface Cache<T> {\r\n  readonly _value?: T;\r\n  readonly _previous?: T;\r\n  readonly _changed: boolean;\r\n}\r\n\r\nexport interface CacheOptions<T> {\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<T>;\r\n  // Initial value for _value\r\n  _initialValue?: T;\r\n  // If true updates always _value and _previous, otherwise they update only when changed\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport type CacheUpdate<T, C> = undefined extends C ? (force?: boolean | 0, context?: C) => Cache<T> : (force: boolean | 0, context: C) => Cache<T>;\r\n\r\nexport type UpdateCachePropFunction<T, C> = undefined extends C\r\n  ? (context?: C, current?: T, previous?: T) => T\r\n  : C extends T\r\n  ? ((context: C, current?: T, previous?: T) => T) | 0\r\n  : (context: C, current?: T, previous?: T) => T;\r\n\r\nexport type EqualCachePropFunction<T> = (currentVal?: T, newVal?: T) => boolean;\r\n\r\nexport const createCache = <T, C = undefined>(update: UpdateCachePropFunction<T, C>, options?: CacheOptions<T>): CacheUpdate<T, C> => {\r\n  const { _equal, _initialValue, _alwaysUpdateValues } = options || {};\r\n  let _value: T | undefined = _initialValue;\r\n  let _previous: T | undefined;\r\n\r\n  const cacheUpdate = ((force?: boolean | 0, context?: C) => {\r\n    const curr = _value;\r\n    // @ts-ignore\r\n    // update can only not be a function if C extends T as described in \"UpdateCachePropFunction\" type definition\r\n    // if C extends T the cast (context as T) is perfectly valid\r\n    const newVal = update ? update(context, _value, _previous) : (context as T);\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return {\r\n      _value,\r\n      _previous,\r\n      _changed: changed,\r\n    };\r\n  }) as CacheUpdate<T, C>;\r\n\r\n  return cacheUpdate;\r\n};\r\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import { each, hasOwnProperty, keys, push, isEmptyObject } from 'support/utils';\r\nimport { type, isArray, isUndefined, isPlainObject, isString } from 'support/utils/types';\r\nimport { OptionsTemplate, OptionsTemplateTypes, OptionsTemplateType, Func, OptionsValidationResult, OptionsValidated } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\n\r\nconst { stringify } = JSON;\r\n\r\n/**\r\n * A prefix and suffix tuple which serves as recognition pattern for template types.\r\n */\r\nconst templateTypePrefixSuffix: readonly [string, string] = ['__TPL_', '_TYPE__'];\r\n/**\r\n * A object which serves as a mapping for \"normal\" types and template types.\r\n * Key   = normal type string\r\n * value = template type string\r\n */\r\nconst optionsTemplateTypes: OptionsTemplateTypesDictionary = ['boolean', 'number', 'string', 'array', 'object', 'function', 'null'].reduce(\r\n  (result, item) => {\r\n    result[item] = templateTypePrefixSuffix[0] + item + templateTypePrefixSuffix[1];\r\n    return result;\r\n  },\r\n  {} as OptionsTemplateTypesDictionary\r\n);\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n * @param propPath The propertyPath which lead to this object. (used for error logging)\r\n */\r\nconst validateRecursive = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff: T,\r\n  doWriteErrors?: boolean,\r\n  propPath?: string\r\n): OptionsValidationResult<T> => {\r\n  const validatedOptions: OptionsValidated<T> = {};\r\n  const optionsCopy: T = { ...options };\r\n  const props = keys(template).filter((prop) => hasOwnProperty(options, prop));\r\n\r\n  each(props, (prop: Extract<keyof T, string>) => {\r\n    const optionsDiffValue: any = isUndefined(optionsDiff[prop]) ? {} : optionsDiff[prop];\r\n    const optionsValue: any = options[prop];\r\n    const templateValue: PlainObject | string | OptionsTemplateTypes | Array<OptionsTemplateTypes> = template[prop];\r\n    const templateIsComplex = isPlainObject(templateValue);\r\n    const propPrefix = propPath ? `${propPath}.` : '';\r\n\r\n    // if the template has a object as value, it means that the options are complex (verschachtelt)\r\n    if (templateIsComplex && isPlainObject(optionsValue)) {\r\n      const validatedResult = validateRecursive(optionsValue, templateValue as PlainObject, optionsDiffValue, doWriteErrors, propPrefix + prop);\r\n      validatedOptions[prop] = validatedResult._validated as any;\r\n      optionsCopy[prop] = validatedResult._foreign as any;\r\n\r\n      each([optionsCopy, validatedOptions], (value) => {\r\n        if (isEmptyObject(value[prop])) {\r\n          delete value[prop];\r\n        }\r\n      });\r\n    } else if (!templateIsComplex) {\r\n      let isValid = false;\r\n      const errorEnumStrings: Array<string> = [];\r\n      const errorPossibleTypes: Array<string> = [];\r\n      const optionsValueType = type(optionsValue);\r\n      const templateValueArr: Array<string | OptionsTemplateTypes> = !isArray(templateValue)\r\n        ? [templateValue as string | OptionsTemplateTypes]\r\n        : (templateValue as Array<OptionsTemplateTypes>);\r\n\r\n      each(templateValueArr, (currTemplateType) => {\r\n        // if currType value isn't inside possibleTemplateTypes we assume its a enum string value\r\n        let typeString: string | undefined;\r\n        each(optionsTemplateTypes, (value: string, key: string) => {\r\n          if (value === currTemplateType) {\r\n            typeString = key;\r\n          }\r\n        });\r\n        const isEnumString = isUndefined(typeString);\r\n        if (isEnumString && isString(optionsValue)) {\r\n          // split it into a array which contains all possible values for example: [\"yes\", \"no\", \"maybe\"]\r\n          const enumStringSplit = currTemplateType.split(' ');\r\n          isValid = !!enumStringSplit.find((possibility) => possibility === optionsValue);\r\n\r\n          // build error message\r\n          push(errorEnumStrings, enumStringSplit);\r\n        } else {\r\n          isValid = optionsTemplateTypes[optionsValueType] === currTemplateType;\r\n        }\r\n\r\n        // build error message\r\n        push(errorPossibleTypes, isEnumString ? optionsTemplateTypes.string : typeString!);\r\n\r\n        // continue if invalid, break if valid\r\n        return !isValid;\r\n      });\r\n\r\n      if (isValid) {\r\n        const doStringifyComparison = isArray(optionsValue) || isPlainObject(optionsValue);\r\n        if (doStringifyComparison ? stringify(optionsValue) !== stringify(optionsDiffValue) : optionsValue !== optionsDiffValue) {\r\n          validatedOptions[prop] = optionsValue;\r\n        }\r\n      } else if (doWriteErrors) {\r\n        console.warn(\r\n          `${\r\n            `The option \"${propPrefix}${prop}\" wasn't set, because it doesn't accept the type [ ${optionsValueType.toUpperCase()} ] with the value of \"${optionsValue}\".\\r\\n` +\r\n            `Accepted types are: [ ${errorPossibleTypes.join(', ').toUpperCase()} ].\\r\\n`\r\n          }${errorEnumStrings.length > 0 ? `\\r\\nValid strings are: [ ${errorEnumStrings.join(', ')} ].` : ''}`\r\n        );\r\n      }\r\n\r\n      delete optionsCopy[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    _foreign: optionsCopy,\r\n    _validated: validatedOptions,\r\n  };\r\n};\r\n\r\n/**\r\n * Validates the given options object according to the given template object and returns a object which looks like:\r\n * {\r\n *  foreign   : a object which consists of properties which aren't defined inside the template. (foreign properties)\r\n *  validated : a object which consists only of valid properties. (property name is inside the template and value has a correct type)\r\n * }\r\n * @param options The options object which shall be validated.\r\n * @param template The template according to which the options object shall be validated.\r\n * @param optionsDiff When provided the returned validated object will only have properties which are different to this objects properties.\r\n * Example (assume all properties are valid to the template):\r\n * Options object            : { a: 'a', b: 'b', c: 'c' }\r\n * optionsDiff object        : { a: 'a', b: 'b', c: undefined }\r\n * Returned validated object : { c: 'c' }\r\n * Because the value of the properties a and b didn't change, they aren't included in the returned object.\r\n * Without the optionsDiff object the returned validated object would be: { a: 'a', b: 'b', c: 'c' }\r\n * @param doWriteErrors True if errors shall be logged into the console, false otherwise.\r\n */\r\nconst validateOptions = <T extends PlainObject>(\r\n  options: T,\r\n  template: OptionsTemplate<Required<T>>,\r\n  optionsDiff?: T | null,\r\n  doWriteErrors?: boolean\r\n): OptionsValidationResult<T> => {\r\n  /*\r\n    if (!isEmptyObject(foreign) && doWriteErrors)\r\n        console.warn(`The following options are discarded due to invalidity:\\r\\n ${window.JSON.stringify(foreign, null, 2)}`);\r\n\r\n    //add values, which aren't specified in the template, to the finished validated object to prevent them from being discarded\r\n    if (keepForeignProps) {\r\n        Object.assign(result.validated, foreign);\r\n    }\r\n    */\r\n  return validateRecursive<T>(options, template, optionsDiff || ({} as T), doWriteErrors || false);\r\n};\r\n\r\nexport { validateOptions, optionsTemplateTypes };\r\n\r\ntype OptionsTemplateTypesDictionary = {\r\n  readonly boolean: OptionsTemplateType<boolean>;\r\n  readonly number: OptionsTemplateType<number>;\r\n  readonly string: OptionsTemplateType<string>;\r\n  readonly array: OptionsTemplateType<Array<any>>;\r\n  readonly object: OptionsTemplateType<Record<string, unknown>>;\r\n  readonly function: OptionsTemplateType<Func>;\r\n  readonly null: OptionsTemplateType<null>;\r\n};\r\n","import { OptionsTemplate, OptionsWithOptionsTemplate, OptionsTemplateTypes } from 'support/options';\r\nimport { PlainObject } from 'typings';\r\nimport { isArray } from 'support/utils/types';\r\nimport { each, keys } from 'support/utils';\r\n\r\nexport interface OptionsWithOptionsTemplateTransformation<T extends Required<T>> {\r\n  _template: OptionsTemplate<T>;\r\n  _options: T;\r\n}\r\n\r\n/**\r\n * Transforms the given OptionsWithOptionsTemplate<T> object to its corresponding generic (T) Object or its corresponding Template object.\r\n * @param optionsWithOptionsTemplate The OptionsWithOptionsTemplate<T> object which shall be converted.\r\n * @param toTemplate True if the given OptionsWithOptionsTemplate<T> shall be converted to its corresponding Template object.\r\n */\r\nexport function transformOptions<T extends Required<T>>(\r\n  optionsWithOptionsTemplate: OptionsWithOptionsTemplate<T>\r\n): OptionsWithOptionsTemplateTransformation<T> {\r\n  const result: any = {\r\n    _template: {},\r\n    _options: {},\r\n  };\r\n\r\n  each(keys(optionsWithOptionsTemplate), (key: Extract<keyof T, string>) => {\r\n    const val: PlainObject | OptionsTemplateTypes | Array<OptionsTemplateTypes> = optionsWithOptionsTemplate[key];\r\n\r\n    if (isArray(val)) {\r\n      result._template[key] = val[1];\r\n      result._options[key] = val[0];\r\n    } else {\r\n      //  if (isObject(val))\r\n      const tmpResult = transformOptions(val as OptionsWithOptionsTemplate<typeof val>);\r\n      result._template[key] = tmpResult._template;\r\n      result._options[key] = tmpResult._options;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const classNameHost = 'os-host';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  runEach,\r\n  equalWH,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\n\r\nexport type OnEnvironmentChanged = (env: Environment) => void;\r\nexport interface Environment {\r\n  _autoUpdateLoop: boolean;\r\n  _nativeScrollbarSize: XY;\r\n  _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  _nativeScrollbarStyling: boolean;\r\n  _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  _flexboxGlue: boolean;\r\n  _addListener(listener: OnEnvironmentChanged): void;\r\n  _removeListener(listener: OnEnvironmentChanged): void;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst getNativeScrollbarSize = (body: HTMLElement, measureElm: HTMLElement): XY => {\r\n  appendChildren(body, measureElm);\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h,\r\n    y: oSize.w - cSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, 'scrollbar-width') === 'none' || window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n  } catch (ex) {}\r\n\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (parentElm: HTMLElement, childElm: HTMLElement): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = offsetSize(parentElm);\r\n  const minOffsetsize = offsetSize(childElm);\r\n  const supportsMin = equalWH(minOffsetsize, minOffsetsizeParent);\r\n\r\n  addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = offsetSize(parentElm);\r\n  const maxOffsetsize = offsetSize(childElm);\r\n  const supportsMax = equalWH(maxOffsetsize, maxOffsetsizeParent);\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n\r\n  const onChangedListener: Set<OnEnvironmentChanged> = new Set();\r\n  const nativeScrollBarSize = getNativeScrollbarSize(body, envElm);\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollBarSize.x === 0,\r\n    y: nativeScrollBarSize.y === 0,\r\n  };\r\n\r\n  const env: Environment = {\r\n    _autoUpdateLoop: false,\r\n    _nativeScrollbarSize: nativeScrollBarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: getNativeScrollbarStyling(envElm),\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.add(listener);\r\n    },\r\n    _removeListener(listener: OnEnvironmentChanged): void {\r\n      onChangedListener.delete(listener);\r\n    },\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeAttr(envElm, 'class');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n    let scrollbarSize = nativeScrollBarSize;\r\n\r\n    window.addEventListener('resize', () => {\r\n      if (onChangedListener.size) {\r\n        const sizeNew = windowSize();\r\n        const deltaSize = {\r\n          w: sizeNew.w - size.w,\r\n          h: sizeNew.h - size.h,\r\n        };\r\n\r\n        if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n        const deltaAbsSize = {\r\n          w: abs(deltaSize.w),\r\n          h: abs(deltaSize.h),\r\n        };\r\n        const deltaAbsRatio = {\r\n          w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n          h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n        };\r\n        const dprNew = getWindowDPR();\r\n        const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n        const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n        const dprChanged = dprNew !== dpr && dpr > 0;\r\n        const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n        if (isZoom) {\r\n          const newScrollbarSize = (environmentInstance._nativeScrollbarSize = getNativeScrollbarSize(body, envElm));\r\n          removeElements(envElm);\r\n\r\n          if (scrollbarSize.x !== newScrollbarSize.x || scrollbarSize.y !== newScrollbarSize.y) {\r\n            runEach(onChangedListener);\r\n          }\r\n\r\n          scrollbarSize = newScrollbarSize;\r\n        }\r\n\r\n        size = sizeNew;\r\n        dpr = dprNew;\r\n      }\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  Cache,\r\n  OptionsValidated,\r\n  OptionsWithOptionsTemplate,\r\n  transformOptions,\r\n  validateOptions,\r\n  assignDeep,\r\n  hasOwnProperty,\r\n  isEmptyObject,\r\n} from 'support';\r\nimport { CSSDirection, PlainObject } from 'typings';\r\n\r\ninterface LifecycleBaseUpdateHints<O> {\r\n  _force?: boolean;\r\n  _changedOptions?: OptionsValidated<O>;\r\n}\r\n\r\nexport interface LifecycleBase<O extends PlainObject> {\r\n  _options(newOptions?: O): O;\r\n  _update(force?: boolean): void;\r\n}\r\n\r\nexport interface Lifecycle<T extends PlainObject> extends LifecycleBase<T> {\r\n  _destruct(): void;\r\n  _onSizeChanged?(): void;\r\n  _onDirectionChanged?(directionCache: Cache<CSSDirection>): void;\r\n  _onTrinsicChanged?(widthIntrinsic: boolean, heightIntrinsicCache: Cache<boolean>): void;\r\n}\r\n\r\nexport interface LifecycleOptionInfo<T> {\r\n  _value: T;\r\n  _changed: boolean;\r\n}\r\n\r\nexport type LifecycleCheckOption = <T>(path: string) => LifecycleOptionInfo<T>;\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj && path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj);\r\n\r\n/**\r\n * Creates a object which can be seen as the base of a lifecycle because it provides all the tools to manage a lifecycle and its options, cache and base functions.\r\n * @param defaultOptionsWithTemplate A object which describes the options and the default options of the lifecycle.\r\n * @param initialOptions The initialOptions for the lifecylce. (Can be undefined)\r\n * @param updateFunction The update function where cache and options updates are handled. Has two arguments which are the changedOptions and the changedCache objects.\r\n */\r\nexport const createLifecycleBase = <O>(\r\n  defaultOptionsWithTemplate: OptionsWithOptionsTemplate<Required<O>>,\r\n  initialOptions: O | undefined,\r\n  updateFunction: (force: boolean, checkOption: LifecycleCheckOption) => any\r\n): LifecycleBase<O> => {\r\n  const { _template: optionsTemplate, _options: defaultOptions } = transformOptions<Required<O>>(defaultOptionsWithTemplate);\r\n  const options: Required<O> = assignDeep(\r\n    {},\r\n    defaultOptions,\r\n    validateOptions<O>(initialOptions || ({} as O), optionsTemplate, null, true)._validated\r\n  );\r\n\r\n  const update = (hints: LifecycleBaseUpdateHints<O>) => {\r\n    const { _force, _changedOptions } = hints;\r\n    const checkOption: LifecycleCheckOption = (path) => ({\r\n      _value: getPropByPath(options, path),\r\n      _changed: _force || getPropByPath(_changedOptions, path) !== undefined,\r\n    });\r\n    updateFunction(!!_force, checkOption);\r\n  };\r\n\r\n  update({ _force: true });\r\n\r\n  return {\r\n    _options(newOptions?: O) {\r\n      if (newOptions) {\r\n        const { _validated: _changedOptions } = validateOptions(newOptions, optionsTemplate, options, true);\r\n\r\n        if (!isEmptyObject(_changedOptions)) {\r\n          assignDeep(options, _changedOptions);\r\n          update({ _changedOptions });\r\n        }\r\n      }\r\n      return options;\r\n    },\r\n    _update: (_force?: boolean) => {\r\n      update({ _force });\r\n    },\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  cssProperty,\r\n  runEach,\r\n  createCache,\r\n  topRightBottomLeft,\r\n  TRBL,\r\n  WH,\r\n  XY,\r\n  equalTRBL,\r\n  equalXY,\r\n  optionsTemplateTypes as oTypes,\r\n  OptionsTemplateValue,\r\n  style,\r\n  OptionsWithOptionsTemplate,\r\n  scrollSize,\r\n  offsetSize,\r\n} from 'support';\r\nimport { OSTargetObject } from 'typings';\r\nimport { createLifecycleBase, Lifecycle } from 'lifecycles/lifecycleBase';\r\nimport { getEnvironment, Environment } from 'environment';\r\n\r\nexport type OverflowBehavior = 'hidden' | 'scroll' | 'visible-hidden' | 'visible-scroll';\r\nexport interface StructureLifecycleOptions {\r\n  paddingAbsolute: boolean;\r\n  overflowBehavior?: {\r\n    x?: OverflowBehavior;\r\n    y?: OverflowBehavior;\r\n  };\r\n}\r\n\r\nconst overflowBehaviorAllowedValues: OptionsTemplateValue<OverflowBehavior> = 'visible-hidden visible-scroll scroll hidden';\r\nconst defaultOptionsWithTemplate: OptionsWithOptionsTemplate<Required<StructureLifecycleOptions>> = {\r\n  paddingAbsolute: [false, oTypes.boolean],\r\n  overflowBehavior: {\r\n    x: ['scroll', overflowBehaviorAllowedValues],\r\n    y: ['scroll', overflowBehaviorAllowedValues],\r\n  },\r\n};\r\n\r\nconst cssMarginEnd = cssProperty('margin-inline-end');\r\nconst cssBorderEnd = cssProperty('border-inline-end');\r\n\r\nexport const createStructureLifecycle = (\r\n  target: OSTargetObject,\r\n  initialOptions?: StructureLifecycleOptions\r\n): Lifecycle<StructureLifecycleOptions> => {\r\n  const { host, padding: paddingElm, viewport, content } = target;\r\n  const destructFns: (() => any)[] = [];\r\n  const env: Environment = getEnvironment();\r\n  const scrollbarsOverlaid = env._nativeScrollbarIsOverlaid;\r\n  const supportsScrollbarStyling = env._nativeScrollbarStyling;\r\n  const supportFlexboxGlue = env._flexboxGlue;\r\n  // direction change is only needed to update scrollbar hiding, therefore its not needed if css can do it, scrollbars are invisible or overlaid on y axis\r\n  const directionObserverObsolete = (cssMarginEnd && cssBorderEnd) || supportsScrollbarStyling || scrollbarsOverlaid.y;\r\n\r\n  const updatePaddingCache = createCache(() => topRightBottomLeft(host, 'padding'), { _equal: equalTRBL });\r\n  const updateOverflowAmountCache = createCache<XY<number>, { _contentScrollSize: WH<number>; _viewportSize: WH<number> }>(\r\n    (ctx) => ({\r\n      x: Math.max(0, Math.round((ctx!._contentScrollSize.w - ctx!._viewportSize.w) * 100) / 100),\r\n      y: Math.max(0, Math.round((ctx!._contentScrollSize.h - ctx!._viewportSize.h) * 100) / 100),\r\n    }),\r\n    { _equal: equalXY }\r\n  );\r\n\r\n  const { _options, _update } = createLifecycleBase<StructureLifecycleOptions>(defaultOptionsWithTemplate, initialOptions, (force, checkOption) => {\r\n    const { _value: paddingAbsolute, _changed: paddingAbsoluteChanged } = checkOption('paddingAbsolute');\r\n    const { _value: padding, _changed: paddingChanged } = updatePaddingCache(force);\r\n\r\n    if (paddingAbsoluteChanged || paddingChanged) {\r\n      const paddingStyle: TRBL = {\r\n        t: 0,\r\n        r: 0,\r\n        b: 0,\r\n        l: 0,\r\n      };\r\n\r\n      if (!paddingAbsolute) {\r\n        paddingStyle.t = -padding!.t;\r\n        paddingStyle.r = -(padding!.r + padding!.l);\r\n        paddingStyle.b = -(padding!.b + padding!.t);\r\n        paddingStyle.l = -padding!.l;\r\n      }\r\n\r\n      style(paddingElm, {\r\n        top: paddingStyle.t,\r\n        left: paddingStyle.l,\r\n        'margin-right': paddingStyle.r,\r\n        'margin-bottom': paddingStyle.b,\r\n        'max-width': `calc(100% + ${paddingStyle.r * -1}px)`,\r\n      });\r\n    }\r\n\r\n    const viewportOffsetSize = offsetSize(paddingElm);\r\n    const contentClientSize = offsetSize(content);\r\n    const contentScrollSize = scrollSize(content);\r\n    const overflowAmuntCache = updateOverflowAmountCache(force, {\r\n      _contentScrollSize: contentScrollSize,\r\n      _viewportSize: {\r\n        w: viewportOffsetSize.w + Math.max(0, contentClientSize.w - contentScrollSize.w),\r\n        h: viewportOffsetSize.h + Math.max(0, contentClientSize.h - contentScrollSize.h),\r\n      },\r\n    });\r\n    const { _value: overflowAmount, _changed: overflowAmountChanged } = overflowAmuntCache;\r\n\r\n    console.log('overflowAmount', overflowAmount);\r\n    console.log('overflowAmountChanged', overflowAmountChanged);\r\n\r\n    /*\r\n    var setOverflowVariables = function (horizontal) {\r\n      var scrollbarVars = getScrollbarVars(horizontal);\r\n      var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n      var xyI = scrollbarVarsInverted._x_y;\r\n      var xy = scrollbarVars._x_y;\r\n      var wh = scrollbarVars._w_h;\r\n      var widthHeight = scrollbarVars._width_height;\r\n      var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n      var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n      var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n      overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n      overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n      overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n      overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n      overflowAmount[xy] *=\r\n        hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1) ? 0 : 1;\r\n      hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n      //hideOverflow:\r\n      //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n      //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n      hideOverflow[xy] =\r\n        overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy]\r\n          ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]\r\n          : hasOverflow[xy];\r\n      hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\r\n\r\n      canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n    };\r\n*/\r\n    /*\r\n    if (!supportsScrollbarStyling) {\r\n      paddingStyle.r -= env._nativeScrollbarSize.y;\r\n      paddingStyle.b -= env._nativeScrollbarSize.x;\r\n    }\r\n    */\r\n  });\r\n\r\n  const onSizeChanged = () => {\r\n    _update();\r\n  };\r\n  const onTrinsicChanged = (widthIntrinsic: boolean, heightIntrinsicCache: Cache<boolean>) => {\r\n    const { _changed, _value } = heightIntrinsicCache;\r\n    if (_changed) {\r\n      style(content, { height: _value ? 'auto' : '100%' });\r\n    }\r\n  };\r\n\r\n  return {\r\n    _options,\r\n    _update,\r\n    _onSizeChanged: onSizeChanged,\r\n    _onTrinsicChanged: onTrinsicChanged,\r\n    _destruct() {\r\n      runEach(destructFns);\r\n    },\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  preventDefault,\r\n  stopPropagation,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n} from 'support';\r\nimport { CSSDirection } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst getDirection = (elm: HTMLElement): CSSDirection => style(elm, 'direction') as CSSDirection;\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height > 0 || rect.width > 0);\r\n\r\ninterface SizeObserverEntry {\r\n  contentRect: DOMRectReadOnly;\r\n}\r\nexport type SizeObserverOptions = { _direction?: boolean; _appear?: boolean };\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (directionCache?: Cache<CSSDirection>) => any,\r\n  options?: SizeObserverOptions\r\n): (() => void) => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } = options || {};\r\n  const rtlScrollBehavior = getEnvironment()._rtlScrollBehavior;\r\n  const baseElements = createDOM(`<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`);\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const updateResizeObserverContentRectCache = createCache<DOMRectReadOnly, DOMRectReadOnly>(0, {\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (sizeChangedContext?: Cache<CSSDirection> | SizeObserverEntry[] | Event) => {\r\n    const directionCacheValue = sizeChangedContext && (sizeChangedContext as Cache<CSSDirection>)._value;\r\n\r\n    let skip = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isArray(sizeChangedContext) && sizeChangedContext.length > 0) {\r\n      const { _previous, _value, _changed } = updateResizeObserverContentRectCache(0, sizeChangedContext.pop()!.contentRect);\r\n      skip = !_previous || !domRectHasDimensions(_value); // skip on initial RO. call or if display is none\r\n      doDirectionScroll = !skip && _changed; // direction scroll when not skipping and changing from display: none to block, false otherwise\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (directionCacheValue) {\r\n      doDirectionScroll = (sizeChangedContext as Cache<CSSDirection>)._changed; // direction scroll when DirectionCache changed, false toherwise\r\n    }\r\n\r\n    if (observeDirectionChange && doDirectionScroll) {\r\n      const rtl = (directionCacheValue || getDirection(sizeObserver)) === 'rtl';\r\n      scrollLeft(sizeObserver, rtl ? (rtlScrollBehavior.n ? -scrollAmount : rtlScrollBehavior.i ? 0 : scrollAmount) : scrollAmount);\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback(directionCacheValue ? (sizeChangedContext as Cache<CSSDirection>) : undefined);\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange ? onSizeChangedCallbackProxy : false;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => resizeObserverInstance.disconnect());\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(listenerElement);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = () => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy();\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event) => {\r\n      currSize = offsetSize(listenerElement);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent && isDirty && !rAFId) {\r\n        cAF!(rAFId);\r\n        rAFId = rAF!(onResized);\r\n      } else if (!scrollEvent) {\r\n        onResized();\r\n      }\r\n\r\n      reset();\r\n\r\n      if (scrollEvent) {\r\n        preventDefault(scrollEvent);\r\n        stopPropagation(scrollEvent);\r\n      }\r\n      return false;\r\n    };\r\n\r\n    push(offListeners, [on(expandElement, scrollEventName, onScroll), on(shrinkElement, scrollEventName, onScroll)]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n    reset();\r\n    appearCallback = observeAppearChange ? () => onScroll() : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    const updateDirectionCache = createCache(() => getDirection(sizeObserver));\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionCache = updateDirectionCache();\r\n        const { _value, _changed } = directionCache;\r\n        if (_changed) {\r\n          if (_value === 'rtl') {\r\n            style(listenerElement, { left: 'auto', right: 0 });\r\n          } else {\r\n            style(listenerElement, { left: 0, right: 'auto' });\r\n          }\r\n          onSizeChangedCallbackProxy(directionCache);\r\n        }\r\n\r\n        preventDefault(event);\r\n        stopPropagation(event);\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(sizeObserver);\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  Cache,\r\n  createDOM,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (widthIntrinsic: boolean, heightIntrinsicCache: Cache<boolean>) => any\r\n): (() => void) => {\r\n  const trinsicObserver = createDOM(`<div class=\"${classNameTrinsicObserver}\"></div>`)[0] as HTMLElement;\r\n  const offListeners: (() => void)[] = [];\r\n  const updateHeightIntrinsicCache = createCache<boolean, IntersectionObserverEntry | WH<number>>(\r\n    (ioEntryOrSize: IntersectionObserverEntry | WH<number>) =>\r\n      (ioEntryOrSize! as WH<number>).h === 0 ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).isIntersecting ||\r\n      (ioEntryOrSize! as IntersectionObserverEntry).intersectionRatio > 0,\r\n    {\r\n      _initialValue: false,\r\n    }\r\n  );\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          const last = entries.pop();\r\n          if (last) {\r\n            const heightIntrinsicCache = updateHeightIntrinsicCache(0, last);\r\n\r\n            if (heightIntrinsicCache._changed) {\r\n              onTrinsicChangedCallback(false, heightIntrinsicCache);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => intersectionObserverInstance.disconnect());\r\n  } else {\r\n    push(\r\n      offListeners,\r\n      createSizeObserver(trinsicObserver, () => {\r\n        const newSize = offsetSize(trinsicObserver);\r\n        const heightIntrinsicCache = updateHeightIntrinsicCache(0, newSize);\r\n\r\n        if (heightIntrinsicCache._changed) {\r\n          onTrinsicChangedCallback(false, heightIntrinsicCache);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(trinsicObserver);\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  off,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n  isUndefined,\r\n  isFunction,\r\n} from 'support';\r\n\r\ntype StringNullUndefined = string | null | undefined;\r\nexport type DOMObserverEventContentChange =\r\n  | Array<[StringNullUndefined, ((elms: Node[]) => string) | StringNullUndefined] | null | undefined>\r\n  | false\r\n  | null\r\n  | undefined;\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions: DOMObserverOptions | undefined\r\n) => boolean;\r\nexport type DOMObserverIgnoreTargetAttrChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\nexport interface DOMObserverOptions {\r\n  _observeContent?: boolean; // do observe children and trigger content change\r\n  _attributes?: string[]; // observed attributes\r\n  _styleChangingAttributes?: string[]; // list of attributes that trigger a contentChange or a targetStyleChange if changed\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname]\r\n  _nestedTargetSelector?: string;\r\n  _ignoreTargetAttrChange?: DOMObserverIgnoreTargetAttrChange;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange;\r\n}\r\nexport interface DOMObserver {\r\n  _disconnect: () => void;\r\n  _updateEventContentChange: (newEventContentChange?: DOMObserverEventContentChange) => void;\r\n  _update: () => void;\r\n}\r\n\r\n// const styleChangingAttributes = ['id', 'class', 'style', 'open'];\r\n// const mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n\r\nconst createEventContentChange = (\r\n  target: Element,\r\n  eventContentChange: DOMObserverEventContentChange,\r\n  map: Map<Node, string>,\r\n  callback: (...args: any) => any\r\n) => {\r\n  let eventContentChangeRef: DOMObserverEventContentChange;\r\n  const addEvent = (elm: Node, eventName: string) => {\r\n    const entry = map.get(elm);\r\n    const newEntry = isUndefined(entry);\r\n    const registerEvent = () => {\r\n      map.set(elm, eventName);\r\n      on(elm, eventName, callback);\r\n    };\r\n\r\n    if (!newEntry && eventName !== entry) {\r\n      off(elm, entry!, callback);\r\n      registerEvent();\r\n    } else if (newEntry) {\r\n      registerEvent();\r\n    }\r\n  };\r\n  const _destroy = () => {\r\n    map.forEach((eventName: string, elm: Node) => {\r\n      off(elm, eventName, callback);\r\n    });\r\n    map.clear();\r\n  };\r\n  const _updateElements = (getElements?: (selector: string) => Node[]) => {\r\n    if (eventContentChangeRef) {\r\n      const eventElmList = eventContentChangeRef.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventName = item[1];\r\n          const elements = eventName && selector && (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements) {\r\n            push(arr, [elements, isFunction(eventName) ? eventName(elements) : eventName!], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) => {\r\n        const elements = item[0];\r\n        const eventName = item[1];\r\n\r\n        each(elements, (elm) => {\r\n          addEvent(elm, eventName);\r\n        });\r\n      });\r\n    }\r\n  };\r\n  const _update = (newEventContentChange: DOMObserverEventContentChange) => {\r\n    eventContentChangeRef = newEventContentChange;\r\n    _destroy();\r\n    _updateElements();\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    _update(eventContentChange);\r\n  }\r\n\r\n  return {\r\n    _destroy,\r\n    _updateElements,\r\n    _update,\r\n  };\r\n};\r\n\r\nexport const createDOMObserver = (\r\n  target: HTMLElement,\r\n  callback: (targetChangedAttrs: string[], targetStyleChanged: boolean, contentChanged: boolean) => any,\r\n  options?: DOMObserverOptions\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _observeContent,\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetAttrChange: _ignoreTargetChange,\r\n    _ignoreContentChange,\r\n  } = options || {};\r\n  const {\r\n    _updateElements: updateEventContentChangeElements,\r\n    _destroy: destroyEventContentChange,\r\n    _update: updateEventContentChange,\r\n  } = createEventContentChange(\r\n    target,\r\n    _observeContent && _eventContentChange,\r\n    new Map<Node, string>(),\r\n    debounce(() => {\r\n      if (isConnected) {\r\n        callback([], false, true);\r\n      }\r\n    }, 80)\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes); // TODO: observer textarea attrs if textarea\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange = _ignoreTargetChange || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue = isAttributesType && isString(attributeName) ? attr(mutationTarget as HTMLElement, attributeName!) : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const targetAttrChanged =\r\n        attributeChanged &&\r\n        targetIsMutationTarget &&\r\n        !_observeContent &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null);\r\n      const styleChangingAttrChanged = indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      if (targetAttrChanged) {\r\n        push(targetChangedAttrs, attributeName!);\r\n      }\r\n      if (_observeContent) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged && !targetIsMutationTarget;\r\n        const isNestedTarget = contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue as string | null)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged = baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      targetStyleChanged = targetStyleChanged || (targetAttrChanged && styleChangingAttrChanged);\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n    if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged || contentChanged) {\r\n      callback(targetChangedAttrs, targetStyleChanged, contentChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: _observeContent,\r\n    childList: _observeContent,\r\n    characterData: _observeContent,\r\n  });\r\n  isConnected = true;\r\n\r\n  return {\r\n    _disconnect: () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    _updateEventContentChange: (newEventContentChange?: DOMObserverEventContentChange) => {\r\n      updateEventContentChange(isConnected && _observeContent && newEventContentChange);\r\n    },\r\n    _update: () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  };\r\n};\r\n","import { OSTarget, OSTargetObject, CSSDirection } from 'typings';\r\nimport { createStructureLifecycle } from 'lifecycles/structureLifecycle';\r\nimport { Cache, appendChildren, addClass, contents, is, isHTMLElement, createDiv, each, push } from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver } from 'observers/domObserver';\r\nimport { Lifecycle } from 'lifecycles/lifecycleBase';\r\nimport { classNameHost, classNamePadding, classNameViewport, classNameContent } from 'classnames';\r\n\r\nconst normalizeTarget = (target: OSTarget): OSTargetObject => {\r\n  if (isHTMLElement(target)) {\r\n    const isTextarea = is(target, 'textarea');\r\n    const host = (isTextarea ? createDiv() : target) as HTMLElement;\r\n    const padding = createDiv(classNamePadding);\r\n    const viewport = createDiv(classNameViewport);\r\n    const content = createDiv(classNameContent);\r\n\r\n    appendChildren(padding, viewport);\r\n    appendChildren(viewport, content);\r\n    appendChildren(content, contents(target));\r\n    appendChildren(target, padding);\r\n    addClass(host, classNameHost);\r\n\r\n    return {\r\n      target,\r\n      host,\r\n      padding,\r\n      viewport,\r\n      content,\r\n    };\r\n  }\r\n\r\n  const { host, padding, viewport, content } = target;\r\n\r\n  addClass(host, classNameHost);\r\n  addClass(padding, classNamePadding);\r\n  addClass(viewport, classNameViewport);\r\n  addClass(content, classNameContent);\r\n\r\n  return target;\r\n};\r\n\r\nconst OverlayScrollbars = (target: OSTarget, options?: any, extensions?: any): void => {\r\n  const osTarget: OSTargetObject = normalizeTarget(target);\r\n  const lifecycles: Lifecycle<any>[] = [];\r\n  const { host, content } = osTarget;\r\n\r\n  push(lifecycles, createStructureLifecycle(osTarget));\r\n\r\n  // eslint-disable-next-line\r\n  const onSizeChanged = (directionCache?: Cache<CSSDirection>) => {\r\n    if (directionCache) {\r\n      each(lifecycles, (lifecycle) => {\r\n        lifecycle._onDirectionChanged && lifecycle._onDirectionChanged(directionCache);\r\n      });\r\n    } else {\r\n      each(lifecycles, (lifecycle) => {\r\n        lifecycle._onSizeChanged && lifecycle._onSizeChanged();\r\n      });\r\n    }\r\n  };\r\n  const onTrinsicChanged = (widthIntrinsic: boolean, heightIntrinsicCache: Cache<boolean>) => {\r\n    each(lifecycles, (lifecycle) => {\r\n      lifecycle._onTrinsicChanged && lifecycle._onTrinsicChanged(widthIntrinsic, heightIntrinsicCache);\r\n    });\r\n  };\r\n\r\n  createSizeObserver(host, onSizeChanged, { _appear: true, _direction: true });\r\n  createTrinsicObserver(host, onTrinsicChanged);\r\n  createDOMObserver(host, () => {\r\n    return null;\r\n  });\r\n  createDOMObserver(\r\n    content,\r\n    () => {\r\n      return null;\r\n    },\r\n    { _observeContent: true }\r\n  );\r\n};\r\n\r\nexport { OverlayScrollbars };\r\n","import { createDOM } from 'support/dom';\r\nimport { getEnvironment } from 'environment';\r\nimport { OverlayScrollbars } from 'overlayscrollbars/overlayscrollbars';\r\n\r\nconst abc = {\r\n  a: 1,\r\n  b: 1,\r\n  c: 1,\r\n};\r\n\r\nexport default () => {\r\n  return [\r\n    getEnvironment(),\r\n    OverlayScrollbars(document.body),\r\n    createDOM(\r\n      '\\\r\n    <div class=\"os-host\">\\\r\n        <div class=\"os-resize-observer-host\"></div>\\\r\n        <div class=\"os-padding\">\\\r\n            <div class=\"os-viewport\">\\\r\n                <div class=\"os-content\">\\\r\n                    fdfhdfgh\\\r\n                </div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar os-scrollbar-horizontal\">\\\r\n            <div class=\"os-scrollbar-track\">\\\r\n                <div class=\"os-scrollbar-handle\"></div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar os-scrollbar-vertical\">\\\r\n            <div class=\"os-scrollbar-track\">\\\r\n                <div class=\"os-scrollbar-handle\"></div>\\\r\n            </div>\\\r\n        </div>\\\r\n        <div class=\"os-scrollbar-corner\"></div>\\\r\n    </div>'\r\n    ),\r\n  ];\r\n};\r\n"],"names":["ElementNodeType","Node","ELEMENT_NODE","Object","prototype","toString","hasOwnProperty","isUndefined","obj","undefined","isNull","type","call","replace","toLowerCase","isNumber","isString","isFunction","isArray","Array","isObject","isArrayLike","length","lengthCorrectFormat","isPlainObject","key","cstr","ctor","ctorProto","hasOwnConstructor","hasIsPrototypeOf","isHTMLElement","instanceofObj","window","HTMLElement","nodeType","isElement","Element","getSetProp","topLeft","fallback","elm","value","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","scrollLeft","scrollTop","each","source","callback","i","keys","indexOf","arr","item","fromIndex","push","array","items","arrayIsSingleItem","apply","from","result","isEmptyArray","runEach","p1","runFn","fn","Set","forEach","prop","assignDeep","target","object1","object2","object3","object4","object5","object6","sources","copy","copyIsArray","src","clone","isEmptyObject","name","rnothtmlwhite","classListAction","className","action","clazz","classes","match","classList","addClass","add","elmPrototype","find","selector","rootElm","document","querySelectorAll","is","matches","msMatchesSelector","contents","childNodes","parent","parentElement","before","parentElm","preferredAnchor","insertedElms","anchor","fragment","createDocumentFragment","insertedElm","previousSibling","appendChild","firstChild","nextSibling","insertBefore","appendChildren","node","children","prependChildren","removeElements","nodes","e","removeChild","createDiv","classNames","div","createElement","createDOM","html","createdDiv","innerHTML","trim","zeroObj","w","h","windowSize","innerWidth","innerHeight","offsetSize","offsetWidth","offsetHeight","clientSize","clientWidth","clientHeight","scrollSize","scrollWidth","scrollHeight","getBoundingClientRect","passiveEventsSupport","supportPassiveEvents","addEventListener","defineProperty","get","splitEventNames","eventNames","split","off","listener","capture","eventName","removeEventListener","on","options","doSupportPassiveEvents","passive","_passive","_capture","once","_once","offListeners","nativeOptions","finalListener","evt","bind","stopPropagation","preventDefault","equal","a","b","props","equalWH","equalXY","equalTRBL","firstLetterToUpper","str","charAt","toUpperCase","slice","getDummyStyle","style","cssPrefixes","jsPrefixes","jsCache","cssCache","cssProperty","uppercasedName","elmStyle","prefix","prefixWithoutDashes","resultPossibilities","resultPossibility","jsAPI","MutationObserverConstructor","IntersectionObserverConstructor","ResizeObserverConstructor","cAF","rAF","noop","debounce","functionToDebounce","timeout","maxWait","timeoutId","lastCallTime","hasTimeout","hasMaxWait","cancel","clearTimeout","set","setTimeout","setFn","args","performance","now","boundSetFn","arguments","forceCall","cssNumber","animationiterationcount","columncount","fillopacity","flexgrow","flexshrink","fontweight","lineheight","opacity","order","orphans","widows","zindex","zoom","parseToZeroOrNumber","toFloat","num","parseFloat","parseInt","Number","isNaN","adaptCSSVal","val","getCSSVal","computedStyle","getPropertyValue","setCSSVal","styles","getSingleStyle","getStyles","getStylesResult","getComputedStyle","reduce","topRightBottomLeft","property","finalProp","top","right","bottom","left","t","r","l","x","y","absoluteCoordinates","rect","pageYOffset","pageXOffset","createCache","update","_equal","_initialValue","_alwaysUpdateValues","_value","_previous","cacheUpdate","force","context","curr","newVal","changed","_changed","_extends","module","assign","stringify","JSON","templateTypePrefixSuffix","optionsTemplateTypes","validateRecursive","template","optionsDiff","doWriteErrors","propPath","validatedOptions","optionsCopy","filter","optionsDiffValue","optionsValue","templateValue","templateIsComplex","propPrefix","validatedResult","_validated","_foreign","isValid","errorEnumStrings","errorPossibleTypes","optionsValueType","templateValueArr","currTemplateType","typeString","isEnumString","enumStringSplit","possibility","string","doStringifyComparison","console","warn","join","validateOptions","transformOptions","optionsWithOptionsTemplate","_template","_options","tmpResult","classNameEnvironment","classNameEnvironmentFlexboxGlue","classNameEnvironmentFlexboxGlueMax","classNameHost","classNamePadding","classNameViewport","classNameContent","classNameViewportScrollbarStyling","classNameSizeObserver","classNameSizeObserverAppear","classNameSizeObserverListener","classNameSizeObserverListenerScroll","classNameSizeObserverListenerItem","classNameSizeObserverListenerItemFinal","classNameTrinsicObserver","environmentInstance","abs","Math","round","getNativeScrollbarSize","body","measureElm","cSize","oSize","getNativeScrollbarStyling","testElm","ex","getRtlScrollBehavior","childElm","strHidden","overflowX","overflowY","direction","parentOffset","childOffset","childOffsetAfterScroll","n","getFlexboxGlue","minOffsetsizeParent","minOffsetsize","supportsMin","maxOffsetsizeParent","maxOffsetsize","supportsMax","getWindowDPR","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","diffBiggerThanOne","valOne","valTwo","absValOne","absValTwo","createEnvironment","envDOM","envElm","envChildElm","onChangedListener","nativeScrollBarSize","nativeScrollbarIsOverlaid","env","_autoUpdateLoop","_nativeScrollbarSize","_nativeScrollbarIsOverlaid","_nativeScrollbarStyling","_rtlScrollBehavior","_flexboxGlue","_addListener","_removeListener","delete","size","dpr","scrollbarSize","sizeNew","deltaSize","deltaAbsSize","deltaAbsRatio","dprNew","deltaIsBigger","difference","dprChanged","isZoom","newScrollbarSize","getEnvironment","getPropByPath","path","o","createLifecycleBase","defaultOptionsWithTemplate","initialOptions","updateFunction","optionsTemplate","defaultOptions","hints","_force","_changedOptions","checkOption","newOptions","_update","overflowBehaviorAllowedValues","paddingAbsolute","oTypes","boolean","overflowBehavior","cssMarginEnd","cssBorderEnd","createStructureLifecycle","host","paddingElm","padding","viewport","content","destructFns","scrollbarsOverlaid","supportsScrollbarStyling","supportFlexboxGlue","directionObserverObsolete","updatePaddingCache","updateOverflowAmountCache","ctx","max","_contentScrollSize","_viewportSize","paddingAbsoluteChanged","paddingChanged","paddingStyle","viewportOffsetSize","contentClientSize","contentScrollSize","overflowAmuntCache","overflowAmount","overflowAmountChanged","log","onSizeChanged","onTrinsicChanged","widthIntrinsic","heightIntrinsicCache","height","_onSizeChanged","_onTrinsicChanged","_destruct","animationStartEventName","scrollEventName","scrollAmount","getDirection","domRectHasDimensions","width","createSizeObserver","onSizeChangedCallback","_direction","observeDirectionChange","_appear","observeAppearChange","rtlScrollBehavior","baseElements","sizeObserver","listenerElement","updateResizeObserverContentRectCache","currVal","onSizeChangedCallbackProxy","sizeChangedContext","directionCacheValue","skip","doDirectionScroll","pop","contentRect","rtl","appearCallback","resizeObserverInstance","observe","disconnect","observerElementChildren","observerElementChildrenRoot","shrinkElement","lastChild","expandElement","expandElementChild","cacheSize","currSize","isDirty","rAFId","reset","onResized","onScroll","scrollEvent","updateDirectionCache","event","directionCache","createTrinsicObserver","onTrinsicChangedCallback","trinsicObserver","updateHeightIntrinsicCache","ioEntryOrSize","isIntersecting","intersectionRatio","intersectionObserverInstance","entries","last","root","newSize","createEventContentChange","eventContentChange","map","eventContentChangeRef","addEvent","entry","newEntry","registerEvent","_destroy","clear","_updateElements","getElements","eventElmList","elements","newEventContentChange","createDOMObserver","isConnected","_observeContent","_attributes","_styleChangingAttributes","_eventContentChange","_nestedTargetSelector","_ignoreTargetChange","_ignoreTargetAttrChange","_ignoreContentChange","Map","updateEventContentChangeElements","destroyEventContentChange","updateEventContentChange","finalAttributes","finalStyleChangingAttributes","observedAttributes","concat","observerCallback","mutations","ignoreTargetChange","ignoreContentChange","targetChangedAttrs","totalAddedNodes","targetStyleChanged","contentChanged","childListChanged","mutation","attributeName","mutationTarget","oldValue","addedNodes","isAttributesType","isChildListType","targetIsMutationTarget","attributeValue","attributeChanged","targetAttrChanged","styleChangingAttrChanged","notOnlyAttrChanged","contentAttrChanged","isNestedTarget","baseAssertion","contentFinalChanged","mutationObserver","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","_disconnect","_updateEventContentChange","takeRecords","normalizeTarget","isTextarea","OverlayScrollbars","extensions","osTarget","lifecycles","lifecycle","_onDirectionChanged"],"mappings":"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"}