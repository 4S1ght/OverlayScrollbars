{"version":3,"file":"overlayscrollbars.js","sources":["../src/support/cache.ts","../src/support/utils/types.ts","../src/support/utils/array.ts","../src/support/utils/object.ts","../src/support/dom/attribute.ts","../src/support/dom/traversal.ts","../src/support/dom/manipulation.ts","../src/support/dom/create.ts","../src/support/compatibility/vendors.ts","../src/support/compatibility/apis.ts","../src/support/dom/class.ts","../src/support/utils/equal.ts","../src/support/utils/function.ts","../src/support/dom/style.ts","../src/support/dom/dimensions.ts","../src/support/dom/events.ts","../src/support/dom/offset.ts","../src/support/eventListeners.ts","../src/setups/setups.ts","../src/classnames.ts","../src/options.ts","../src/environment.ts","../src/setups/structureSetup/structureSetup.elements.ts","../src/setups/structureSetup/updateSegments/trinsicUpdateSegment.ts","../src/setups/structureSetup/updateSegments/paddingUpdateSegment.ts","../src/setups/structureSetup/updateSegments/overflowUpdateSegment.ts","../src/setups/structureSetup/structureSetup.update.ts","../src/observers/sizeObserver.ts","../src/observers/trinsicObserver.ts","../src/observers/domObserver.ts","../src/setups/structureSetup/structureSetup.observers.ts","../src/setups/structureSetup/structureSetup.ts","../src/setups/scrollbarsSetup/scrollbarsSetup.elements.ts","../src/setups/scrollbarsSetup/scrollbarsSetup.ts","../src/plugins/plugins.ts","../src/plugins/optionsValidation/optionsValidation.ts","../src/instances.ts","../src/eventListeners.ts","../src/overlayscrollbars.ts"],"sourcesContent":["export interface CacheOptions<Value> {\r\n  // initial value of _value.\r\n  _initialValue: Value;\r\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\r\n  _equal?: EqualCachePropFunction<Value>;\r\n  // If true always updates _value and _previous, otherwise they update only when they changed.\r\n  _alwaysUpdateValues?: boolean;\r\n}\r\n\r\nexport type CacheValues<T> = [value: T, changed: boolean, previous?: T];\r\n\r\nexport type EqualCachePropFunction<Value> = (currentVal: Value, newVal: Value) => boolean;\r\n\r\nexport type CacheUpdater<Value> = (current: Value, previous?: Value) => Value;\r\n\r\nexport type UpdateCacheContextual<Value> = (newValue: Value, force?: boolean) => CacheValues<Value>;\r\n\r\nexport type UpdateCache<Value> = (force?: boolean) => CacheValues<Value>;\r\n\r\nexport type GetCurrentCache<Value> = (force?: boolean) => CacheValues<Value>;\r\n\r\nexport type Cache<Value> = [UpdateCache<Value>, GetCurrentCache<Value>];\r\n\r\nexport type CacheContextual<Value> = [UpdateCacheContextual<Value>, GetCurrentCache<Value>];\r\n\r\nexport function createCache<Value>(options: CacheOptions<Value>): CacheContextual<Value>;\r\nexport function createCache<Value>(\r\n  options: CacheOptions<Value>,\r\n  update: CacheUpdater<Value>\r\n): Cache<Value>;\r\nexport function createCache<Value>(\r\n  options: CacheOptions<Value>,\r\n  update?: CacheUpdater<Value>\r\n): CacheContextual<Value> | Cache<Value> {\r\n  const { _initialValue, _equal, _alwaysUpdateValues } = options;\r\n  let _value: Value = _initialValue;\r\n  let _previous: Value | undefined;\r\n\r\n  const cacheUpdateContextual: UpdateCacheContextual<Value> = (newValue, force?) => {\r\n    const curr = _value;\r\n\r\n    const newVal = newValue;\r\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\r\n\r\n    if (changed || _alwaysUpdateValues) {\r\n      _value = newVal;\r\n      _previous = curr;\r\n    }\r\n\r\n    return [_value, changed, _previous];\r\n  };\r\n  const cacheUpdateIsolated: UpdateCache<Value> = (force?) =>\r\n    cacheUpdateContextual(update!(_value, _previous), force);\r\n\r\n  const getCurrentCache: GetCurrentCache<Value> = (force?: boolean) => [\r\n    _value,\r\n    !!force, // changed\r\n    _previous,\r\n  ];\r\n\r\n  return [update ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache] as\r\n    | CacheContextual<Value>\r\n    | Cache<Value>;\r\n}\r\n","import { PlainObject } from 'typings';\r\n\r\nconst ElementNodeType = Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\n\r\nexport function isUndefined(obj: any): obj is undefined {\r\n  return obj === undefined;\r\n}\r\n\r\nexport function isNull(obj: any): obj is null {\r\n  return obj === null;\r\n}\r\n\r\nexport const type: (obj: any) => string = (obj) =>\r\n  isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString\r\n        .call(obj)\r\n        .replace(/^\\[object (.+)\\]$/, '$1')\r\n        .toLowerCase();\r\n\r\nexport function isNumber(obj: any): obj is number {\r\n  return typeof obj === 'number';\r\n}\r\n\r\nexport function isString(obj: any): obj is string {\r\n  return typeof obj === 'string';\r\n}\r\n\r\nexport function isBoolean(obj: any): obj is boolean {\r\n  return typeof obj === 'boolean';\r\n}\r\n\r\nexport function isFunction(obj: any): obj is (...args: any[]) => any {\r\n  return typeof obj === 'function';\r\n}\r\n\r\nexport function isArray(obj: any): obj is Array<any> {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObject(obj: any): boolean {\r\n  return typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n}\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport function isArrayLike<T extends PlainObject = any>(obj: any): obj is ArrayLike<T> {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat)\r\n    ? length > 0 && isObject(obj)\r\n      ? length - 1 in obj\r\n      : true\r\n    : false;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isPlainObject<T = any>(obj: any): obj is PlainObject<T> {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isHTMLElement(obj: any): obj is HTMLElement {\r\n  const instanceofObj = window.HTMLElement;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n}\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport function isElement(obj: any): obj is Element {\r\n  const instanceofObj = window.Element;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n}\r\n","import { isArrayLike, isString } from 'support/utils/types';\r\nimport { PlainObject } from 'typings';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | null | undefined;\r\n\r\n/**\r\n * Iterates through a array or object\r\n * @param arrayLikeOrObject The array or object through which shall be iterated.\r\n * @param callback The function which is responsible for the iteration.\r\n * If the function returns true its treated like a \"continue\" statement.\r\n * If the function returns false its treated like a \"break\" statement.\r\n */\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T>,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T>;\r\nexport function each<T>(\r\n  array: Array<T> | ReadonlyArray<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: Array<T>) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | null | undefined;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T>,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T>;\r\nexport function each<T>(\r\n  arrayLikeObject: ArrayLike<T> | null | undefined,\r\n  callback: (value: T, indexOrKey: number, source: ArrayLike<T>) => boolean | unknown\r\n): ArrayLike<T> | null | undefined;\r\nexport function each(\r\n  obj: PlainObject,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject;\r\nexport function each(\r\n  obj: PlainObject | null | undefined,\r\n  callback: (value: any, indexOrKey: string, source: PlainObject) => boolean | unknown\r\n): PlainObject | null | undefined;\r\nexport function each<T>(\r\n  source: ArrayLike<T> | PlainObject | null | undefined,\r\n  callback: (value: T, indexOrKey: any, source: any) => boolean | unknown\r\n): Array<T> | ReadonlyArray<T> | ArrayLike<T> | PlainObject | null | undefined {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns the index of the given inside the given array or -1 if the given item isn't part of the given array.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n */\r\nexport const indexOf = <T = any>(arr: T[], item: T, fromIndex?: number): number =>\r\n  arr.indexOf(item, fromIndex);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: T[], items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): T[] => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items)\r\n    ? Array.prototype.push.apply(array, items as T[])\r\n    : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr?: ArrayLike<T> | Set<T>) => {\r\n  if (Array.from && arr) {\r\n    return Array.from(arr);\r\n  }\r\n  const result: T[] = [];\r\n\r\n  if (arr instanceof Set) {\r\n    arr.forEach((value) => {\r\n      push(result, value);\r\n    });\r\n  } else {\r\n    each(arr, (elm) => {\r\n      push(result, elm);\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: any[] | null | undefined): boolean =>\r\n  !!array && array.length === 0;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param p1 The first param.\r\n */\r\nexport const runEach = (arr: ArrayLike<RunEachItem> | Set<RunEachItem>, args?: any[]): void => {\r\n  // eslint-disable-next-line prefer-spread\r\n  const runFn = (fn: RunEachItem) => fn && fn.apply(undefined, args || []);\r\n  if (arr instanceof Set) {\r\n    arr.forEach(runFn);\r\n  } else {\r\n    each(arr, runFn);\r\n  }\r\n};\r\n","import { isArray, isFunction, isPlainObject, isNull } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean =>\r\n  Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport function assignDeep<T, U>(target: T, object1: U): T & U;\r\nexport function assignDeep<T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\nexport function assignDeep<T, U, V, W>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W\r\n): T & U & V & W;\r\nexport function assignDeep<T, U, V, W, X>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W,\r\n  object4: X\r\n): T & U & V & W & X;\r\nexport function assignDeep<T, U, V, W, X, Y>(\r\n  target: T,\r\n  object1: U,\r\n  object2: V,\r\n  object3: W,\r\n  object4: X,\r\n  object5: Y\r\n): T & U & V & W & X & Y;\r\nexport function assignDeep<T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(keys(source), (key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && (isPlainObject(copy) || copyIsArray)) {\r\n        const src = target[key];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key] = copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n}\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport function isEmptyObject(obj: any): boolean {\r\n  /* eslint-disable no-restricted-syntax, guard-for-in */\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n}\r\n","import { from } from 'support/utils/array';\r\nimport { isUndefined } from 'support/utils/types';\r\n\r\ntype GetSetPropName = 'scrollLeft' | 'scrollTop' | 'value';\r\n\r\nfunction getSetProp(\r\n  topLeft: GetSetPropName,\r\n  fallback: number | string,\r\n  elm: HTMLElement | HTMLInputElement | false | null | undefined,\r\n  value?: number | string\r\n): number | string | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm[topLeft] : fallback;\r\n  }\r\n  elm && (elm[topLeft] = value);\r\n}\r\n\r\n/**\r\n * Gets or sets a attribute with the given attribute of the given element depending whether the value attribute is given.\r\n * Returns null if the element has no attribute with the given name.\r\n * @param elm The element of which the attribute shall be get or set.\r\n * @param attrName The attribute name which shall be get or set.\r\n * @param value The value of the attribute which shall be set.\r\n */\r\nexport function attr(elm: HTMLElement | false | null | undefined, attrName: string): string | null;\r\nexport function attr(\r\n  elm: HTMLElement | false | null | undefined,\r\n  attrName: string,\r\n  value: string\r\n): void;\r\nexport function attr(\r\n  elm: HTMLElement | false | null | undefined,\r\n  attrName: string,\r\n  value?: string\r\n): string | null | void {\r\n  if (isUndefined(value)) {\r\n    return elm ? elm.getAttribute(attrName) : null;\r\n  }\r\n  elm && elm.setAttribute(attrName, value);\r\n}\r\n\r\nexport const attrClass = (\r\n  elm: HTMLElement | false | null | undefined,\r\n  attrName: string,\r\n  value: string,\r\n  add?: boolean\r\n) => {\r\n  const currValues = attr(elm, attrName) || '';\r\n  const currValuesSet = new Set(currValues.split(' '));\r\n  currValuesSet[add ? 'add' : 'delete'](value);\r\n\r\n  attr(elm, attrName, from(currValuesSet).join(' ').trim());\r\n};\r\n\r\nexport const hasAttrClass = (\r\n  elm: HTMLElement | false | null | undefined,\r\n  attrName: string,\r\n  value: string\r\n) => {\r\n  const currValues = attr(elm, attrName) || '';\r\n  const currValuesSet = new Set(currValues.split(' '));\r\n  return currValuesSet.has(value);\r\n};\r\n\r\n/**\r\n * Removes the given attribute from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute name.\r\n */\r\nexport const removeAttr = (elm: Element | false | null | undefined, attrName: string): void => {\r\n  elm && elm.removeAttribute(attrName);\r\n};\r\n\r\n/**\r\n * Gets or sets the scrollLeft value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollLeft value shall be get or set.\r\n * @param value The scrollLeft value which shall be set.\r\n */\r\nexport function scrollLeft(elm: HTMLElement | false | null | undefined): number;\r\nexport function scrollLeft(elm: HTMLElement | false | null | undefined, value: number): void;\r\nexport function scrollLeft(\r\n  elm: HTMLElement | false | null | undefined,\r\n  value?: number\r\n): number | void {\r\n  return getSetProp('scrollLeft', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the scrollTop value of the given element depending whether the value attribute is given.\r\n * @param elm The element of which the scrollTop value shall be get or set.\r\n * @param value The scrollTop value which shall be set.\r\n */\r\nexport function scrollTop(elm: HTMLElement | false | null | undefined): number;\r\nexport function scrollTop(elm: HTMLElement | false | null | undefined, value: number): void;\r\nexport function scrollTop(\r\n  elm: HTMLElement | false | null | undefined,\r\n  value?: number\r\n): number | void {\r\n  return getSetProp('scrollTop', 0, elm, value) as number;\r\n}\r\n\r\n/**\r\n * Gets or sets the value of the given input element depending whether the value attribute is given.\r\n * @param elm The input element of which the value shall be get or set.\r\n * @param value The value which shall be set.\r\n */\r\nexport function val(elm: HTMLInputElement | false | null | undefined): string;\r\nexport function val(elm: HTMLInputElement | false | null | undefined, value: string): void;\r\nexport function val(\r\n  elm: HTMLInputElement | false | null | undefined,\r\n  value?: string\r\n): string | void {\r\n  return getSetProp('value', '', elm, value) as string;\r\n}\r\n","import { isElement } from 'support/utils/types';\r\nimport { push, from } from 'support/utils/array';\r\n\r\ntype InputElementType = Element | Node | false | null | undefined;\r\ntype OutputElementType = Element | null;\r\n\r\nconst elmPrototype = Element.prototype;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? (isElement(elm) ? elm : null) : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    const fn: (...args: any) => boolean = elmPrototype.matches || elmPrototype.msMatchesSelector;\r\n    return fn.call(elm, selector);\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> =>\r\n  elm ? from(elm.childNodes) : [];\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => (elm ? elm.parentElement : null);\r\n\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType => {\r\n  if (isElement(elm)) {\r\n    const closestFn = elmPrototype.closest;\r\n    if (closestFn) {\r\n      return closestFn.call(elm, selector);\r\n    }\r\n\r\n    do {\r\n      if (is(elm, selector)) {\r\n        return elm as Element;\r\n      }\r\n      elm = parent(elm);\r\n    } while (elm);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (\r\n  elm: InputElementType,\r\n  highBoundarySelector: string,\r\n  deepBoundarySelector: string\r\n): boolean => {\r\n  const closestHighBoundaryElm = elm && closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        closest(closest(elm, deepBoundarySelector), highBoundarySelector) !== closestHighBoundaryElm\r\n    : false;\r\n};\r\n\r\nexport { find, findFirst, is, children, contents, parent, liesBetween };\r\n","import { isArrayLike } from 'support/utils/types';\r\nimport { each, from } from 'support/utils/array';\r\nimport { parent } from 'support/dom/traversal';\r\n\r\ntype NodeCollection = ArrayLike<Node> | Node | false | null | undefined;\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n */\r\nconst before = (\r\n  parentElm: Node | false | null | undefined,\r\n  preferredAnchor: Node | null | undefined,\r\n  insertedElms: NodeCollection\r\n): void => {\r\n  if (insertedElms) {\r\n    let anchor: Node | null | undefined = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    // parent must be defined\r\n    if (parentElm) {\r\n      if (isArrayLike(insertedElms)) {\r\n        fragment = document.createDocumentFragment();\r\n\r\n        // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n        each(insertedElms, (insertedElm) => {\r\n          if (insertedElm === anchor) {\r\n            anchor = insertedElm.previousSibling;\r\n          }\r\n          fragment!.appendChild(insertedElm);\r\n        });\r\n      } else {\r\n        fragment = insertedElms;\r\n      }\r\n\r\n      // if the preferred anchor isn't null set it to a valid anchor\r\n      if (preferredAnchor) {\r\n        if (!anchor) {\r\n          anchor = parentElm.firstChild;\r\n        } else if (anchor !== preferredAnchor) {\r\n          anchor = anchor.nextSibling;\r\n        }\r\n      }\r\n\r\n      parentElm.insertBefore(fragment, anchor || null);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n */\r\nexport const appendChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, null, children);\r\n};\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n */\r\nexport const prependChildren = (node: Node | null | undefined, children: NodeCollection): void => {\r\n  before(node, node && node.firstChild, children);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertBefore = (\r\n  node: Node | null | undefined,\r\n  insertedNodes: NodeCollection\r\n): void => {\r\n  before(parent(node), node, insertedNodes);\r\n};\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n */\r\nexport const insertAfter = (node: Node | null | undefined, insertedNodes: NodeCollection): void => {\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n};\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    if (parentElm) {\r\n      parentElm.removeChild(nodes);\r\n    }\r\n  }\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { attr } from 'support/dom/attribute';\r\nimport { contents } from 'support/dom/traversal';\r\nimport { removeElements } from 'support/dom/manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  if (classNames) {\r\n    attr(div, 'class', classNames);\r\n  }\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { hasOwnProperty } from 'support/utils/object';\r\nimport { createDiv } from 'support/dom/create';\r\n\r\nconst firstLetterToUpper = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\nconst getDummyStyle = (): CSSStyleDeclaration => createDiv().style;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n\r\nexport const cssPrefixes: ReadonlyArray<string> = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\nexport const jsPrefixes: ReadonlyArray<string> = [\r\n  'WebKit',\r\n  'Moz',\r\n  'O',\r\n  'MS',\r\n  'webkit',\r\n  'moz',\r\n  'o',\r\n  'ms',\r\n];\r\n\r\nexport const jsCache: { [key: string]: any } = {};\r\nexport const cssCache: { [key: string]: string } = {};\r\n\r\n/**\r\n * Gets the name of the given CSS property with vendor prefix if it isn't supported without it, or and empty string if unsupported.\r\n * @param name The name of the CSS property which shall be get.\r\n */\r\nexport const cssProperty = (name: string): string => {\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const uppercasedName: string = firstLetterToUpper(name);\r\n  const elmStyle: CSSStyleDeclaration = getDummyStyle();\r\n\r\n  each(cssPrefixes, (prefix: string) => {\r\n    const prefixWithoutDashes: string = prefix.replace(/-/g, '');\r\n    const resultPossibilities: Array<string> = [\r\n      name, // transition\r\n      prefix + name, // -webkit-transition\r\n      prefixWithoutDashes + uppercasedName, // webkitTransition\r\n      firstLetterToUpper(prefixWithoutDashes) + uppercasedName, // WebkitTransition\r\n    ];\r\n\r\n    // eslint-disable-next-line no-return-assign\r\n    return !(result = resultPossibilities.find(\r\n      (resultPossibility: string) => elmStyle[resultPossibility] !== undefined\r\n    ));\r\n  });\r\n\r\n  // eslint-disable-next-line no-return-assign\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the name of the given CSS property value(s), with vendor prefix if it isn't supported without it, or an empty string if no value is supported.\r\n * @param property The CSS property to which the CSS property value(s) belong.\r\n * @param values The value(s) separated by spaces which shall be get.\r\n * @param suffix A suffix which is added to each value in case the value is a function or something else more advanced.\r\n */\r\nexport const cssPropertyValue = (property: string, values: string, suffix?: string): string => {\r\n  const name = `${property} ${values}`;\r\n  let result: string | undefined = cssCache[name];\r\n\r\n  if (hasOwnProperty(cssCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  const dummyStyle: CSSStyleDeclaration = getDummyStyle();\r\n  const possbleValues: Array<string> = values.split(' ');\r\n  const preparedSuffix: string = suffix || '';\r\n  const cssPrefixesWithFirstEmpty = [''].concat(cssPrefixes);\r\n\r\n  each(possbleValues, (possibleValue: string) => {\r\n    each(cssPrefixesWithFirstEmpty, (prefix: string) => {\r\n      const prop = prefix + possibleValue;\r\n      dummyStyle.cssText = `${property}:${prop}${preparedSuffix}`;\r\n      if (dummyStyle.length) {\r\n        result = prop;\r\n        return false;\r\n      }\r\n    });\r\n    return !result;\r\n  });\r\n\r\n  // eslint-disable-next-line no-return-assign\r\n  return (cssCache[name] = result || '');\r\n};\r\n\r\n/**\r\n * Get the requested JS function, object or constructor with vendor prefix if it isn't supported without or undefined if unsupported.\r\n * @param name The name of the JS function, object or constructor.\r\n */\r\nexport const jsAPI = <T = any>(name: string): T | undefined => {\r\n  let result: any = jsCache[name] || window[name];\r\n\r\n  if (hasOwnProperty(jsCache, name)) {\r\n    return result;\r\n  }\r\n\r\n  each(jsPrefixes, (prefix: string) => {\r\n    result = result || window[prefix + firstLetterToUpper(name)];\r\n    return !result;\r\n  });\r\n\r\n  jsCache[name] = result;\r\n  return result;\r\n};\r\n","import { jsAPI } from 'support/compatibility/vendors';\r\n\r\nexport const MutationObserverConstructor = jsAPI<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor = jsAPI<typeof IntersectionObserver>(\r\n  'IntersectionObserver'\r\n);\r\nexport const ResizeObserverConstructor = jsAPI<typeof ResizeObserver>('ResizeObserver');\r\nexport const cAF = jsAPI<typeof cancelAnimationFrame>('cancelAnimationFrame');\r\nexport const rAF = jsAPI<typeof requestAnimationFrame>('requestAnimationFrame');\r\n","import { isString } from 'support/utils/types';\r\nimport { each } from 'support/utils/array';\r\nimport { keys } from 'support/utils/object';\r\n\r\nconst rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\r\nconst classListAction = (\r\n  elm: Element | false | null | undefined,\r\n  className: string | false | null | undefined,\r\n  action: (elmClassList: DOMTokenList, clazz: string) => boolean | void\r\n): boolean => {\r\n  let clazz: string;\r\n  let i = 0;\r\n  let result = false;\r\n\r\n  if (elm && className && isString(className)) {\r\n    const classes: Array<string> = className.match(rnothtmlwhite) || [];\r\n    result = classes.length > 0;\r\n    while ((clazz = classes[i++])) {\r\n      result = !!action(elm.classList, clazz) && result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (\r\n  elm: Element | false | null | undefined,\r\n  className: string | false | null | undefined\r\n): boolean => classListAction(elm, className, (classList, clazz) => classList.contains(clazz));\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (\r\n  elm: Element | false | null | undefined,\r\n  className: string | false | null | undefined\r\n): void => {\r\n  classListAction(elm, className, (classList, clazz) => classList.remove(clazz));\r\n};\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n * @returns A function which removes the added class name(s).\r\n */\r\nexport const addClass = (\r\n  elm: Element | false | null | undefined,\r\n  className: string | false | null | undefined\r\n): (() => void) => {\r\n  classListAction(elm, className, (classList, clazz) => classList.add(clazz));\r\n  return removeClass.bind(0, elm, className);\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (\r\n  classNameA: string | null | undefined,\r\n  classNameB: string | null | undefined\r\n) => {\r\n  const classNameASplit = classNameA && classNameA.split(' ');\r\n  const classNameBSplit = classNameB && classNameB.split(' ');\r\n  const tempObj = {};\r\n\r\n  each(classNameASplit, (className) => {\r\n    tempObj[className] = 1;\r\n  });\r\n  each(classNameBSplit, (className) => {\r\n    if (tempObj[className]) {\r\n      delete tempObj[className];\r\n    } else {\r\n      tempObj[className] = 1;\r\n    }\r\n  });\r\n\r\n  return keys(tempObj);\r\n};\r\n","import { each } from 'support/utils/array';\r\nimport { WH, XY, TRBL } from 'support/dom';\r\nimport { PlainObject } from 'typings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(\r\n  a: T | undefined,\r\n  b: T | undefined,\r\n  props: Array<keyof T>,\r\n  propMutation?: ((value: any) => any) | null | false\r\n): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      const compareA = propMutation ? propMutation(a[prop]) : a[prop];\r\n      const compareB = propMutation ? propMutation(b[prop]) : b[prop];\r\n      if (compareA !== compareB) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = <T>(a?: WH<T>, b?: WH<T>) => equal<WH<T>>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = <T>(a?: XY<T>, b?: XY<T>) => equal<XY<T>>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n\r\n/**\r\n * Compares two DOM Rects for their equality of their width and height properties\r\n * Also returns false if one of the DOM Rects is undefined or null.\r\n * @param a DOM Rect a.\r\n * @param b DOM Rect b.\r\n * @param round Whether the values should be rounded.\r\n */\r\nexport const equalBCRWH = (a?: DOMRect, b?: DOMRect, round?: boolean) =>\r\n  equal<DOMRect>(a, b, ['width', 'height'], round && ((value) => Math.round(value)));\r\n","import { isNumber, isFunction } from 'support/utils/types';\r\nimport { from } from 'support/utils/array';\r\nimport { rAF, cAF } from 'support/compatibility/apis';\r\n\r\nconst clearTimeouts = (id: number | undefined) => {\r\n  id && window.clearTimeout(id);\r\n  id && cAF!(id);\r\n};\r\n\r\ntype DebounceTiming = number | false | null | undefined;\r\n\r\nexport interface DebounceOptions<FunctionToDebounce extends (...args: any) => any> {\r\n  /**\r\n   * The timeout for debouncing. If null, no debounce is applied.\r\n   */\r\n  _timeout?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * A maximum amount of ms. before the function will be called even with debounce.\r\n   */\r\n  _maxDelay?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * Function which merges parameters for each canceled debounce.\r\n   * If parameters can't be merged the function will return null, otherwise it returns the merged parameters.\r\n   */\r\n  _mergeParams?: (\r\n    prev: Parameters<FunctionToDebounce>,\r\n    curr: Parameters<FunctionToDebounce>\r\n  ) => Parameters<FunctionToDebounce> | false | null | undefined;\r\n}\r\n\r\nexport interface Debounced<FunctionToDebounce extends (...args: any) => any> {\r\n  (...args: Parameters<FunctionToDebounce>): ReturnType<FunctionToDebounce>;\r\n  _flush(): void;\r\n}\r\n\r\nexport const noop = () => {}; // eslint-disable-line\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param options Options for debouncing.\r\n */\r\nexport const debounce = <FunctionToDebounce extends (...args: any) => any>(\r\n  functionToDebounce: FunctionToDebounce,\r\n  options?: DebounceOptions<FunctionToDebounce>\r\n): Debounced<FunctionToDebounce> => {\r\n  let timeoutId: number | undefined;\r\n  let maxTimeoutId: number | undefined;\r\n  let prevArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  let latestArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  const { _timeout, _maxDelay, _mergeParams } = options || {};\r\n  const setT = window.setTimeout;\r\n\r\n  const invokeFunctionToDebounce = function (args: IArguments) {\r\n    clearTimeouts(timeoutId);\r\n    clearTimeouts(maxTimeoutId);\r\n    maxTimeoutId = timeoutId = prevArguments = undefined;\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  const mergeParms = (\r\n    curr: Parameters<FunctionToDebounce>\r\n  ): Parameters<FunctionToDebounce> | false | null | undefined =>\r\n    _mergeParams && prevArguments ? _mergeParams(prevArguments, curr) : curr;\r\n\r\n  const flush = () => {\r\n    /* istanbul ignore next */\r\n    if (timeoutId) {\r\n      invokeFunctionToDebounce(mergeParms(latestArguments!) || latestArguments!);\r\n    }\r\n  };\r\n\r\n  const debouncedFn = function () {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    const args: Parameters<FunctionToDebounce> = from(arguments) as Parameters<FunctionToDebounce>;\r\n    const finalTimeout = isFunction(_timeout) ? _timeout() : _timeout;\r\n    const hasTimeout = isNumber(finalTimeout) && finalTimeout >= 0;\r\n\r\n    if (hasTimeout) {\r\n      const finalMaxWait = isFunction(_maxDelay) ? _maxDelay() : _maxDelay;\r\n      const hasMaxWait = isNumber(finalMaxWait) && finalMaxWait >= 0;\r\n      const setTimeoutFn = finalTimeout > 0 ? setT : rAF!;\r\n      const mergeParamsResult = mergeParms(args);\r\n      const invokedArgs = mergeParamsResult || args;\r\n      const boundInvoke = invokeFunctionToDebounce.bind(0, invokedArgs);\r\n\r\n      // if (!mergeParamsResult) {\r\n      //   invokeFunctionToDebounce(prevArguments || args);\r\n      // }\r\n\r\n      clearTimeouts(timeoutId);\r\n      // @ts-ignore\r\n      timeoutId = setTimeoutFn(boundInvoke, finalTimeout as number) as number;\r\n\r\n      if (hasMaxWait && !maxTimeoutId) {\r\n        maxTimeoutId = setT(flush, finalMaxWait as number);\r\n      }\r\n\r\n      prevArguments = latestArguments = invokedArgs;\r\n    } else {\r\n      invokeFunctionToDebounce(args);\r\n    }\r\n  };\r\n  debouncedFn._flush = flush;\r\n\r\n  return debouncedFn as Debounced<FunctionToDebounce>;\r\n};\r\n","import { each, keys } from 'support/utils';\r\nimport { isString, isNumber, isArray, isUndefined } from 'support/utils/types';\r\nimport { PlainObject, StyleObject } from 'typings';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\nconst cssNumber = {\r\n  // animationiterationcount: 1,\r\n  // columncount: 1,\r\n  // fillopacity: 1,\r\n  // flexgrow: 1,\r\n  // flexshrink: 1,\r\n  // fontweight: 1,\r\n  // lineheight: 1,\r\n  // order: 1,\r\n  // orphans: 1,\r\n  // widows: 1,\r\n  // zoom: 1,\r\n  opacity: 1,\r\n  zindex: 1,\r\n};\r\n\r\nconst parseToZeroOrNumber = (value: string, toFloat?: boolean): number => {\r\n  /* istanbul ignore next */\r\n  const num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n  /* istanbul ignore next */\r\n  return Number.isNaN(num) ? 0 : num;\r\n};\r\nconst adaptCSSVal = (prop: string, val: string | number): string | number =>\r\n  !cssNumber[prop.toLowerCase()] && isNumber(val) ? `${val}px` : val;\r\nconst getCSSVal = (elm: HTMLElement, computedStyle: CSSStyleDeclaration, prop: string): string =>\r\n  /* istanbul ignore next */\r\n  computedStyle != null\r\n    ? computedStyle[prop] || computedStyle.getPropertyValue(prop)\r\n    : elm.style[prop];\r\nconst setCSSVal = (\r\n  elm: HTMLElement | false | null | undefined,\r\n  prop: string,\r\n  val: string | number\r\n): void => {\r\n  try {\r\n    if (elm) {\r\n      const { style: elmStyle } = elm;\r\n      if (!isUndefined(elmStyle[prop])) {\r\n        elmStyle[prop] = adaptCSSVal(prop, val);\r\n      } else {\r\n        elmStyle.setProperty(prop, val as string);\r\n      }\r\n    }\r\n  } catch (e) {}\r\n};\r\n\r\n/**\r\n * Gets or sets the passed styles to the passed element.\r\n * @param elm The element to which the styles shall be applied to / be read from.\r\n * @param styles The styles which shall be set or read.\r\n */\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps>\r\n): void;\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: string\r\n): string;\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: Array<string> | string\r\n): { [key: string]: string };\r\nexport function style<CustomCssProps>(\r\n  elm: HTMLElement | false | null | undefined,\r\n  styles: StyleObject<CustomCssProps> | Array<string> | string\r\n): { [key: string]: string } | string | void {\r\n  const getSingleStyle = isString(styles);\r\n  const getStyles = isArray(styles) || getSingleStyle;\r\n\r\n  if (getStyles) {\r\n    let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n    if (elm) {\r\n      const computedStyle: CSSStyleDeclaration = window.getComputedStyle(elm, null);\r\n      getStylesResult = getSingleStyle\r\n        ? getCSSVal(elm, computedStyle, styles as string)\r\n        : (styles as Array<string>).reduce((result, key) => {\r\n            result[key] = getCSSVal(elm, computedStyle, key as string);\r\n            return result;\r\n          }, getStylesResult);\r\n    }\r\n    return getStylesResult;\r\n  }\r\n  each(keys(styles), (key) => setCSSVal(elm, key, styles[key]));\r\n}\r\n\r\n/**\r\n * Hides the passed element (display: none).\r\n * @param elm The element which shall be hidden.\r\n */\r\nexport const hide = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'none' });\r\n};\r\n\r\n/**\r\n * Shows the passed element (display: block).\r\n * @param elm The element which shall be shown.\r\n */\r\nexport const show = (elm: HTMLElement | false | null | undefined): void => {\r\n  style(elm, { display: 'block' });\r\n};\r\n\r\n/**\r\n * Returns the top right bottom left values of the passed css property.\r\n * @param elm The element of which the values shall be returned.\r\n * @param propertyPrefix The css property prefix. (e.g. \"border\")\r\n * @param propertySuffix The css property suffix. (e.g. \"width\")\r\n */\r\nexport const topRightBottomLeft = (\r\n  elm?: HTMLElement | false | null | undefined,\r\n  propertyPrefix?: string,\r\n  propertySuffix?: string\r\n): TRBL => {\r\n  const finalPrefix = propertyPrefix ? `${propertyPrefix}-` : '';\r\n  const finalSuffix = propertySuffix ? `-${propertySuffix}` : '';\r\n  const top = `${finalPrefix}top${finalSuffix}`;\r\n  const right = `${finalPrefix}right${finalSuffix}`;\r\n  const bottom = `${finalPrefix}bottom${finalSuffix}`;\r\n  const left = `${finalPrefix}left${finalSuffix}`;\r\n  const result = style(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n","import { style } from 'support/dom/style';\r\n\r\nexport interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean =>\r\n  !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (): WH => ({\r\n  w: window.innerWidth,\r\n  h: window.innerHeight,\r\n});\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = (elm: HTMLElement | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.offsetWidth,\r\n        h: elm.offsetHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = (elm: HTMLElement | false | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.clientWidth,\r\n        h: elm.clientHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = (elm: HTMLElement | false | null | undefined): WH =>\r\n  elm\r\n    ? {\r\n        w: elm.scrollWidth,\r\n        h: elm.scrollHeight,\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the fractional- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the fractional- width and height shall be returned.\r\n */\r\nexport const fractionalSize = (elm: HTMLElement | false | null | undefined): WH => {\r\n  const cssHeight = parseFloat(style(elm, 'height')) || 0;\r\n  const cssWidth = parseFloat(style(elm, 'height')) || 0;\r\n  return {\r\n    w: cssWidth - Math.round(cssWidth),\r\n    h: cssHeight - Math.round(cssHeight),\r\n  };\r\n};\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElement | false | null | undefined): boolean =>\r\n  elm ? elementHasDimensions(elm as HTMLElement) : false;\r\n","import { isUndefined } from 'support/utils/types';\r\nimport { each, push, runEach } from 'support/utils/array';\r\n\r\nlet passiveEventsSupport: boolean;\r\nconst supportPassiveEvents = (): boolean => {\r\n  if (isUndefined(passiveEventsSupport)) {\r\n    passiveEventsSupport = false;\r\n    try {\r\n      /* eslint-disable */\r\n      // @ts-ignore\r\n      window.addEventListener(\r\n        'test',\r\n        null,\r\n        Object.defineProperty({}, 'passive', {\r\n          get: function () {\r\n            passiveEventsSupport = true;\r\n          },\r\n        })\r\n      );\r\n      /* eslint-enable */\r\n    } catch (e) {}\r\n  }\r\n  return passiveEventsSupport;\r\n};\r\nconst splitEventNames = (eventNames: string) => eventNames.split(' ');\r\n\r\nexport interface OnOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\n/**\r\n * Removes the passed event listener for the passed events with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const off = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  capture?: boolean\r\n): void => {\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed eventnames with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const on = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: string,\r\n  listener: (event: T) => any,\r\n  options?: OnOptions\r\n): (() => void) => {\r\n  const doSupportPassiveEvents = supportPassiveEvents();\r\n  const passive = (doSupportPassiveEvents && options && options._passive) || false;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const offListeners: (() => void)[] = [];\r\n  const nativeOptions: AddEventListenerOptions | boolean = doSupportPassiveEvents\r\n    ? {\r\n        passive,\r\n        capture,\r\n      }\r\n    : capture;\r\n\r\n  each(splitEventNames(eventNames), (eventName) => {\r\n    const finalListener = (once\r\n      ? (evt: T) => {\r\n          target.removeEventListener(eventName, finalListener, capture);\r\n          listener && listener(evt);\r\n        }\r\n      : listener) as EventListener;\r\n\r\n    push(offListeners, off.bind(null, target, eventName, finalListener, capture));\r\n    target.addEventListener(eventName, finalListener, nativeOptions);\r\n  });\r\n\r\n  return runEach.bind(0, offListeners);\r\n};\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event): void => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event): void => evt.preventDefault();\r\n\r\n/**\r\n * Shorthand for the stopPropagation and preventDefault event Method.\r\n * @param evt The event of which the stopPropagation and preventDefault methods shall be called.\r\n */\r\nexport const stopAndPrevent = (evt: Event): void =>\r\n  (stopPropagation(evt) as undefined) || (preventDefault(evt) as undefined);\r\n","import { getBoundingClientRect } from 'support/dom/dimensions';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElement | null | undefined): XY => {\r\n  const rect = elm ? getBoundingClientRect(elm) : 0;\r\n  return rect\r\n    ? {\r\n        x: rect.left + window.pageYOffset,\r\n        y: rect.top + window.pageXOffset,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElement | null | undefined): XY =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","import { isArray } from 'support/utils/types';\r\nimport { keys } from 'support/utils/object';\r\nimport { each, from } from 'support/utils/array';\r\n\r\nexport type EventListener<\r\n  NameArgsMap extends Record<string, any>,\r\n  Name extends Extract<keyof NameArgsMap, string> = Extract<keyof NameArgsMap, string>\r\n> = (...args: NameArgsMap[Name] extends undefined ? [] : [args: NameArgsMap[Name]]) => void;\r\n\r\nexport type EventListenerGroup<\r\n  NameArgsMap extends Record<string, any>,\r\n  Name extends Extract<keyof NameArgsMap, string> = Extract<keyof NameArgsMap, string>\r\n> = EventListener<NameArgsMap, Name> | EventListener<NameArgsMap, Name>[];\r\n\r\nexport type AddEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name: Name,\r\n  listener: EventListenerGroup<NameArgsMap, Name>\r\n) => () => void;\r\n\r\nexport type RemoveEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name?: Name,\r\n  listener?: EventListenerGroup<NameArgsMap, Name>\r\n) => void;\r\n\r\nexport type TriggerEventListener<NameArgsMap extends Record<string, any>> = <\r\n  Name extends Extract<keyof NameArgsMap, string>\r\n>(\r\n  name: Name,\r\n  ...args: NameArgsMap[Name] extends undefined ? [] : [args: NameArgsMap[Name]]\r\n) => void;\r\n\r\nexport type InitialEventListeners<NameArgsMap extends Record<string, any>> = {\r\n  [K in Extract<keyof NameArgsMap, string>]?: EventListenerGroup<NameArgsMap, K>;\r\n};\r\n\r\nconst manageListener = <NameArgsMap extends Record<string, any>>(\r\n  callback: (listener?: EventListener<NameArgsMap>) => void,\r\n  listener?: EventListener<NameArgsMap> | EventListener<NameArgsMap>[]\r\n) => {\r\n  each(isArray(listener) ? listener : [listener], callback);\r\n};\r\n\r\nexport const createEventListenerHub = <NameArgsMap extends Record<string, any>>(\r\n  initialEventListeners?: InitialEventListeners<NameArgsMap>\r\n): [\r\n  AddEventListener<NameArgsMap>,\r\n  RemoveEventListener<NameArgsMap>,\r\n  TriggerEventListener<NameArgsMap>\r\n] => {\r\n  const events = new Map<Extract<keyof NameArgsMap, string>, Set<EventListener<NameArgsMap>>>();\r\n  const removeEvent: RemoveEventListener<NameArgsMap> = (name?, listener?) => {\r\n    if (name) {\r\n      const eventSet = events.get(name);\r\n      manageListener((currListener) => {\r\n        if (eventSet) {\r\n          eventSet[currListener ? 'delete' : 'clear'](currListener!);\r\n        }\r\n      }, listener as EventListenerGroup<NameArgsMap> | undefined);\r\n    } else {\r\n      events.forEach((eventSet) => {\r\n        eventSet.clear();\r\n      });\r\n      events.clear();\r\n    }\r\n  };\r\n  const addEvent: AddEventListener<NameArgsMap> = (name, listener) => {\r\n    const eventSet = events.get(name) || new Set();\r\n    events.set(name, eventSet);\r\n\r\n    manageListener((currListener) => {\r\n      currListener && eventSet.add(currListener);\r\n    }, listener as EventListenerGroup<NameArgsMap>);\r\n\r\n    return removeEvent.bind(0, name as any, listener as EventListenerGroup<NameArgsMap>);\r\n  };\r\n  const triggerEvent: TriggerEventListener<NameArgsMap> = (name, args?) => {\r\n    const eventSet = events.get(name);\r\n\r\n    each(from(eventSet), (event) => {\r\n      if (args) {\r\n        (event as (args: NameArgsMap[Extract<keyof NameArgsMap, string>]) => void)(args as any);\r\n      } else {\r\n        (event as () => void)();\r\n      }\r\n    });\r\n  };\r\n\r\n  const initialListenerKeys = keys(initialEventListeners) as Extract<keyof NameArgsMap, string>[];\r\n  each(initialListenerKeys, (key) => {\r\n    addEvent(key, initialEventListeners![key] as any);\r\n  });\r\n\r\n  return [addEvent, removeEvent, triggerEvent];\r\n};\r\n","import { assignDeep, hasOwnProperty } from 'support';\r\nimport type { OSOptions, ReadonlyOSOptions } from 'options';\r\nimport type { PartialOptions } from 'typings';\r\n\r\nexport type SetupElements<T extends Record<string, any>> = [elements: T, destroy: () => void];\r\n\r\nexport type SetupUpdate<T = void> = (\r\n  changedOptions: PartialOptions<OSOptions>,\r\n  force?: boolean\r\n) => T;\r\n\r\nexport type SetupUpdateCheckOption = <T>(path: string) => [value: T, changed: boolean];\r\n\r\nexport type SetupUpdateSegment<Hints extends Record<string, any>> = (\r\n  updateHints: Hints,\r\n  checkOption: SetupUpdateCheckOption,\r\n  force: boolean\r\n) => Partial<Hints> | void;\r\n\r\nexport type SetupState<T extends Record<string, any>> = [\r\n  get: () => T,\r\n  set: (newState: Partial<T>) => void\r\n];\r\n\r\nexport type Setup<DynamicState, StaticState extends Record<string, any> = Record<string, any>> = [\r\n  update: SetupUpdate,\r\n  state: (() => DynamicState) & StaticState,\r\n  destroy: () => void\r\n];\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj\r\n    ? path.split('.').reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj)\r\n    : undefined;\r\n\r\nexport const createOptionCheck =\r\n  (\r\n    options: ReadonlyOSOptions,\r\n    changedOptions: PartialOptions<OSOptions>,\r\n    force?: boolean\r\n  ): SetupUpdateCheckOption =>\r\n  (path: string) =>\r\n    [getPropByPath(options, path), force || getPropByPath(changedOptions, path) !== undefined];\r\n\r\nexport const createState = <S>(initialState: S): SetupState<S> => {\r\n  let state: S = initialState;\r\n  return [\r\n    () => state,\r\n    (newState: Partial<S>) => {\r\n      state = assignDeep({}, state, newState);\r\n    },\r\n  ];\r\n};\r\n","export const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentFlexboxGlue = `${classNameEnvironment}-flexbox-glue`;\r\nexport const classNameEnvironmentFlexboxGlueMax = `${classNameEnvironmentFlexboxGlue}-max`;\r\n\r\nexport const dataAttributeHost = 'data-overlayscrollbars';\r\nexport const dataAttributeHostOverflowX = `${dataAttributeHost}-overflow-x`;\r\nexport const dataAttributeHostOverflowY = `${dataAttributeHost}-overflow-y`;\r\nexport const dataValueHostOverflowVisible = 'overflowVisible';\r\nexport const dataValueHostViewportScrollbarStyling = 'viewportStyled';\r\nexport const classNamePadding = 'os-padding';\r\nexport const classNameViewport = 'os-viewport';\r\nexport const classNameViewportArrange = `${classNameViewport}-arrange`;\r\nexport const classNameContent = 'os-content';\r\nexport const classNameViewportScrollbarStyling = `${classNameViewport}-scrollbar-styled`;\r\nexport const classNameOverflowVisible = `os-overflow-visible`;\r\n\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n\r\nexport const classNameScrollbar = 'os-scrollbar';\r\nexport const classNameScrollbarHorizontal = `${classNameScrollbar}-horizontal`;\r\nexport const classNameScrollbarVertical = `${classNameScrollbar}-vertical`;\r\nexport const classNameScrollbarTrack = 'os-scrollbar-track';\r\nexport const classNameScrollbarHandle = 'os-scrollbar-handle';\r\n","import { assignDeep, each, isObject, keys, isArray, hasOwnProperty, isFunction } from 'support';\r\nimport { PartialOptions, ReadonlyOptions } from 'typings';\r\n\r\nconst stringify = (value: any) =>\r\n  JSON.stringify(value, (_, val) => {\r\n    if (isFunction(val)) {\r\n      throw new Error();\r\n    }\r\n    return val;\r\n  });\r\n\r\nexport type ResizeBehavior = 'none' | 'both' | 'horizontal' | 'vertical';\r\n\r\nexport type OverflowBehavior =\r\n  | 'hidden'\r\n  | 'scroll'\r\n  | 'visible'\r\n  | 'visible-hidden'\r\n  | 'visible-scroll';\r\n\r\nexport type VisibilityBehavior = 'visible' | 'hidden' | 'auto';\r\n\r\nexport type AutoHideBehavior = 'never' | 'scroll' | 'leave' | 'move';\r\n\r\nexport type ScrollBehavior = 'always' | 'ifneeded' | 'never';\r\n\r\nexport type BasicEventCallback = (this: any) => void;\r\n\r\nexport type ScrollEventCallback = (this: any, args?: UIEvent) => void;\r\n\r\nexport type OverflowChangedCallback = (this: any, args?: OverflowChangedArgs) => void;\r\n\r\nexport type OverflowAmountChangedCallback = (this: any, args?: OverflowAmountChangedArgs) => void;\r\n\r\nexport type DirectionChangedCallback = (this: any, args?: DirectionChangedArgs) => void;\r\n\r\nexport type SizeChangedCallback = (this: any, args?: SizeChangedArgs) => void;\r\n\r\nexport type UpdatedCallback = (this: any, args?: UpdatedArgs) => void;\r\n\r\nexport interface OSOptions {\r\n  paddingAbsolute: boolean;\r\n  updating: {\r\n    elementEvents: Array<[elementSelector: string, eventNames: string]> | null;\r\n    attributes: string[] | null;\r\n    debounce: [timeout: number, maxWait: number] | number | null; // (if tuple: [timeout: 0, maxWait: 33], if number: [timeout: number, maxWait: false]) debounce for content Changes\r\n    ignoreMutation: ((mutation: MutationRecord) => any) | null;\r\n  };\r\n  overflow: {\r\n    x: OverflowBehavior;\r\n    y: OverflowBehavior;\r\n  };\r\n  scrollbars: {\r\n    visibility: VisibilityBehavior;\r\n    autoHide: AutoHideBehavior;\r\n    autoHideDelay: number;\r\n    dragScroll: boolean;\r\n    clickScroll: boolean;\r\n    touch: boolean;\r\n  };\r\n  nativeScrollbarsOverlaid: {\r\n    show: boolean;\r\n    initialize: boolean;\r\n  };\r\n}\r\n\r\nexport type ReadonlyOSOptions = ReadonlyOptions<OSOptions>;\r\n\r\nexport interface OverflowChangedArgs {\r\n  x: boolean;\r\n  y: boolean;\r\n  xScrollable: boolean;\r\n  yScrollable: boolean;\r\n  clipped: boolean;\r\n}\r\n\r\nexport interface OverflowAmountChangedArgs {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface DirectionChangedArgs {\r\n  isRTL: number;\r\n  dir: string;\r\n}\r\n\r\nexport interface SizeChangedArgs {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface UpdatedArgs {\r\n  forced: boolean;\r\n}\r\n\r\nexport const defaultOptions: OSOptions = {\r\n  // resize: 'none', // none || both  || horizontal || vertical || n || b || h || v\r\n  paddingAbsolute: false, // true || false\r\n  updating: {\r\n    elementEvents: [['img', 'load']], // array of tuples || null\r\n    debounce: [0, 33], // number || number array || null\r\n    attributes: null, // string array || null\r\n    ignoreMutation: null, // () => any || null\r\n  },\r\n  overflow: {\r\n    x: 'scroll', // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n    y: 'scroll', // visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n  },\r\n  nativeScrollbarsOverlaid: {\r\n    show: false, // true || false\r\n    initialize: false, // true || false\r\n  },\r\n  scrollbars: {\r\n    visibility: 'auto', // visible || hidden || auto || v || h || a\r\n    autoHide: 'never', // never || scroll || leave || move || n || s || l || m\r\n    autoHideDelay: 800, // number\r\n    dragScroll: true, // true || false\r\n    clickScroll: false, // true || false\r\n    touch: true, // true || false\r\n  },\r\n  /*\r\n  textarea: {\r\n    dynWidth: false, // true || false\r\n    dynHeight: false, // true || false\r\n    inheritedAttrs: ['style', 'class'], // string || array || null\r\n  },\r\n  */\r\n};\r\n\r\nexport const getOptionsDiff = <T>(\r\n  currOptions: T,\r\n  newOptions: PartialOptions<T>\r\n): PartialOptions<T> => {\r\n  const diff: PartialOptions<T> = {};\r\n  const optionsKeys = keys(newOptions).concat(keys(currOptions));\r\n\r\n  each(optionsKeys, (optionKey) => {\r\n    const currOptionValue = currOptions[optionKey];\r\n    const newOptionValue = newOptions[optionKey];\r\n\r\n    if (isObject(currOptionValue) && isObject(newOptionValue)) {\r\n      assignDeep((diff[optionKey] = {}), getOptionsDiff(currOptionValue, newOptionValue));\r\n    } else if (hasOwnProperty(newOptions, optionKey) && newOptionValue !== currOptionValue) {\r\n      let isDiff = true;\r\n\r\n      if (isArray(currOptionValue) || isArray(newOptionValue)) {\r\n        try {\r\n          if (stringify(currOptionValue) === stringify(newOptionValue)) {\r\n            isDiff = false;\r\n          }\r\n        } catch {}\r\n      }\r\n\r\n      if (isDiff) {\r\n        diff[optionKey] = newOptionValue;\r\n      }\r\n    }\r\n  });\r\n\r\n  return diff;\r\n};\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  style,\r\n  appendChildren,\r\n  fractionalSize,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  scrollLeft,\r\n  XY,\r\n  removeAttr,\r\n  removeElements,\r\n  windowSize,\r\n  equalBCRWH,\r\n  getBoundingClientRect,\r\n  assignDeep,\r\n  cssProperty,\r\n  createCache,\r\n  equalXY,\r\n  createEventListenerHub,\r\n  EventListener,\r\n} from 'support';\r\nimport {\r\n  classNameEnvironment,\r\n  classNameEnvironmentFlexboxGlue,\r\n  classNameEnvironmentFlexboxGlueMax,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport { OSOptions, defaultOptions } from 'options';\r\nimport { OSTargetElement, PartialOptions } from 'typings';\r\n\r\ntype StructureInitializationStrategyElementFn<T> =\r\n  | ((target: OSTargetElement) => HTMLElement | T)\r\n  | T;\r\n\r\ntype ScrollbarsInitializationStrategyElementFn<T> =\r\n  | ((target: OSTargetElement, host: HTMLElement, viewport: HTMLElement) => HTMLElement | T)\r\n  | T;\r\n\r\n/**\r\n * A Static element is an element which MUST be generated.\r\n * If null or undefined (or the returned result is null or undefined), the initialization function is generatig the element, otherwise\r\n * the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationStrategyStaticElement = StructureInitializationStrategyElementFn<\r\n  null | undefined\r\n>;\r\n\r\n/**\r\n * A Dynamic element is an element which CAN be generated.\r\n * If boolean (or the returned result is boolean), the generation of the element is forced (or not).\r\n * If the function returns and element, the element returned by the function acts as the generated element.\r\n */\r\nexport type StructureInitializationStrategyDynamicElement =\r\n  StructureInitializationStrategyElementFn<boolean>;\r\n\r\nexport interface StructureInitializationStrategy {\r\n  _host: StructureInitializationStrategyStaticElement;\r\n  _viewport: StructureInitializationStrategyStaticElement;\r\n  _padding: StructureInitializationStrategyDynamicElement;\r\n  _content: StructureInitializationStrategyDynamicElement;\r\n}\r\n\r\nexport interface ScrollbarsInitializationStrategy {\r\n  /**\r\n   * The scrollbars slot.  If null or undefined (or the returned result is null or undefined), the initialization function is deciding the element, otherwise\r\n   * the element returned by the function acts as the scrollbars slot.\r\n   */\r\n  _scrollbarsSlot: ScrollbarsInitializationStrategyElementFn<null | undefined>;\r\n}\r\n\r\nexport interface InitializationStrategy\r\n  extends StructureInitializationStrategy,\r\n    ScrollbarsInitializationStrategy {}\r\n\r\nexport type DefaultInitializationStrategy = {\r\n  [K in keyof InitializationStrategy]: Extract<\r\n    InitializationStrategy[K],\r\n    boolean | null | undefined\r\n  >;\r\n};\r\n\r\nexport interface EnvironmentListenersNameArgsMap {\r\n  _: undefined;\r\n}\r\n\r\nexport interface Environment {\r\n  readonly _nativeScrollbarSize: XY;\r\n  readonly _nativeScrollbarIsOverlaid: XY<boolean>;\r\n  readonly _nativeScrollbarStyling: boolean;\r\n  readonly _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  readonly _flexboxGlue: boolean;\r\n  readonly _cssCustomProperties: boolean;\r\n  readonly _defaultInitializationStrategy: DefaultInitializationStrategy;\r\n  readonly _defaultDefaultOptions: OSOptions;\r\n  _addListener(listener: EventListener<EnvironmentListenersNameArgsMap, '_'>): () => void;\r\n  _getInitializationStrategy(): InitializationStrategy;\r\n  _setInitializationStrategy(newInitializationStrategy: Partial<InitializationStrategy>): void;\r\n  _getDefaultOptions(): OSOptions;\r\n  _setDefaultOptions(newDefaultOptions: PartialOptions<OSOptions>): void;\r\n}\r\n\r\nlet environmentInstance: Environment;\r\nconst { abs, round } = Math;\r\n\r\nconst diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n  const absValOne = abs(valOne);\r\n  const absValTwo = abs(valTwo);\r\n  return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n};\r\n\r\nconst getNativeScrollbarSize = (\r\n  body: HTMLElement,\r\n  measureElm: HTMLElement,\r\n  measureElmChild: HTMLElement\r\n): XY => {\r\n  appendChildren(body, measureElm);\r\n\r\n  const cSize = clientSize(measureElm);\r\n  const oSize = offsetSize(measureElm);\r\n  const fSize = fractionalSize(measureElmChild);\r\n\r\n  return {\r\n    x: oSize.h - cSize.h + fSize.h,\r\n    y: oSize.w - cSize.w + fSize.w,\r\n  };\r\n};\r\n\r\nconst getNativeScrollbarStyling = (testElm: HTMLElement): boolean => {\r\n  let result = false;\r\n  const revertClass = addClass(testElm, classNameViewportScrollbarStyling);\r\n  try {\r\n    result =\r\n      style(testElm, cssProperty('scrollbar-width')) === 'none' ||\r\n      window.getComputedStyle(testElm, '::-webkit-scrollbar').getPropertyValue('display') ===\r\n        'none';\r\n  } catch (ex) {}\r\n  revertClass();\r\n  return result;\r\n};\r\n\r\nconst getRtlScrollBehavior = (\r\n  parentElm: HTMLElement,\r\n  childElm: HTMLElement\r\n): { i: boolean; n: boolean } => {\r\n  const strHidden = 'hidden';\r\n  style(parentElm, { overflowX: strHidden, overflowY: strHidden, direction: 'rtl' });\r\n  scrollLeft(parentElm, 0);\r\n\r\n  const parentOffset = absoluteCoordinates(parentElm);\r\n  const childOffset = absoluteCoordinates(childElm);\r\n  scrollLeft(parentElm, -999); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n  const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n  return {\r\n    /**\r\n     * origin direction = determines if the zero scroll position is on the left or right side\r\n     * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n     * true = on the left side\r\n     * false = on the right side\r\n     */\r\n    i: parentOffset.x === childOffset.x,\r\n    /**\r\n     * negative = determines if the maximum scroll is positive or negative\r\n     * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n     * true = negative\r\n     * false = positive\r\n     */\r\n    n: childOffset.x !== childOffsetAfterScroll.x,\r\n  };\r\n};\r\n\r\nconst getFlexboxGlue = (parentElm: HTMLElement, childElm: HTMLElement): boolean => {\r\n  const revertFbxGlue = addClass(parentElm, classNameEnvironmentFlexboxGlue);\r\n  const minOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const minOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMin = equalBCRWH(minOffsetsize, minOffsetsizeParent, true);\r\n\r\n  const revertFbxGlueMax = addClass(parentElm, classNameEnvironmentFlexboxGlueMax);\r\n  const maxOffsetsizeParent = getBoundingClientRect(parentElm);\r\n  const maxOffsetsize = getBoundingClientRect(childElm);\r\n  const supportsMax = equalBCRWH(maxOffsetsize, maxOffsetsizeParent, true);\r\n\r\n  revertFbxGlue();\r\n  revertFbxGlueMax();\r\n\r\n  return supportsMin && supportsMax;\r\n};\r\n\r\nconst getWindowDPR = (): number => {\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const dDPI = window.screen.deviceXDPI || 0;\r\n  // eslint-disable-next-line\r\n  // @ts-ignore\r\n  const sDPI = window.screen.logicalXDPI || 1;\r\n  return window.devicePixelRatio || dDPI / sDPI;\r\n};\r\n\r\nconst getDefaultInitializationStrategy = (\r\n  nativeScrollbarStyling: boolean\r\n): DefaultInitializationStrategy => ({\r\n  _host: null,\r\n  _viewport: null,\r\n  _padding: !nativeScrollbarStyling,\r\n  _content: false,\r\n  _scrollbarsSlot: null,\r\n});\r\n\r\nconst createEnvironment = (): Environment => {\r\n  const { body } = document;\r\n  const envDOM = createDOM(`<div class=\"${classNameEnvironment}\"><div></div></div>`);\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n  const [addEvent, , triggerEvent] = createEventListenerHub<EnvironmentListenersNameArgsMap>();\r\n  const [updateNativeScrollbarSizeCache, getNativeScrollbarSizeCache] = createCache({\r\n    _initialValue: getNativeScrollbarSize(body, envElm, envChildElm),\r\n    _equal: equalXY,\r\n  });\r\n  const [nativeScrollbarSize] = getNativeScrollbarSizeCache();\r\n  const nativeScrollbarStyling = getNativeScrollbarStyling(envElm);\r\n  const nativeScrollbarIsOverlaid = {\r\n    x: nativeScrollbarSize.x === 0,\r\n    y: nativeScrollbarSize.y === 0,\r\n  };\r\n  const initializationStrategy = getDefaultInitializationStrategy(nativeScrollbarStyling);\r\n  const defaultDefaultOptions = assignDeep({}, defaultOptions);\r\n\r\n  const env: Environment = {\r\n    _nativeScrollbarSize: nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling: nativeScrollbarStyling,\r\n    _cssCustomProperties: style(envElm, 'zIndex') === '-1',\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _flexboxGlue: getFlexboxGlue(envElm, envChildElm),\r\n    _addListener: (listener) => addEvent('_', listener),\r\n    _getInitializationStrategy: assignDeep<InitializationStrategy, InitializationStrategy>.bind(\r\n      0,\r\n      {} as InitializationStrategy,\r\n      initializationStrategy\r\n    ),\r\n    _setInitializationStrategy(newInitializationStrategy) {\r\n      assignDeep(initializationStrategy, newInitializationStrategy);\r\n    },\r\n    _getDefaultOptions: assignDeep<OSOptions, OSOptions>.bind(\r\n      0,\r\n      {} as OSOptions,\r\n      defaultDefaultOptions\r\n    ),\r\n    _setDefaultOptions(newDefaultOptions) {\r\n      assignDeep(defaultDefaultOptions, newDefaultOptions);\r\n    },\r\n    _defaultInitializationStrategy: assignDeep({}, initializationStrategy),\r\n    _defaultDefaultOptions: assignDeep({}, defaultDefaultOptions),\r\n  };\r\n\r\n  removeAttr(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  if (!nativeScrollbarStyling && (!nativeScrollbarIsOverlaid.x || !nativeScrollbarIsOverlaid.y)) {\r\n    let size = windowSize();\r\n    let dpr = getWindowDPR();\r\n\r\n    window.addEventListener('resize', () => {\r\n      const sizeNew = windowSize();\r\n      const deltaSize = {\r\n        w: sizeNew.w - size.w,\r\n        h: sizeNew.h - size.h,\r\n      };\r\n\r\n      if (deltaSize.w === 0 && deltaSize.h === 0) return;\r\n\r\n      const deltaAbsSize = {\r\n        w: abs(deltaSize.w),\r\n        h: abs(deltaSize.h),\r\n      };\r\n      const deltaAbsRatio = {\r\n        w: abs(round(sizeNew.w / (size.w / 100.0))),\r\n        h: abs(round(sizeNew.h / (size.h / 100.0))),\r\n      };\r\n      const dprNew = getWindowDPR();\r\n      const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n      const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n      const dprChanged = dprNew !== dpr && dpr > 0;\r\n      const isZoom = deltaIsBigger && difference && dprChanged;\r\n\r\n      if (isZoom) {\r\n        const [scrollbarSize, scrollbarSizeChanged] = updateNativeScrollbarSizeCache(\r\n          getNativeScrollbarSize(body, envElm, envChildElm)\r\n        );\r\n\r\n        assignDeep(environmentInstance._nativeScrollbarSize, scrollbarSize); // keep the object same!\r\n        removeElements(envElm);\r\n\r\n        if (scrollbarSizeChanged) {\r\n          triggerEvent('_');\r\n        }\r\n      }\r\n\r\n      size = sizeNew;\r\n      dpr = dprNew;\r\n    });\r\n  }\r\n\r\n  return env;\r\n};\r\n\r\nexport const getEnvironment = (): Environment => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  is,\r\n  createDiv,\r\n  contents,\r\n  insertAfter,\r\n  addClass,\r\n  parent,\r\n  indexOf,\r\n  removeElements,\r\n  removeClass,\r\n  hasClass,\r\n  push,\r\n  runEach,\r\n  insertBefore,\r\n  attr,\r\n  isBoolean,\r\n  isFunction,\r\n  keys,\r\n  removeAttr,\r\n  attrClass,\r\n  hasAttrClass,\r\n  ResizeObserverConstructor,\r\n} from 'support';\r\nimport {\r\n  dataAttributeHost,\r\n  dataAttributeHostOverflowX,\r\n  dataAttributeHostOverflowY,\r\n  classNamePadding,\r\n  classNameViewport,\r\n  classNameViewportArrange,\r\n  classNameContent,\r\n  classNameViewportScrollbarStyling,\r\n} from 'classnames';\r\nimport {\r\n  getEnvironment,\r\n  StructureInitializationStrategyStaticElement,\r\n  StructureInitializationStrategyDynamicElement,\r\n} from 'environment';\r\nimport { OSTarget, OSTargetElement, StructureInitialization } from 'typings';\r\n\r\nexport type StructureSetupElements = [targetObj: StructureSetupElementsObj, destroy: () => void];\r\n\r\nexport interface StructureSetupElementsObj {\r\n  _target: OSTargetElement;\r\n  _host: HTMLElement;\r\n  _viewport: HTMLElement;\r\n  _padding: HTMLElement | false;\r\n  _content: HTMLElement | false;\r\n  _viewportArrange: HTMLStyleElement | false;\r\n  // ctx ----\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _htmlElm: HTMLHtmlElement;\r\n  _bodyElm: HTMLBodyElement;\r\n  _windowElm: Window;\r\n  _documentElm: Document;\r\n  _targetIsElm: boolean;\r\n  _viewportIsTarget: boolean;\r\n  _viewportHasClass: (className: string, attributeClassName: string) => boolean;\r\n  _viewportAddRemoveClass: (className: string, attributeClassName: string, add?: boolean) => void;\r\n}\r\n\r\nlet contentArrangeCounter = 0;\r\n\r\nconst unwrap = (elm: HTMLElement | false | null | undefined) => {\r\n  appendChildren(parent(elm), contents(elm));\r\n  removeElements(elm);\r\n};\r\n\r\nconst createUniqueViewportArrangeElement = (): HTMLStyleElement | false => {\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _cssCustomProperties } =\r\n    getEnvironment();\r\n  /* istanbul ignore next */\r\n  const create =\r\n    !_cssCustomProperties &&\r\n    !_nativeScrollbarStyling &&\r\n    (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n  const result = create ? document.createElement('style') : false;\r\n\r\n  if (result) {\r\n    attr(result, 'id', `${classNameViewportArrange}-${contentArrangeCounter}`);\r\n    contentArrangeCounter++;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst staticCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue?: HTMLElement | undefined,\r\n  strategy?: StructureInitializationStrategyStaticElement\r\n): HTMLElement => {\r\n  const result =\r\n    initializationValue ||\r\n    (isFunction(strategy) ? strategy(target) : (strategy as null | undefined));\r\n  return result || createDiv();\r\n};\r\n\r\nconst dynamicCreationFromStrategy = (\r\n  target: OSTargetElement,\r\n  initializationValue: HTMLElement | boolean | undefined,\r\n  strategy: StructureInitializationStrategyDynamicElement\r\n): HTMLElement | false => {\r\n  const takeInitializationValue = isBoolean(initializationValue) || initializationValue;\r\n  const result = takeInitializationValue\r\n    ? (initializationValue as boolean | HTMLElement)\r\n    : isFunction(strategy)\r\n    ? strategy(target)\r\n    : strategy;\r\n\r\n  return result === true ? createDiv() : result;\r\n};\r\n\r\nconst addDataAttrHost = (elm: HTMLElement, value?: string | false | null | undefined) => {\r\n  attr(elm, dataAttributeHost, value || '');\r\n  return removeAttr.bind(0, elm, dataAttributeHost);\r\n};\r\n\r\nexport const createStructureSetupElements = (target: OSTarget): StructureSetupElements => {\r\n  const { _getInitializationStrategy, _nativeScrollbarStyling } = getEnvironment();\r\n  const {\r\n    _host: hostInitializationStrategy,\r\n    _viewport: viewportInitializationStrategy,\r\n    _padding: paddingInitializationStrategy,\r\n    _content: contentInitializationStrategy,\r\n  } = _getInitializationStrategy();\r\n  const targetIsElm = isHTMLElement(target);\r\n  const targetStructureInitialization = target as StructureInitialization;\r\n  const targetElement = targetIsElm\r\n    ? (target as OSTargetElement)\r\n    : targetStructureInitialization.target;\r\n  const isTextarea = is(targetElement, 'textarea');\r\n  const isBody = !isTextarea && is(targetElement, 'body');\r\n  const ownerDocument = targetElement!.ownerDocument;\r\n  const bodyElm = ownerDocument.body as HTMLBodyElement;\r\n  const wnd = ownerDocument.defaultView as Window;\r\n  const singleElmSupport = !!ResizeObserverConstructor && _nativeScrollbarStyling;\r\n  const potentialViewportElement = staticCreationFromStrategy(\r\n    targetElement,\r\n    targetStructureInitialization.viewport,\r\n    viewportInitializationStrategy\r\n  );\r\n  const potentiallySingleElm = potentialViewportElement === targetElement;\r\n  const viewportIsTarget = singleElmSupport && potentiallySingleElm;\r\n  const viewportElement =\r\n    potentiallySingleElm && !viewportIsTarget\r\n      ? staticCreationFromStrategy(targetElement)\r\n      : potentialViewportElement;\r\n  const evaluatedTargetObj: StructureSetupElementsObj = {\r\n    _target: targetElement,\r\n    _host: isTextarea\r\n      ? staticCreationFromStrategy(\r\n          targetElement,\r\n          targetStructureInitialization.host,\r\n          hostInitializationStrategy\r\n        )\r\n      : (targetElement as HTMLElement),\r\n    _viewport: viewportElement,\r\n    _padding: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.padding,\r\n      paddingInitializationStrategy\r\n    ),\r\n    _content: dynamicCreationFromStrategy(\r\n      targetElement,\r\n      targetStructureInitialization.content,\r\n      contentInitializationStrategy\r\n    ),\r\n    _viewportArrange: !viewportIsTarget && createUniqueViewportArrangeElement(),\r\n    _windowElm: wnd,\r\n    _documentElm: ownerDocument,\r\n    _htmlElm: parent(bodyElm) as HTMLHtmlElement,\r\n    _bodyElm: bodyElm,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n    _targetIsElm: targetIsElm,\r\n    _viewportIsTarget: viewportIsTarget,\r\n    _viewportHasClass: (className: string, attributeClassName: string) =>\r\n      viewportIsTarget\r\n        ? hasAttrClass(viewportElement, dataAttributeHost, attributeClassName)\r\n        : hasClass(viewportElement, className),\r\n    _viewportAddRemoveClass: (className: string, attributeClassName: string, add?: boolean) =>\r\n      viewportIsTarget\r\n        ? attrClass(viewportElement, dataAttributeHost, attributeClassName, add)\r\n        : (add ? addClass : removeClass)(viewportElement, className),\r\n  };\r\n  const generatedElements = keys(evaluatedTargetObj).reduce((arr, key: string) => {\r\n    const value = evaluatedTargetObj[key];\r\n    return push(arr, value && !parent(value) ? value : false);\r\n  }, [] as HTMLElement[]);\r\n  const elementIsGenerated = (elm: HTMLElement | false) =>\r\n    elm ? indexOf(generatedElements, elm) > -1 : null;\r\n  const { _target, _host, _padding, _viewport, _content, _viewportArrange } = evaluatedTargetObj;\r\n  const destroyFns: (() => any)[] = [];\r\n  const isTextareaHostGenerated = isTextarea && elementIsGenerated(_host);\r\n  const targetContents = isTextarea\r\n    ? _target\r\n    : contents(\r\n        [_content, _viewport, _padding, _host, _target].find(\r\n          (elm) => elementIsGenerated(elm) === false\r\n        )\r\n      );\r\n  const contentSlot = _content || _viewport;\r\n  const removeHostDataAttr = addDataAttrHost(_host, viewportIsTarget ? 'viewport' : 'host');\r\n  const removePaddingClass = addClass(_padding, classNamePadding);\r\n  const removeViewportClass = addClass(_viewport, !viewportIsTarget && classNameViewport);\r\n  const removeContentClass = addClass(_content, classNameContent);\r\n\r\n  // only insert host for textarea after target if it was generated\r\n  if (isTextareaHostGenerated) {\r\n    insertAfter(_target, _host);\r\n\r\n    push(destroyFns, () => {\r\n      insertAfter(_host, _target);\r\n      removeElements(_host);\r\n    });\r\n  }\r\n\r\n  appendChildren(contentSlot, targetContents);\r\n  appendChildren(_host, _padding);\r\n  appendChildren(_padding || _host, !viewportIsTarget && _viewport);\r\n  appendChildren(_viewport, _content);\r\n\r\n  push(destroyFns, () => {\r\n    removeHostDataAttr();\r\n    removeAttr(_viewport, dataAttributeHostOverflowX);\r\n    removeAttr(_viewport, dataAttributeHostOverflowY);\r\n\r\n    if (elementIsGenerated(_content)) {\r\n      unwrap(_content);\r\n    }\r\n    if (elementIsGenerated(_viewport)) {\r\n      unwrap(_viewport);\r\n    }\r\n    if (elementIsGenerated(_padding)) {\r\n      unwrap(_padding);\r\n    }\r\n    removePaddingClass();\r\n    removeViewportClass();\r\n    removeContentClass();\r\n  });\r\n\r\n  if (_nativeScrollbarStyling && !viewportIsTarget) {\r\n    push(destroyFns, removeClass.bind(0, _viewport, classNameViewportScrollbarStyling));\r\n  }\r\n  if (_viewportArrange) {\r\n    insertBefore(_viewport, _viewportArrange);\r\n    push(destroyFns, removeElements.bind(0, _viewportArrange));\r\n  }\r\n\r\n  return [evaluatedTargetObj, runEach.bind(0, destroyFns)];\r\n};\r\n","import { style } from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the trinsic behavior of the content element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createTrinsicUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const { _content } = structureSetupElements;\r\n  const [getState] = state;\r\n\r\n  return (updateHints) => {\r\n    const { _flexboxGlue } = getEnvironment();\r\n    const { _heightIntrinsic } = getState();\r\n    const { _heightIntrinsicChanged } = updateHints;\r\n    const heightIntrinsicChanged = (_content || !_flexboxGlue) && _heightIntrinsicChanged;\r\n\r\n    if (heightIntrinsicChanged) {\r\n      style(_content, {\r\n        height: _heightIntrinsic ? '' : '100%',\r\n      });\r\n    }\r\n\r\n    return {\r\n      _sizeChanged: heightIntrinsicChanged,\r\n      _contentMutation: heightIntrinsicChanged,\r\n    };\r\n  };\r\n};\r\n","import { createCache, topRightBottomLeft, equalTRBL, style, assignDeep } from 'support';\r\nimport { StyleObject } from 'typings';\r\nimport { getEnvironment } from 'environment';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the padding styling of the padding and viewport element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createPaddingUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const [getState, setState] = state;\r\n  const { _host, _padding, _viewport, _viewportIsTarget: _isSingleElm } = structureSetupElements;\r\n  const [updatePaddingCache, currentPaddingCache] = createCache(\r\n    {\r\n      _equal: equalTRBL,\r\n      _initialValue: topRightBottomLeft(),\r\n    },\r\n    topRightBottomLeft.bind(0, _host, 'padding', '')\r\n  );\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    let [padding, paddingChanged] = currentPaddingCache(force);\r\n    const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n    const { _directionIsRTL } = getState();\r\n    const { _sizeChanged, _contentMutation, _directionChanged } = updateHints;\r\n    const [paddingAbsolute, paddingAbsoluteChanged] = checkOption('paddingAbsolute');\r\n    const contentMutation = !_flexboxGlue && _contentMutation;\r\n\r\n    if (_sizeChanged || paddingChanged || contentMutation) {\r\n      [padding, paddingChanged] = updatePaddingCache(force);\r\n    }\r\n\r\n    const paddingStyleChanged =\r\n      !_isSingleElm && (paddingAbsoluteChanged || _directionChanged || paddingChanged);\r\n\r\n    if (paddingStyleChanged) {\r\n      // if there is no padding element and no scrollbar styling, paddingAbsolute isn't supported\r\n      const paddingRelative = !paddingAbsolute || (!_padding && !_nativeScrollbarStyling);\r\n      const paddingHorizontal = padding.r + padding.l;\r\n      const paddingVertical = padding.t + padding.b;\r\n\r\n      const paddingStyle: StyleObject = {\r\n        marginRight: paddingRelative && !_directionIsRTL ? -paddingHorizontal : 0,\r\n        marginBottom: paddingRelative ? -paddingVertical : 0,\r\n        marginLeft: paddingRelative && _directionIsRTL ? -paddingHorizontal : 0,\r\n        top: paddingRelative ? -padding.t : 0,\r\n        right: paddingRelative ? (_directionIsRTL ? -padding.r : 'auto') : 0,\r\n        left: paddingRelative ? (_directionIsRTL ? 'auto' : -padding.l) : 0,\r\n        width: paddingRelative ? `calc(100% + ${paddingHorizontal}px)` : '',\r\n      };\r\n      const viewportStyle: StyleObject = {\r\n        paddingTop: paddingRelative ? padding.t : 0,\r\n        paddingRight: paddingRelative ? padding.r : 0,\r\n        paddingBottom: paddingRelative ? padding.b : 0,\r\n        paddingLeft: paddingRelative ? padding.l : 0,\r\n      };\r\n\r\n      // if there is no padding element apply the style to the viewport element instead\r\n      style(_padding || _viewport, paddingStyle);\r\n      style(_viewport, viewportStyle);\r\n\r\n      setState({\r\n        _padding: padding,\r\n        _paddingAbsolute: !paddingRelative,\r\n        _viewportPaddingStyle: _padding\r\n          ? viewportStyle\r\n          : assignDeep({}, paddingStyle, viewportStyle),\r\n      });\r\n    }\r\n\r\n    return {\r\n      _paddingStyleChanged: paddingStyleChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  keys,\r\n  attr,\r\n  WH,\r\n  XY,\r\n  style,\r\n  scrollSize,\r\n  fractionalSize,\r\n  equalWH,\r\n  addClass,\r\n  removeClass,\r\n  clientSize,\r\n  noop,\r\n  each,\r\n  equalXY,\r\n  attrClass,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameViewportArrange,\r\n  classNameViewportScrollbarStyling,\r\n  classNameOverflowVisible,\r\n  dataAttributeHost,\r\n  dataAttributeHostOverflowX,\r\n  dataAttributeHostOverflowY,\r\n  dataValueHostViewportScrollbarStyling,\r\n  dataValueHostOverflowVisible,\r\n} from 'classnames';\r\nimport type { StyleObject, OverflowStyle } from 'typings';\r\nimport type { OverflowBehavior } from 'options';\r\nimport type { CreateStructureUpdateSegment } from 'setups/structureSetup/structureSetup.update';\r\n\r\ninterface ViewportOverflowState {\r\n  _scrollbarsHideOffset: XY<number>;\r\n  _scrollbarsHideOffsetArrange: XY<boolean>;\r\n  _overflowScroll: XY<boolean>;\r\n  _overflowStyle: XY<OverflowStyle>;\r\n}\r\n\r\ntype UndoViewportArrangeResult = [\r\n  redoViewportArrange: () => void,\r\n  overflowState?: ViewportOverflowState\r\n];\r\n\r\nconst { max } = Math;\r\nconst strVisible = 'visible';\r\nconst strHidden = 'hidden';\r\nconst overlaidScrollbarsHideOffset = 42;\r\nconst whCacheOptions = {\r\n  _equal: equalWH,\r\n  _initialValue: { w: 0, h: 0 },\r\n};\r\nconst xyCacheOptions = {\r\n  _equal: equalXY,\r\n  _initialValue: { x: strHidden, y: strHidden } as XY<OverflowStyle>,\r\n};\r\n\r\nconst getOverflowAmount = (\r\n  viewportScrollSize: WH<number>,\r\n  viewportClientSize: WH<number>,\r\n  sizeFraction: WH<number>\r\n) => {\r\n  const tollerance = window.devicePixelRatio % 1 !== 0 ? 1 : 0;\r\n  const amount = {\r\n    w: max(0, viewportScrollSize.w - viewportClientSize.w - max(0, sizeFraction.w)),\r\n    h: max(0, viewportScrollSize.h - viewportClientSize.h - max(0, sizeFraction.h)),\r\n  };\r\n\r\n  return {\r\n    w: amount.w > tollerance ? amount.w : 0,\r\n    h: amount.h > tollerance ? amount.h : 0,\r\n  };\r\n};\r\n\r\nconst conditionalClass = (\r\n  elm: Element | false | null | undefined,\r\n  classNames: string,\r\n  add: boolean\r\n) => (add ? addClass(elm, classNames) : removeClass(elm, classNames));\r\n\r\nconst overflowIsVisible = (overflowBehavior: string) => overflowBehavior.indexOf(strVisible) === 0;\r\n\r\n/**\r\n * Lifecycle with the responsibility to set the correct overflow and scrollbar hiding styles of the viewport element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createOverflowUpdate: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  state\r\n) => {\r\n  const [getState, setState] = state;\r\n  const {\r\n    _host,\r\n    _padding,\r\n    _viewport,\r\n    _viewportArrange,\r\n    _viewportIsTarget,\r\n    _viewportAddRemoveClass,\r\n  } = structureSetupElements;\r\n  const {\r\n    _nativeScrollbarSize,\r\n    _flexboxGlue,\r\n    _nativeScrollbarStyling,\r\n    _nativeScrollbarIsOverlaid,\r\n  } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_viewportIsTarget &&\r\n    !_nativeScrollbarStyling &&\r\n    (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n\r\n  const [updateSizeFraction, getCurrentSizeFraction] = createCache<WH<number>>(\r\n    whCacheOptions,\r\n    fractionalSize.bind(0, _viewport)\r\n  );\r\n\r\n  const [updateViewportScrollSizeCache, getCurrentViewportScrollSizeCache] = createCache<\r\n    WH<number>\r\n  >(whCacheOptions, scrollSize.bind(0, _viewport));\r\n\r\n  const [updateOverflowAmountCache, getCurrentOverflowAmountCache] =\r\n    createCache<WH<number>>(whCacheOptions);\r\n\r\n  const [updateOverflowStyleCache] = createCache<XY<OverflowStyle>>(xyCacheOptions);\r\n\r\n  /**\r\n   * Applies a fixed height to the viewport so it can't overflow or underflow the host element.\r\n   * @param viewportOverflowState The current overflow state.\r\n   * @param heightIntrinsic Whether the host height is intrinsic or not.\r\n   */\r\n  const fixFlexboxGlue = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    heightIntrinsic: boolean\r\n  ) => {\r\n    style(_viewport, {\r\n      height: '',\r\n    });\r\n\r\n    if (heightIntrinsic) {\r\n      const { _paddingAbsolute, _padding: padding } = getState();\r\n      const { _overflowScroll, _scrollbarsHideOffset } = viewportOverflowState;\r\n      const fSize = fractionalSize(_host);\r\n      const hostClientSize = clientSize(_host);\r\n\r\n      // padding subtraction is only needed if padding is absolute or if viewport is content-box\r\n      const isContentBox = style(_viewport, 'boxSizing') === 'content-box';\r\n      const paddingVertical = _paddingAbsolute || isContentBox ? padding.b + padding.t : 0;\r\n      const subtractXScrollbar = !(_nativeScrollbarIsOverlaid.x && isContentBox);\r\n\r\n      style(_viewport, {\r\n        height:\r\n          hostClientSize.h +\r\n          fSize.h +\r\n          (_overflowScroll.x && subtractXScrollbar ? _scrollbarsHideOffset.x : 0) -\r\n          paddingVertical,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the current overflow state of the viewport.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param viewportStyleObj The viewport style object where the overflow scroll property can be read of, or undefined if shall be determined.\r\n   * @returns A object which contains informations about the current overflow state.\r\n   */\r\n  const getViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    viewportStyleObj?: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const arrangeHideOffset =\r\n      !_nativeScrollbarStyling && !showNativeOverlaidScrollbars ? overlaidScrollbarsHideOffset : 0;\r\n    const getStatePerAxis = (\r\n      styleKey: string,\r\n      isOverlaid: boolean,\r\n      nativeScrollbarSize: number\r\n    ) => {\r\n      const overflowStyle = style(_viewport, styleKey);\r\n      // can't do something like \"viewportStyleObj && viewportStyleObj[styleKey] || overflowStyle\" here!\r\n      const objectPrefferedOverflowStyle = viewportStyleObj\r\n        ? viewportStyleObj[styleKey]\r\n        : overflowStyle;\r\n      const overflowScroll = objectPrefferedOverflowStyle === 'scroll';\r\n      const nonScrollbarStylingHideOffset = isOverlaid ? arrangeHideOffset : nativeScrollbarSize;\r\n      const scrollbarsHideOffset =\r\n        overflowScroll && !_nativeScrollbarStyling ? nonScrollbarStylingHideOffset : 0;\r\n      const scrollbarsHideOffsetArrange = isOverlaid && !!arrangeHideOffset;\r\n\r\n      return [overflowStyle, overflowScroll, scrollbarsHideOffset, scrollbarsHideOffsetArrange] as [\r\n        overflowStyle: OverflowStyle,\r\n        overflowScroll: boolean,\r\n        scrollbarsHideOffset: number,\r\n        scrollbarsHideOffsetArrange: boolean\r\n      ];\r\n    };\r\n\r\n    const [xOverflowStyle, xOverflowScroll, xScrollbarsHideOffset, xScrollbarsHideOffsetArrange] =\r\n      getStatePerAxis('overflowX', _nativeScrollbarIsOverlaid.x, _nativeScrollbarSize.x);\r\n    const [yOverflowStyle, yOverflowScroll, yScrollbarsHideOffset, yScrollbarsHideOffsetArrange] =\r\n      getStatePerAxis('overflowY', _nativeScrollbarIsOverlaid.y, _nativeScrollbarSize.y);\r\n\r\n    return {\r\n      _overflowStyle: {\r\n        x: xOverflowStyle,\r\n        y: yOverflowStyle,\r\n      },\r\n      _overflowScroll: {\r\n        x: xOverflowScroll,\r\n        y: yOverflowScroll,\r\n      },\r\n      _scrollbarsHideOffset: {\r\n        x: xScrollbarsHideOffset,\r\n        y: yScrollbarsHideOffset,\r\n      },\r\n      _scrollbarsHideOffsetArrange: {\r\n        x: xScrollbarsHideOffsetArrange,\r\n        y: yScrollbarsHideOffsetArrange,\r\n      },\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Sets the overflow property of the viewport and calculates the a overflow state according to the new parameters.\r\n   * @param showNativeOverlaidScrollbars Whether to show natively overlaid scrollbars.\r\n   * @param overflowAmount The overflow amount.\r\n   * @param overflow The overflow behavior according to the options.\r\n   * @param viewportStyleObj The viewport style object to which the overflow style shall be applied.\r\n   * @returns A object which represents the newly set overflow state.\r\n   */\r\n  const setViewportOverflowState = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    hasOverflow: XY<boolean>,\r\n    overflowOption: XY<OverflowBehavior>,\r\n    viewportStyleObj: StyleObject\r\n  ): ViewportOverflowState => {\r\n    const setAxisOverflowStyle = (behavior: OverflowBehavior, hasOverflowAxis: boolean) => {\r\n      const overflowVisible = overflowIsVisible(behavior);\r\n      const overflowVisibleBehavior =\r\n        (hasOverflowAxis && overflowVisible && behavior.replace(`${strVisible}-`, '')) || '';\r\n      return [\r\n        hasOverflowAxis && !overflowVisible ? behavior : '',\r\n        overflowIsVisible(overflowVisibleBehavior) ? 'hidden' : overflowVisibleBehavior,\r\n      ];\r\n    };\r\n\r\n    const [overflowX, visibleBehaviorX] = setAxisOverflowStyle(overflowOption.x, hasOverflow.x);\r\n    const [overflowY, visibleBehaviorY] = setAxisOverflowStyle(overflowOption.y, hasOverflow.y);\r\n\r\n    viewportStyleObj.overflowX = visibleBehaviorX && overflowY ? visibleBehaviorX : overflowX;\r\n    viewportStyleObj.overflowY = visibleBehaviorY && overflowX ? visibleBehaviorY : overflowY;\r\n\r\n    return getViewportOverflowState(showNativeOverlaidScrollbars, viewportStyleObj);\r\n  };\r\n\r\n  /**\r\n   * Sets the styles of the viewport arrange element.\r\n   * @param viewportOverflowState The viewport overflow state according to which the scrollbars shall be hidden.\r\n   * @param viewportScrollSize The content scroll size.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @returns A boolean which indicates whether the viewport arrange element was adjusted.\r\n   */\r\n  const arrangeViewport = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    viewportScrollSize: WH<number>,\r\n    sizeFraction: WH<number>,\r\n    directionIsRTL: boolean\r\n  ) => {\r\n    if (doViewportArrange) {\r\n      const { _viewportPaddingStyle } = getState();\r\n      const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n      const viewportArrangeHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n        ? 'paddingRight'\r\n        : 'paddingLeft';\r\n      const viewportArrangeHorizontalPaddingValue = _viewportPaddingStyle[\r\n        viewportArrangeHorizontalPaddingKey\r\n      ] as number;\r\n      const viewportArrangeVerticalPaddingValue = _viewportPaddingStyle.paddingTop as number;\r\n      const fractionalContentWidth = viewportScrollSize.w + sizeFraction.w;\r\n      const fractionalContenHeight = viewportScrollSize.h + sizeFraction.h;\r\n      const arrangeSize = {\r\n        w:\r\n          hideOffsetY && arrangeY\r\n            ? `${hideOffsetY + fractionalContentWidth - viewportArrangeHorizontalPaddingValue}px`\r\n            : '',\r\n        h:\r\n          hideOffsetX && arrangeX\r\n            ? `${hideOffsetX + fractionalContenHeight - viewportArrangeVerticalPaddingValue}px`\r\n            : '',\r\n      };\r\n\r\n      // adjust content arrange / before element\r\n      if (_viewportArrange) {\r\n        const { sheet } = _viewportArrange;\r\n        if (sheet) {\r\n          const { cssRules } = sheet;\r\n          if (cssRules) {\r\n            if (!cssRules.length) {\r\n              sheet.insertRule(\r\n                `#${attr(_viewportArrange, 'id')} + .${classNameViewportArrange}::before {}`,\r\n                0\r\n              );\r\n            }\r\n\r\n            // @ts-ignore\r\n            const ruleStyle = cssRules[0].style;\r\n\r\n            ruleStyle.width = arrangeSize.w;\r\n            ruleStyle.height = arrangeSize.h;\r\n          }\r\n        }\r\n      } else {\r\n        style<'--os-vaw' | '--os-vah'>(_viewport, {\r\n          '--os-vaw': arrangeSize.w,\r\n          '--os-vah': arrangeSize.h,\r\n        });\r\n      }\r\n    }\r\n\r\n    return doViewportArrange;\r\n  };\r\n\r\n  /**\r\n   * Hides the native scrollbars according to the passed parameters.\r\n   * @param viewportOverflowState The viewport overflow state.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportArrange Whether special styles related to the viewport arrange strategy shall be applied.\r\n   * @param viewportStyleObj The viewport style object to which the needed styles shall be applied.\r\n   */\r\n  const hideNativeScrollbars = (\r\n    viewportOverflowState: ViewportOverflowState,\r\n    directionIsRTL: boolean,\r\n    viewportArrange: boolean,\r\n    viewportStyleObj: StyleObject\r\n  ) => {\r\n    const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } = viewportOverflowState;\r\n    const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n    const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n    const { _viewportPaddingStyle: viewportPaddingStyle } = getState();\r\n    const horizontalMarginKey: keyof StyleObject = directionIsRTL ? 'marginLeft' : 'marginRight';\r\n    const viewportHorizontalPaddingKey: keyof StyleObject = directionIsRTL\r\n      ? 'paddingLeft'\r\n      : 'paddingRight';\r\n    const horizontalMarginValue = viewportPaddingStyle[horizontalMarginKey] as number;\r\n    const verticalMarginValue = viewportPaddingStyle.marginBottom as number;\r\n    const horizontalPaddingValue = viewportPaddingStyle[viewportHorizontalPaddingKey] as number;\r\n    const verticalPaddingValue = viewportPaddingStyle.paddingBottom as number;\r\n\r\n    // horizontal\r\n    viewportStyleObj.width = `calc(100% + ${hideOffsetY + horizontalMarginValue * -1}px)`;\r\n    viewportStyleObj[horizontalMarginKey] = -hideOffsetY + horizontalMarginValue;\r\n\r\n    // vertical\r\n    viewportStyleObj.marginBottom = -hideOffsetX + verticalMarginValue;\r\n\r\n    // viewport arrange additional styles\r\n    if (viewportArrange) {\r\n      viewportStyleObj[viewportHorizontalPaddingKey] =\r\n        horizontalPaddingValue + (arrangeY ? hideOffsetY : 0);\r\n      viewportStyleObj.paddingBottom = verticalPaddingValue + (arrangeX ? hideOffsetX : 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes all styles applied because of the viewport arrange strategy.\r\n   * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n   * @param directionIsRTL Whether the direction is RTL or not.\r\n   * @param viewportOverflowState The currentviewport overflow state or undefined if it has to be determined.\r\n   * @returns A object with a function which applies all the removed styles and the determined viewport vverflow state.\r\n   */\r\n  const undoViewportArrange = (\r\n    showNativeOverlaidScrollbars: boolean,\r\n    directionIsRTL: boolean,\r\n    viewportOverflowState?: ViewportOverflowState\r\n  ): UndoViewportArrangeResult => {\r\n    if (doViewportArrange) {\r\n      const finalViewportOverflowState =\r\n        viewportOverflowState || getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      const { _viewportPaddingStyle: viewportPaddingStyle } = getState();\r\n      const { _scrollbarsHideOffsetArrange } = finalViewportOverflowState;\r\n      const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n      const finalPaddingStyle: StyleObject = {};\r\n      const assignProps = (props: string) =>\r\n        each(props.split(' '), (prop) => {\r\n          finalPaddingStyle[prop] = viewportPaddingStyle[prop];\r\n        });\r\n\r\n      if (arrangeX) {\r\n        assignProps('marginBottom paddingTop paddingBottom');\r\n      }\r\n\r\n      if (arrangeY) {\r\n        assignProps('marginLeft marginRight paddingLeft paddingRight');\r\n      }\r\n\r\n      const prevStyle = style(_viewport, keys(finalPaddingStyle));\r\n\r\n      removeClass(_viewport, classNameViewportArrange);\r\n\r\n      if (!_flexboxGlue) {\r\n        finalPaddingStyle.height = '';\r\n      }\r\n\r\n      style(_viewport, finalPaddingStyle);\r\n\r\n      return [\r\n        () => {\r\n          hideNativeScrollbars(\r\n            finalViewportOverflowState,\r\n            directionIsRTL,\r\n            doViewportArrange,\r\n            prevStyle\r\n          );\r\n          style(_viewport, prevStyle);\r\n          addClass(_viewport, classNameViewportArrange);\r\n        },\r\n        finalViewportOverflowState,\r\n      ];\r\n    }\r\n    return [noop];\r\n  };\r\n\r\n  return (updateHints, checkOption, force) => {\r\n    const {\r\n      _sizeChanged,\r\n      _hostMutation,\r\n      _contentMutation,\r\n      _paddingStyleChanged,\r\n      _heightIntrinsicChanged,\r\n      _directionChanged,\r\n    } = updateHints;\r\n    const { _heightIntrinsic, _directionIsRTL } = getState();\r\n    const [showNativeOverlaidScrollbarsOption, showNativeOverlaidScrollbarsChanged] =\r\n      checkOption<boolean>('nativeScrollbarsOverlaid.show');\r\n    const [overflow, overflowChanged] = checkOption<XY<OverflowBehavior>>('overflow');\r\n\r\n    const showNativeOverlaidScrollbars =\r\n      showNativeOverlaidScrollbarsOption &&\r\n      _nativeScrollbarIsOverlaid.x &&\r\n      _nativeScrollbarIsOverlaid.y;\r\n    const adjustFlexboxGlue =\r\n      !_viewportIsTarget &&\r\n      !_flexboxGlue &&\r\n      (_sizeChanged ||\r\n        _contentMutation ||\r\n        _hostMutation ||\r\n        showNativeOverlaidScrollbarsChanged ||\r\n        _heightIntrinsicChanged);\r\n    const overflowXVisible = overflowIsVisible(overflow.x);\r\n    const overflowYVisible = overflowIsVisible(overflow.y);\r\n    const overflowVisible = overflowXVisible || overflowYVisible;\r\n\r\n    let sizeFractionCache = getCurrentSizeFraction(force);\r\n    let viewportScrollSizeCache = getCurrentViewportScrollSizeCache(force);\r\n    let overflowAmuntCache = getCurrentOverflowAmountCache(force);\r\n\r\n    let preMeasureViewportOverflowState: ViewportOverflowState | undefined;\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarStyling) {\r\n      _viewportAddRemoveClass(\r\n        classNameViewportScrollbarStyling,\r\n        dataValueHostViewportScrollbarStyling,\r\n        !showNativeOverlaidScrollbars\r\n      );\r\n    }\r\n\r\n    if (adjustFlexboxGlue) {\r\n      preMeasureViewportOverflowState = getViewportOverflowState(showNativeOverlaidScrollbars);\r\n      fixFlexboxGlue(preMeasureViewportOverflowState, _heightIntrinsic);\r\n    }\r\n\r\n    if (\r\n      _sizeChanged ||\r\n      _paddingStyleChanged ||\r\n      _contentMutation ||\r\n      _directionChanged ||\r\n      showNativeOverlaidScrollbarsChanged\r\n    ) {\r\n      if (overflowVisible) {\r\n        _viewportAddRemoveClass(classNameOverflowVisible, dataValueHostOverflowVisible, false);\r\n      }\r\n\r\n      const [redoViewportArrange, undoViewportArrangeOverflowState] = undoViewportArrange(\r\n        showNativeOverlaidScrollbars,\r\n        _directionIsRTL,\r\n        preMeasureViewportOverflowState\r\n      );\r\n      const [sizeFraction, sizeFractionChanged] = (sizeFractionCache = updateSizeFraction(force));\r\n      const [viewportScrollSize, viewportScrollSizeChanged] = (viewportScrollSizeCache =\r\n        updateViewportScrollSizeCache(force));\r\n      const viewportclientSize = clientSize(_viewport);\r\n      let arrangedViewportScrollSize = viewportScrollSize;\r\n      let arrangedViewportClientSize = viewportclientSize;\r\n\r\n      redoViewportArrange();\r\n\r\n      // if re measure is required (only required if content arrange strategy is used)\r\n      if (\r\n        (viewportScrollSizeChanged || sizeFractionChanged || showNativeOverlaidScrollbarsChanged) &&\r\n        undoViewportArrangeOverflowState &&\r\n        !showNativeOverlaidScrollbars &&\r\n        arrangeViewport(\r\n          undoViewportArrangeOverflowState,\r\n          viewportScrollSize,\r\n          sizeFraction,\r\n          _directionIsRTL\r\n        )\r\n      ) {\r\n        arrangedViewportClientSize = clientSize(_viewport);\r\n        arrangedViewportScrollSize = scrollSize(_viewport);\r\n      }\r\n\r\n      overflowAmuntCache = updateOverflowAmountCache(\r\n        getOverflowAmount(\r\n          {\r\n            w: max(viewportScrollSize.w, arrangedViewportScrollSize.w),\r\n            h: max(viewportScrollSize.h, arrangedViewportScrollSize.h),\r\n          }, // scroll size\r\n          {\r\n            w: arrangedViewportClientSize.w + max(0, viewportclientSize.w - viewportScrollSize.w),\r\n            h: arrangedViewportClientSize.h + max(0, viewportclientSize.h - viewportScrollSize.h),\r\n          }, // client size\r\n          sizeFraction\r\n        ),\r\n        force\r\n      );\r\n    }\r\n\r\n    const [overflowAmount, overflowAmountChanged] = overflowAmuntCache;\r\n    const [viewportScrollSize, viewportScrollSizeChanged] = viewportScrollSizeCache;\r\n    const [sizeFraction, sizeFractionChanged] = sizeFractionCache;\r\n    const hasOverflow = {\r\n      x: overflowAmount.w > 0,\r\n      y: overflowAmount.h > 0,\r\n    };\r\n    const removeClipping =\r\n      (overflowXVisible && overflowYVisible && (hasOverflow.x || hasOverflow.y)) ||\r\n      (overflowXVisible && hasOverflow.x && !hasOverflow.y) ||\r\n      (overflowYVisible && hasOverflow.y && !hasOverflow.x);\r\n\r\n    if (\r\n      _paddingStyleChanged ||\r\n      _directionChanged ||\r\n      sizeFractionChanged ||\r\n      viewportScrollSizeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      adjustFlexboxGlue\r\n    ) {\r\n      const viewportStyle: StyleObject = {\r\n        marginRight: 0,\r\n        marginBottom: 0,\r\n        marginLeft: 0,\r\n        width: '',\r\n        overflowY: '',\r\n        overflowX: '',\r\n      };\r\n      const viewportOverflowState = setViewportOverflowState(\r\n        showNativeOverlaidScrollbars,\r\n        hasOverflow,\r\n        overflow,\r\n        viewportStyle\r\n      );\r\n      const viewportArranged = arrangeViewport(\r\n        viewportOverflowState,\r\n        viewportScrollSize,\r\n        sizeFraction,\r\n        _directionIsRTL\r\n      );\r\n\r\n      if (!_viewportIsTarget) {\r\n        hideNativeScrollbars(\r\n          viewportOverflowState,\r\n          _directionIsRTL,\r\n          viewportArranged,\r\n          viewportStyle\r\n        );\r\n      }\r\n\r\n      if (adjustFlexboxGlue) {\r\n        fixFlexboxGlue(viewportOverflowState, _heightIntrinsic);\r\n      }\r\n\r\n      if (_viewportIsTarget) {\r\n        attr(_host, dataAttributeHostOverflowX, viewportStyle.overflowX as string);\r\n        attr(_host, dataAttributeHostOverflowY, viewportStyle.overflowY as string);\r\n      } else {\r\n        style(_viewport, viewportStyle);\r\n      }\r\n    }\r\n\r\n    attrClass(_host, dataAttributeHost, dataValueHostOverflowVisible, removeClipping);\r\n    conditionalClass(_padding, classNameOverflowVisible, removeClipping);\r\n    !_viewportIsTarget && conditionalClass(_viewport, classNameOverflowVisible, overflowVisible);\r\n\r\n    const [overflowStyle, overflowStyleChanged] = updateOverflowStyleCache(\r\n      getViewportOverflowState(showNativeOverlaidScrollbars)._overflowStyle\r\n    );\r\n\r\n    setState({\r\n      _overflowStyle: overflowStyle,\r\n      _overflowAmount: {\r\n        x: overflowAmount.w,\r\n        y: overflowAmount.h,\r\n      },\r\n      _hasOverflow: hasOverflow,\r\n    });\r\n\r\n    return {\r\n      _overflowStyleChanged: overflowStyleChanged,\r\n      _overflowAmountChanged: overflowAmountChanged,\r\n    };\r\n  };\r\n};\r\n","import { each, isNumber, scrollLeft, scrollTop, assignDeep, keys } from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  createTrinsicUpdate,\r\n  createPaddingUpdate,\r\n  createOverflowUpdate,\r\n} from 'setups/structureSetup/updateSegments';\r\nimport type { SetupState, SetupUpdateSegment, SetupUpdateCheckOption } from 'setups';\r\nimport type { StructureSetupState } from 'setups/structureSetup';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\n\r\nexport type CreateStructureUpdateSegment = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>\r\n) => StructureSetupUpdateSegment;\r\n\r\nexport type StructureSetupUpdateSegment = SetupUpdateSegment<StructureSetupUpdateHints>;\r\n\r\nexport type StructureSetupUpdate = (\r\n  checkOption: SetupUpdateCheckOption,\r\n  updateHints: Partial<StructureSetupUpdateHints>,\r\n  force?: boolean\r\n) => StructureSetupUpdateHints;\r\n\r\nexport interface StructureSetupUpdateHints {\r\n  _sizeChanged: boolean;\r\n  _directionChanged: boolean;\r\n  _heightIntrinsicChanged: boolean;\r\n  _overflowAmountChanged: boolean;\r\n  _overflowStyleChanged: boolean;\r\n  _paddingStyleChanged: boolean;\r\n  _hostMutation: boolean;\r\n  _contentMutation: boolean;\r\n}\r\n\r\nconst prepareUpdateHints = <T extends StructureSetupUpdateHints>(\r\n  leading: Required<T>,\r\n  adaptive?: Partial<T>,\r\n  force?: boolean\r\n): Required<T> => {\r\n  const result = {};\r\n  const finalAdaptive = adaptive || {};\r\n  const objKeys = keys(leading).concat(keys(finalAdaptive));\r\n\r\n  each(objKeys, (key) => {\r\n    const leadingValue = leading[key];\r\n    const adaptiveValue = finalAdaptive[key];\r\n    result[key] = !!(force || leadingValue || adaptiveValue);\r\n  });\r\n\r\n  return result as Required<T>;\r\n};\r\n\r\nexport const createStructureSetupUpdate = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>\r\n): StructureSetupUpdate => {\r\n  const { _viewport } = structureSetupElements;\r\n  const { _nativeScrollbarStyling, _nativeScrollbarIsOverlaid, _flexboxGlue } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_nativeScrollbarStyling && (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y);\r\n\r\n  const updateSegments: StructureSetupUpdateSegment[] = [\r\n    createTrinsicUpdate(structureSetupElements, state),\r\n    createPaddingUpdate(structureSetupElements, state),\r\n    createOverflowUpdate(structureSetupElements, state),\r\n  ];\r\n\r\n  return (\r\n    checkOption: SetupUpdateCheckOption,\r\n    updateHints: Partial<StructureSetupUpdateHints>,\r\n    force?: boolean\r\n  ) => {\r\n    const initialUpdateHints = prepareUpdateHints(\r\n      assignDeep(\r\n        {\r\n          _sizeChanged: false,\r\n          _paddingStyleChanged: false,\r\n          _directionChanged: false,\r\n          _heightIntrinsicChanged: false,\r\n          _overflowAmountChanged: false,\r\n          _overflowStyleChanged: false,\r\n          _hostMutation: false,\r\n          _contentMutation: false,\r\n        },\r\n        updateHints\r\n      ),\r\n      {},\r\n      force\r\n    );\r\n    const adjustScrollOffset = doViewportArrange || !_flexboxGlue;\r\n    const scrollOffsetX = adjustScrollOffset && scrollLeft(_viewport);\r\n    const scrollOffsetY = adjustScrollOffset && scrollTop(_viewport);\r\n\r\n    let adaptivedUpdateHints: Required<StructureSetupUpdateHints> = initialUpdateHints;\r\n    each(updateSegments, (updateSegment) => {\r\n      adaptivedUpdateHints = prepareUpdateHints<StructureSetupUpdateHints>(\r\n        adaptivedUpdateHints,\r\n        updateSegment(adaptivedUpdateHints, checkOption, !!force) || {},\r\n        force\r\n      );\r\n    });\r\n\r\n    if (isNumber(scrollOffsetX)) {\r\n      scrollLeft(_viewport, scrollOffsetX);\r\n    }\r\n    if (isNumber(scrollOffsetY)) {\r\n      scrollTop(_viewport, scrollOffsetY);\r\n    }\r\n\r\n    return adaptivedUpdateHints;\r\n  };\r\n};\r\n","import {\r\n  Cache,\r\n  CacheValues,\r\n  createCache,\r\n  createDOM,\r\n  style,\r\n  appendChildren,\r\n  offsetSize,\r\n  scrollLeft,\r\n  scrollTop,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  on,\r\n  stopAndPrevent,\r\n  addClass,\r\n  equalWH,\r\n  push,\r\n  cAF,\r\n  rAF,\r\n  ResizeObserverConstructor,\r\n  isArray,\r\n  isBoolean,\r\n  removeClass,\r\n  isObject,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from 'classnames';\r\n\r\nexport interface SizeObserverOptions {\r\n  _direction?: boolean;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserverCallbackParams {\r\n  _sizeChanged: boolean;\r\n  _directionIsRTLCache?: CacheValues<boolean>;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport type DestroySizeObserver = () => void;\r\n\r\nconst animationStartEventName = 'animationstart';\r\nconst scrollEventName = 'scroll';\r\nconst scrollAmount = 3333333;\r\nconst getElmDirectionIsRTL = (elm: HTMLElement): boolean => style(elm, 'direction') === 'rtl';\r\nconst domRectHasDimensions = (rect?: DOMRectReadOnly) => rect && (rect.height || rect.width);\r\n\r\n/**\r\n * Creates a size observer which observes any size, padding, border, margin and box-sizing changes of the target element. Depending on the options also direction and appear can be observed.\r\n * @param target The target element which shall be observed.\r\n * @param onSizeChangedCallback The callback which gets called after a size change was detected.\r\n * @param options The options for size detection, whether to observe also direction and appear.\r\n * @returns A object which represents the instance of the size observer.\r\n */\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (params: SizeObserverCallbackParams) => any,\r\n  options?: SizeObserverOptions\r\n): DestroySizeObserver => {\r\n  const { _direction: observeDirectionChange = false, _appear: observeAppearChange = false } =\r\n    options || {};\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const baseElements = createDOM(\r\n    `<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`\r\n  );\r\n  const sizeObserver = baseElements[0] as HTMLElement;\r\n  const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n  const getIsDirectionRTL = getElmDirectionIsRTL.bind(0, sizeObserver);\r\n  const [updateResizeObserverContentRectCache] = createCache<DOMRectReadOnly | undefined>({\r\n    _initialValue: undefined,\r\n    _alwaysUpdateValues: true,\r\n    _equal: (currVal, newVal) =>\r\n      !(\r\n        !currVal || // if no initial value\r\n        // if from display: none to display: block\r\n        (!domRectHasDimensions(currVal) && domRectHasDimensions(newVal))\r\n      ),\r\n  });\r\n  const onSizeChangedCallbackProxy = (\r\n    sizeChangedContext?: CacheValues<boolean> | ResizeObserverEntry[] | Event | boolean\r\n  ) => {\r\n    const isResizeObserverCall =\r\n      isArray(sizeChangedContext) &&\r\n      sizeChangedContext.length > 0 &&\r\n      isObject(sizeChangedContext[0]);\r\n\r\n    const hasDirectionCache =\r\n      !isResizeObserverCall && isBoolean((sizeChangedContext as CacheValues<boolean>)[0]);\r\n\r\n    let skip = false;\r\n    let appear: boolean | number | undefined = false;\r\n    let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n    // if triggered from RO.\r\n    if (isResizeObserverCall) {\r\n      const [currRContentRect, , prevContentRect] = updateResizeObserverContentRectCache(\r\n        (sizeChangedContext as ResizeObserverEntry[]).pop()!.contentRect\r\n      );\r\n      const hasDimensions = domRectHasDimensions(currRContentRect);\r\n      const hadDimensions = domRectHasDimensions(prevContentRect);\r\n      skip = !prevContentRect || !hasDimensions; // skip on initial RO. call or if display is none\r\n      appear = !hadDimensions && hasDimensions;\r\n\r\n      doDirectionScroll = !skip; // direction scroll when not skipping\r\n    }\r\n    // else if its triggered with DirectionCache\r\n    else if (hasDirectionCache) {\r\n      [, doDirectionScroll] = sizeChangedContext as CacheValues<boolean>; // direction scroll when DirectionCache changed, false otherwise\r\n    }\r\n    // else if it triggered with appear from polyfill\r\n    else {\r\n      appear = sizeChangedContext === true;\r\n    }\r\n\r\n    if (observeDirectionChange && doDirectionScroll) {\r\n      const rtl = hasDirectionCache\r\n        ? (sizeChangedContext as CacheValues<boolean>)[0]\r\n        : getElmDirectionIsRTL(sizeObserver);\r\n      scrollLeft(\r\n        sizeObserver,\r\n        rtl\r\n          ? rtlScrollBehavior.n\r\n            ? -scrollAmount\r\n            : rtlScrollBehavior.i\r\n            ? 0\r\n            : scrollAmount\r\n          : scrollAmount\r\n      );\r\n      scrollTop(sizeObserver, scrollAmount);\r\n    }\r\n\r\n    if (!skip) {\r\n      onSizeChangedCallback({\r\n        _sizeChanged: !hasDirectionCache,\r\n        _directionIsRTLCache: hasDirectionCache\r\n          ? (sizeChangedContext as CacheValues<boolean>)\r\n          : undefined,\r\n        _appear: !!appear,\r\n      });\r\n    }\r\n  };\r\n  const offListeners: (() => void)[] = [];\r\n  let appearCallback: ((...args: any) => any) | false = observeAppearChange\r\n    ? onSizeChangedCallbackProxy\r\n    : false;\r\n  let directionIsRTLCache: Cache<boolean> | undefined;\r\n\r\n  if (ResizeObserverConstructor) {\r\n    const resizeObserverInstance = new ResizeObserverConstructor(onSizeChangedCallbackProxy);\r\n    resizeObserverInstance.observe(listenerElement);\r\n    push(offListeners, () => {\r\n      resizeObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const observerElementChildren = createDOM(\r\n      `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n    );\r\n    appendChildren(listenerElement, observerElementChildren);\r\n    addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n    const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n    const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n    const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n    const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n    let cacheSize = offsetSize(observerElementChildrenRoot);\r\n    let currSize = cacheSize;\r\n    let isDirty = false;\r\n    let rAFId: number;\r\n\r\n    const reset = () => {\r\n      scrollLeft(expandElement, scrollAmount);\r\n      scrollTop(expandElement, scrollAmount);\r\n      scrollLeft(shrinkElement, scrollAmount);\r\n      scrollTop(shrinkElement, scrollAmount);\r\n    };\r\n    const onResized = (appear?: unknown) => {\r\n      rAFId = 0;\r\n      if (isDirty) {\r\n        cacheSize = currSize;\r\n        onSizeChangedCallbackProxy(appear === true);\r\n      }\r\n    };\r\n    const onScroll = (scrollEvent?: Event | false) => {\r\n      currSize = offsetSize(observerElementChildrenRoot);\r\n      isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n      if (scrollEvent) {\r\n        stopAndPrevent(scrollEvent);\r\n\r\n        if (isDirty && !rAFId) {\r\n          cAF!(rAFId);\r\n          rAFId = rAF!(onResized);\r\n        }\r\n      } else {\r\n        onResized(scrollEvent === false);\r\n      }\r\n\r\n      reset();\r\n    };\r\n\r\n    push(offListeners, [\r\n      on(expandElement, scrollEventName, onScroll),\r\n      on(shrinkElement, scrollEventName, onScroll),\r\n    ]);\r\n\r\n    // lets assume that the divs will never be that large and a constant value is enough\r\n    style(expandElementChild, {\r\n      width: scrollAmount,\r\n      height: scrollAmount,\r\n    });\r\n\r\n    reset();\r\n\r\n    appearCallback = observeAppearChange ? onScroll.bind(0, false) : reset;\r\n  }\r\n\r\n  if (observeDirectionChange) {\r\n    directionIsRTLCache = createCache(\r\n      {\r\n        _initialValue: !getIsDirectionRTL(), // invert current value to trigger initial change\r\n      },\r\n      getIsDirectionRTL\r\n    );\r\n    const [updateDirectionIsRTLCache] = directionIsRTLCache;\r\n\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, scrollEventName, (event: Event) => {\r\n        const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n        const [directionIsRTL, directionIsRTLChanged] = directionIsRTLCacheValues;\r\n\r\n        if (directionIsRTLChanged) {\r\n          removeClass(listenerElement, 'ltr rtl');\r\n          if (directionIsRTL) {\r\n            addClass(listenerElement, 'rtl');\r\n          } else {\r\n            addClass(listenerElement, 'ltr');\r\n          }\r\n          onSizeChangedCallbackProxy(directionIsRTLCacheValues);\r\n        }\r\n\r\n        stopAndPrevent(event);\r\n      })\r\n    );\r\n  }\r\n\r\n  // appearCallback is always needed on scroll-observer strategy to reset it\r\n  if (appearCallback) {\r\n    addClass(sizeObserver, classNameSizeObserverAppear);\r\n    push(\r\n      offListeners,\r\n      on(sizeObserver, animationStartEventName, appearCallback, {\r\n        // Fire only once for \"CSS is ready\" event if ResizeObserver strategy is used\r\n        _once: !!ResizeObserverConstructor,\r\n      })\r\n    );\r\n  }\r\n\r\n  prependChildren(target, sizeObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(sizeObserver);\r\n  };\r\n};\r\n","import {\r\n  WH,\r\n  CacheValues,\r\n  createDiv,\r\n  offsetSize,\r\n  runEach,\r\n  prependChildren,\r\n  removeElements,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n} from 'support';\r\nimport { createSizeObserver } from 'observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from 'classnames';\r\n\r\nexport type DestroyTrinsicObserver = () => void;\r\n\r\nconst isHeightIntrinsic = (ioEntryOrSize: IntersectionObserverEntry | WH<number>): boolean =>\r\n  (ioEntryOrSize as WH<number>).h === 0 ||\r\n  (ioEntryOrSize as IntersectionObserverEntry).isIntersecting ||\r\n  (ioEntryOrSize as IntersectionObserverEntry).intersectionRatio > 0;\r\n\r\n/**\r\n * Creates a trinsic observer which observes changes to intrinsic or extrinsic sizing for the height of the target element.\r\n * @param target The element which shall be observed.\r\n * @param onTrinsicChangedCallback The callback which gets called after a change was detected.\r\n * @returns A object which represents the instance of the trinsic observer.\r\n */\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: (heightIntrinsic: CacheValues<boolean>) => any\r\n): DestroyTrinsicObserver => {\r\n  const trinsicObserver = createDiv(classNameTrinsicObserver);\r\n  const offListeners: (() => void)[] = [];\r\n  const [updateHeightIntrinsicCache] = createCache({\r\n    _initialValue: false,\r\n  });\r\n\r\n  const triggerOnTrinsicChangedCallback = (\r\n    updateValue?: IntersectionObserverEntry | WH<number>\r\n  ) => {\r\n    if (updateValue) {\r\n      const heightIntrinsic = updateHeightIntrinsicCache(isHeightIntrinsic(updateValue));\r\n      const [, heightIntrinsicChanged] = heightIntrinsic;\r\n\r\n      if (heightIntrinsicChanged) {\r\n        onTrinsicChangedCallback(heightIntrinsic);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (IntersectionObserverConstructor) {\r\n    const intersectionObserverInstance: IntersectionObserver = new IntersectionObserverConstructor(\r\n      (entries: IntersectionObserverEntry[]) => {\r\n        if (entries && entries.length > 0) {\r\n          triggerOnTrinsicChangedCallback(entries.pop());\r\n        }\r\n      },\r\n      { root: target }\r\n    );\r\n    intersectionObserverInstance.observe(trinsicObserver);\r\n    push(offListeners, () => {\r\n      intersectionObserverInstance.disconnect();\r\n    });\r\n  } else {\r\n    const onSizeChanged = () => {\r\n      const newSize = offsetSize(trinsicObserver);\r\n      triggerOnTrinsicChangedCallback(newSize);\r\n    };\r\n    push(offListeners, createSizeObserver(trinsicObserver, onSizeChanged));\r\n    onSizeChanged();\r\n  }\r\n\r\n  prependChildren(target, trinsicObserver);\r\n\r\n  return () => {\r\n    runEach(offListeners);\r\n    removeElements(trinsicObserver);\r\n  };\r\n};\r\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  indexOf,\r\n  isString,\r\n  MutationObserverConstructor,\r\n  isEmptyArray,\r\n  on,\r\n  attr,\r\n  is,\r\n  find,\r\n  push,\r\n} from 'support';\r\n\r\ntype DOMContentObserverCallback = (contentChangedTroughEvent: boolean) => any;\r\n\r\ntype DOMTargetObserverCallback = (targetChangedAttrs: string[], targetStyleChanged: boolean) => any;\r\n\r\ninterface DOMObserverOptionsBase {\r\n  _attributes?: string[];\r\n  _styleChangingAttributes?: string[];\r\n  /**\r\n   * A function which can ignore a changed attribute if it returns true.\r\n   * for DOMTargetObserver this applies to the changes to the observed target\r\n   * for DOMContentObserver this applies to changes to nested targets -> nested targets are elements which match the \"_nestedTargetSelector\" selector\r\n   */\r\n  _ignoreTargetChange?: DOMObserverIgnoreTargetChange;\r\n}\r\n\r\ninterface DOMContentObserverOptions extends DOMObserverOptionsBase {\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname(s) | function returning eventname(s)] -> eventnames divided by whitespaces\r\n  _nestedTargetSelector?: string;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange; // function which will prevent marking certain dom changes as content change if it returns true\r\n}\r\n\r\ntype DOMTargetObserverOptions = DOMObserverOptionsBase;\r\n\r\ntype ContentChangeArrayItem = [selector?: string, eventNames?: string] | null | undefined;\r\n\r\nexport type DOMObserverEventContentChange =\r\n  | Array<ContentChangeArrayItem>\r\n  | false\r\n  | null\r\n  | undefined;\r\n\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions?: DOMContentObserverOptions\r\n) => boolean;\r\n\r\nexport type DOMObserverIgnoreTargetChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\n\r\nexport type DOMObserverCallback<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverCallback\r\n  : DOMTargetObserverCallback;\r\n\r\nexport type DOMObserverOptions<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverOptions\r\n  : DOMTargetObserverOptions;\r\n\r\nexport type DOMObserver = [destroy: () => void, update: () => void];\r\n\r\ntype EventContentChangeUpdateElement = (getElements?: (selector: string) => Node[]) => void;\r\ntype EventContentChange = [destroy: () => void, updateElements: EventContentChangeUpdateElement];\r\n\r\n/**\r\n * Creates a set of helper functions to observe events of elements inside the target element.\r\n * @param target The target element of which the children elements shall be observed. (not only direct children but also nested ones)\r\n * @param eventContentChange The event content change array. (array of tuples: selector and eventname(s))\r\n * @param callback Callback which is called if one of the elements emits the corresponding event.\r\n * @returns A object which contains a set of helper functions to destroy and update the observation of elements.\r\n */\r\nconst createEventContentChange = (\r\n  target: Element,\r\n  callback: (...args: any) => any,\r\n  eventContentChange?: DOMObserverEventContentChange\r\n): EventContentChange => {\r\n  let map: WeakMap<Node, [string, () => any]> | undefined; // weak map to prevent memory leak for detached elements\r\n  let destroyed = false;\r\n  const destroy = () => {\r\n    destroyed = true;\r\n  };\r\n  const updateElements: EventContentChangeUpdateElement = (getElements?) => {\r\n    if (eventContentChange) {\r\n      const eventElmList = eventContentChange.reduce<Array<[Node[], string]>>((arr, item) => {\r\n        if (item) {\r\n          const selector = item[0];\r\n          const eventNames = item[1];\r\n          const elements =\r\n            eventNames &&\r\n            selector &&\r\n            (getElements ? getElements(selector) : find(selector, target));\r\n\r\n          if (elements && elements.length && eventNames && isString(eventNames)) {\r\n            push(arr, [elements, eventNames.trim()], true);\r\n          }\r\n        }\r\n        return arr;\r\n      }, []);\r\n\r\n      each(eventElmList, (item) =>\r\n        each(item[0], (elm) => {\r\n          const eventNames = item[1];\r\n          const entry = map!.get(elm);\r\n\r\n          if (entry) {\r\n            const entryEventNames = entry[0];\r\n            const entryOff = entry[1];\r\n\r\n            // in case an already registered element is registered again, unregister the previous events\r\n            if (entryEventNames === eventNames) {\r\n              entryOff();\r\n            }\r\n          }\r\n\r\n          const off = on(elm, eventNames, (event: Event) => {\r\n            if (destroyed) {\r\n              off();\r\n              map!.delete(elm);\r\n            } else {\r\n              callback(event);\r\n            }\r\n          });\r\n          map!.set(elm, [eventNames, off]);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (eventContentChange) {\r\n    map = new WeakMap();\r\n    updateElements();\r\n  }\r\n\r\n  return [destroy, updateElements];\r\n};\r\n\r\n/**\r\n * Creates a DOM observer which observes DOM changes to either the target element or its children.\r\n * @param target The element which shall be observed.\r\n * @param isContentObserver Whether this observer is just observing the target or just the targets children. (not only direct children but also nested ones)\r\n * @param callback The callback which gets called if a change was detected.\r\n * @param options The options for DOM change detection.\r\n * @returns A object which represents the instance of the DOM observer.\r\n */\r\nexport const createDOMObserver = <ContentObserver extends boolean>(\r\n  target: HTMLElement,\r\n  isContentObserver: ContentObserver,\r\n  callback: DOMObserverCallback<ContentObserver>,\r\n  options?: DOMObserverOptions<ContentObserver>\r\n): DOMObserver => {\r\n  let isConnected = false;\r\n  const {\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetChange,\r\n    _ignoreContentChange,\r\n  } = (options as DOMContentObserverOptions & DOMTargetObserverOptions) || {};\r\n  const [destroyEventContentChange, updateEventContentChangeElements] = createEventContentChange(\r\n    target,\r\n    debounce(\r\n      () => {\r\n        if (isConnected) {\r\n          (callback as DOMContentObserverCallback)(true);\r\n        }\r\n      },\r\n      { _timeout: 33, _maxDelay: 99 }\r\n    ),\r\n    _eventContentChange\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = finalAttributes.concat(finalStyleChangingAttributes);\r\n  const observerCallback = (mutations: MutationRecord[]) => {\r\n    const ignoreTargetChange = _ignoreTargetChange || noop;\r\n    const ignoreContentChange = _ignoreContentChange || noop;\r\n    const targetChangedAttrs: string[] = [];\r\n    const totalAddedNodes: Node[] = [];\r\n    let targetStyleChanged = false;\r\n    let contentChanged = false;\r\n    let childListChanged = false;\r\n    each(mutations, (mutation) => {\r\n      const { attributeName, target: mutationTarget, type, oldValue, addedNodes } = mutation;\r\n      const isAttributesType = type === 'attributes';\r\n      const isChildListType = type === 'childList';\r\n      const targetIsMutationTarget = target === mutationTarget;\r\n      const attributeValue =\r\n        isAttributesType && isString(attributeName)\r\n          ? attr(mutationTarget as HTMLElement, attributeName!)\r\n          : 0;\r\n      const attributeChanged = attributeValue !== 0 && oldValue !== attributeValue;\r\n      const styleChangingAttrChanged =\r\n        indexOf(finalStyleChangingAttributes, attributeName) > -1 && attributeChanged;\r\n\r\n      // if is content observer and something changed in children\r\n      if (isContentObserver && !targetIsMutationTarget) {\r\n        const notOnlyAttrChanged = !isAttributesType;\r\n        const contentAttrChanged = isAttributesType && styleChangingAttrChanged;\r\n        const isNestedTarget =\r\n          contentAttrChanged && _nestedTargetSelector && is(mutationTarget, _nestedTargetSelector);\r\n        const baseAssertion = isNestedTarget\r\n          ? !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n          : notOnlyAttrChanged || contentAttrChanged;\r\n        const contentFinalChanged =\r\n          baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n        push(totalAddedNodes, addedNodes);\r\n\r\n        contentChanged = contentChanged || contentFinalChanged;\r\n        childListChanged = childListChanged || isChildListType;\r\n      }\r\n      // if is target observer and target attr changed\r\n      if (\r\n        !isContentObserver &&\r\n        targetIsMutationTarget &&\r\n        attributeChanged &&\r\n        !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n      ) {\r\n        push(targetChangedAttrs, attributeName!);\r\n        targetStyleChanged = targetStyleChanged || styleChangingAttrChanged;\r\n      }\r\n    });\r\n\r\n    if (childListChanged && !isEmptyArray(totalAddedNodes)) {\r\n      // adds / removes the new elements from the event content change\r\n      updateEventContentChangeElements((selector) =>\r\n        totalAddedNodes.reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n    }\r\n\r\n    if (isContentObserver) {\r\n      contentChanged && (callback as DOMContentObserverCallback)(false);\r\n    } else if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged) {\r\n      (callback as DOMTargetObserverCallback)(targetChangedAttrs, targetStyleChanged);\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(observerCallback);\r\n\r\n  // Connect\r\n  mutationObserver.observe(target, {\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: observedAttributes,\r\n    subtree: isContentObserver,\r\n    childList: isContentObserver,\r\n    characterData: isContentObserver,\r\n  });\r\n  isConnected = true;\r\n\r\n  return [\r\n    () => {\r\n      if (isConnected) {\r\n        destroyEventContentChange();\r\n        mutationObserver.disconnect();\r\n        isConnected = false;\r\n      }\r\n    },\r\n    () => {\r\n      if (isConnected) {\r\n        observerCallback(mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  ];\r\n};\r\n","import {\r\n  debounce,\r\n  isArray,\r\n  isNumber,\r\n  each,\r\n  indexOf,\r\n  isString,\r\n  attr,\r\n  removeAttr,\r\n  CacheValues,\r\n  keys,\r\n  liesBetween,\r\n  scrollSize,\r\n  equalWH,\r\n  createCache,\r\n  WH,\r\n  fractionalSize,\r\n  isFunction,\r\n  ResizeObserverConstructor,\r\n} from 'support';\r\nimport { getEnvironment } from 'environment';\r\nimport {\r\n  dataAttributeHost,\r\n  dataValueHostOverflowVisible,\r\n  classNameViewport,\r\n  classNameOverflowVisible,\r\n} from 'classnames';\r\nimport { createSizeObserver, SizeObserverCallbackParams } from 'observers/sizeObserver';\r\nimport { createTrinsicObserver } from 'observers/trinsicObserver';\r\nimport { createDOMObserver, DOMObserver } from 'observers/domObserver';\r\nimport type { SetupState, SetupUpdateCheckOption } from 'setups';\r\nimport type { StructureSetupState } from 'setups/structureSetup';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type {\r\n  StructureSetupUpdate,\r\n  StructureSetupUpdateHints,\r\n} from 'setups/structureSetup/structureSetup.update';\r\n\r\nexport type StructureSetupObserversUpdate = (checkOption: SetupUpdateCheckOption) => void;\r\n\r\nexport type StructureSetupObservers = [\r\n  updateObserverOptions: StructureSetupObserversUpdate,\r\n  destroy: () => void\r\n];\r\n\r\ntype ExcludeFromTuple<T extends readonly any[], E> = T extends [infer F, ...infer R]\r\n  ? [F] extends [E]\r\n    ? ExcludeFromTuple<R, E>\r\n    : [F, ...ExcludeFromTuple<R, E>]\r\n  : [];\r\n\r\nconst hostSelector = `[${dataAttributeHost}]`;\r\n\r\n// TODO: observer textarea attrs if textarea\r\n\r\nconst viewportSelector = `.${classNameViewport}`;\r\nconst viewportAttrsFromTarget = ['tabindex'];\r\nconst baseStyleChangingAttrsTextarea = ['wrap', 'cols', 'rows'];\r\nconst baseStyleChangingAttrs = ['id', 'class', 'style', 'open'];\r\n\r\nexport const createStructureSetupObservers = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: SetupState<StructureSetupState>,\r\n  structureSetupUpdate: (\r\n    ...args: ExcludeFromTuple<Parameters<StructureSetupUpdate>, Parameters<StructureSetupUpdate>[0]>\r\n  ) => any\r\n): StructureSetupObservers => {\r\n  let debounceTimeout: number | false | undefined;\r\n  let debounceMaxDelay: number | false | undefined;\r\n  let contentMutationObserver: DOMObserver | undefined;\r\n  const [, setState] = state;\r\n  const {\r\n    _host,\r\n    _viewport,\r\n    _content,\r\n    _isTextarea,\r\n    _viewportIsTarget,\r\n    _viewportHasClass,\r\n    _viewportAddRemoveClass,\r\n  } = structureSetupElements;\r\n  const { _nativeScrollbarStyling, _flexboxGlue } = getEnvironment();\r\n\r\n  const [updateContentSizeCache] = createCache<WH<number>>(\r\n    {\r\n      _equal: equalWH,\r\n      _initialValue: { w: 0, h: 0 },\r\n    },\r\n    () => {\r\n      const has = _viewportHasClass(classNameOverflowVisible, dataValueHostOverflowVisible);\r\n      has && _viewportAddRemoveClass(classNameOverflowVisible, dataValueHostOverflowVisible);\r\n\r\n      const contentScroll = scrollSize(_content);\r\n      const viewportScroll = scrollSize(_viewport);\r\n      const fractional = fractionalSize(_viewport);\r\n\r\n      has && _viewportAddRemoveClass(classNameOverflowVisible, dataValueHostOverflowVisible, true);\r\n      return {\r\n        w: viewportScroll.w + contentScroll.w + fractional.w,\r\n        h: viewportScroll.h + contentScroll.h + fractional.h,\r\n      };\r\n    }\r\n  );\r\n  const contentMutationObserverAttr = _isTextarea\r\n    ? baseStyleChangingAttrsTextarea\r\n    : baseStyleChangingAttrs.concat(baseStyleChangingAttrsTextarea);\r\n  const structureSetupUpdateWithDebouncedAdaptiveUpdateHints = debounce(structureSetupUpdate, {\r\n    _timeout: () => debounceTimeout,\r\n    _maxDelay: () => debounceMaxDelay,\r\n    _mergeParams(prev, curr) {\r\n      const [prevObj] = prev;\r\n      const [currObj] = curr;\r\n      return [\r\n        keys(prevObj)\r\n          .concat(keys(currObj))\r\n          .reduce((obj, key) => {\r\n            obj[key] = prevObj[key] || currObj[key];\r\n            return obj;\r\n          }, {}),\r\n      ] as [Partial<StructureSetupUpdateHints>];\r\n    },\r\n  });\r\n\r\n  const updateViewportAttrsFromHost = (attributes?: string[]) => {\r\n    each(attributes || viewportAttrsFromTarget, (attribute) => {\r\n      if (indexOf(viewportAttrsFromTarget, attribute) > -1) {\r\n        const hostAttr = attr(_host, attribute);\r\n        if (isString(hostAttr)) {\r\n          attr(_viewport, attribute, hostAttr);\r\n        } else {\r\n          removeAttr(_viewport, attribute);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  const onTrinsicChanged = (heightIntrinsicCache: CacheValues<boolean>) => {\r\n    const [heightIntrinsic, heightIntrinsicChanged] = heightIntrinsicCache;\r\n    setState({ _heightIntrinsic: heightIntrinsic });\r\n    structureSetupUpdate({ _heightIntrinsicChanged: heightIntrinsicChanged });\r\n  };\r\n  const onSizeChanged = ({\r\n    _sizeChanged,\r\n    _directionIsRTLCache,\r\n    _appear,\r\n  }: SizeObserverCallbackParams) => {\r\n    const updateFn =\r\n      !_sizeChanged || _appear\r\n        ? structureSetupUpdate\r\n        : structureSetupUpdateWithDebouncedAdaptiveUpdateHints;\r\n\r\n    let directionChanged = false;\r\n    if (_directionIsRTLCache) {\r\n      const [directionIsRTL, directionIsRTLChanged] = _directionIsRTLCache;\r\n      directionChanged = directionIsRTLChanged;\r\n      setState({ _directionIsRTL: directionIsRTL });\r\n    }\r\n\r\n    updateFn({ _sizeChanged, _directionChanged: directionChanged });\r\n  };\r\n  const onContentMutation = (contentChangedTroughEvent: boolean) => {\r\n    const [, contentSizeChanged] = updateContentSizeCache();\r\n    // if contentChangedTroughEvent is true its already debounced\r\n    const updateFn = contentChangedTroughEvent\r\n      ? structureSetupUpdate\r\n      : structureSetupUpdateWithDebouncedAdaptiveUpdateHints;\r\n\r\n    if (contentSizeChanged) {\r\n      updateFn({\r\n        _contentMutation: true,\r\n      });\r\n    }\r\n  };\r\n  const onHostMutation = (targetChangedAttrs: string[], targetStyleChanged: boolean) => {\r\n    if (targetStyleChanged) {\r\n      structureSetupUpdateWithDebouncedAdaptiveUpdateHints({\r\n        _hostMutation: true,\r\n      });\r\n    } else if (!_viewportIsTarget) {\r\n      updateViewportAttrsFromHost(targetChangedAttrs);\r\n    }\r\n  };\r\n\r\n  const destroyTrinsicObserver =\r\n    (_content || !_flexboxGlue) && createTrinsicObserver(_host, onTrinsicChanged);\r\n  const destroySizeObserver =\r\n    !_viewportIsTarget &&\r\n    createSizeObserver(_host, onSizeChanged, {\r\n      _appear: true,\r\n      _direction: !_nativeScrollbarStyling,\r\n    });\r\n  const [destroyHostMutationObserver] = createDOMObserver(_host, false, onHostMutation, {\r\n    _styleChangingAttributes: baseStyleChangingAttrs,\r\n    _attributes: baseStyleChangingAttrs.concat(viewportAttrsFromTarget),\r\n  });\r\n\r\n  const viewportIsTargetResizeObserver =\r\n    _viewportIsTarget &&\r\n    new ResizeObserverConstructor!(onSizeChanged.bind(0, { _sizeChanged: true }));\r\n\r\n  viewportIsTargetResizeObserver && viewportIsTargetResizeObserver.observe(_host);\r\n  updateViewportAttrsFromHost();\r\n\r\n  return [\r\n    (checkOption) => {\r\n      const [ignoreMutation] = checkOption<string[] | null>('updating.ignoreMutation');\r\n      const [attributes, attributesChanged] = checkOption<string[] | null>('updating.attributes');\r\n      const [elementEvents, elementEventsChanged] = checkOption<Array<[string, string]> | null>(\r\n        'updating.elementEvents'\r\n      );\r\n      const [debounceValue, debounceChanged] = checkOption<Array<number> | number | null>(\r\n        'updating.debounce'\r\n      );\r\n      const updateContentMutationObserver = elementEventsChanged || attributesChanged;\r\n      const ignoreMutationFromOptions = (mutation: MutationRecord) =>\r\n        isFunction(ignoreMutation) && ignoreMutation(mutation);\r\n\r\n      if (updateContentMutationObserver) {\r\n        if (contentMutationObserver) {\r\n          contentMutationObserver[1](); // update\r\n          contentMutationObserver[0](); // destroy\r\n        }\r\n        contentMutationObserver = createDOMObserver(\r\n          _content || _viewport,\r\n          true,\r\n          onContentMutation,\r\n          {\r\n            _styleChangingAttributes: contentMutationObserverAttr.concat(attributes || []),\r\n            _attributes: contentMutationObserverAttr.concat(attributes || []),\r\n            _eventContentChange: elementEvents,\r\n            _nestedTargetSelector: hostSelector,\r\n            _ignoreContentChange: (mutation, isNestedTarget) => {\r\n              const { target, attributeName } = mutation;\r\n              const ignore =\r\n                !isNestedTarget && attributeName\r\n                  ? liesBetween(target as Element, hostSelector, viewportSelector)\r\n                  : false;\r\n              return ignore || !!ignoreMutationFromOptions(mutation);\r\n            },\r\n          }\r\n        );\r\n      }\r\n\r\n      if (debounceChanged) {\r\n        structureSetupUpdateWithDebouncedAdaptiveUpdateHints._flush();\r\n        if (isArray(debounceValue)) {\r\n          const timeout = debounceValue[0];\r\n          const maxWait = debounceValue[1];\r\n          debounceTimeout = isNumber(timeout) ? timeout : false;\r\n          debounceMaxDelay = isNumber(maxWait) ? maxWait : false;\r\n        } else if (isNumber(debounceValue)) {\r\n          debounceTimeout = debounceValue;\r\n          debounceMaxDelay = false;\r\n        } else {\r\n          debounceTimeout = false;\r\n          debounceMaxDelay = false;\r\n        }\r\n      }\r\n    },\r\n    () => {\r\n      contentMutationObserver && contentMutationObserver[0](); // destroy\r\n      destroyTrinsicObserver && destroyTrinsicObserver();\r\n      destroySizeObserver && destroySizeObserver();\r\n      viewportIsTargetResizeObserver && viewportIsTargetResizeObserver.disconnect();\r\n      destroyHostMutationObserver();\r\n    },\r\n  ];\r\n};\r\n","import { runEach } from 'support';\r\nimport { createState, createOptionCheck } from 'setups/setups';\r\nimport { createStructureSetupElements } from 'setups/structureSetup/structureSetup.elements';\r\nimport { createStructureSetupUpdate } from 'setups/structureSetup/structureSetup.update';\r\nimport { createStructureSetupObservers } from 'setups/structureSetup/structureSetup.observers';\r\nimport type { StructureSetupUpdateHints } from 'setups/structureSetup/structureSetup.update';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type { TRBL, XY } from 'support';\r\nimport type { OSOptions, ReadonlyOSOptions } from 'options';\r\nimport type { Setup } from 'setups';\r\nimport type { OSTarget, PartialOptions, StyleObject, OverflowStyle } from 'typings';\r\n\r\nexport interface StructureSetupState {\r\n  _padding: TRBL;\r\n  _paddingAbsolute: boolean;\r\n  _viewportPaddingStyle: StyleObject;\r\n  _overflowAmount: XY<number>;\r\n  _overflowStyle: XY<OverflowStyle>;\r\n  _hasOverflow: XY<boolean>;\r\n  _heightIntrinsic: boolean;\r\n  _directionIsRTL: boolean;\r\n}\r\n\r\nexport interface StructureSetupStaticState {\r\n  _elements: StructureSetupElementsObj;\r\n  _addOnUpdatedListener: (listener: OnUpdatedListener) => void;\r\n}\r\n\r\nexport type OnUpdatedListener = (\r\n  updateHints: StructureSetupUpdateHints,\r\n  changedOptions: PartialOptions<OSOptions>,\r\n  force: boolean\r\n) => void;\r\n\r\nconst initialStructureSetupUpdateState: StructureSetupState = {\r\n  _padding: {\r\n    t: 0,\r\n    r: 0,\r\n    b: 0,\r\n    l: 0,\r\n  },\r\n  _paddingAbsolute: false,\r\n  _viewportPaddingStyle: {\r\n    marginRight: 0,\r\n    marginBottom: 0,\r\n    marginLeft: 0,\r\n    paddingTop: 0,\r\n    paddingRight: 0,\r\n    paddingBottom: 0,\r\n    paddingLeft: 0,\r\n  },\r\n  _overflowAmount: {\r\n    x: 0,\r\n    y: 0,\r\n  },\r\n  _overflowStyle: {\r\n    x: 'hidden',\r\n    y: 'hidden',\r\n  },\r\n  _hasOverflow: {\r\n    x: false,\r\n    y: false,\r\n  },\r\n  _heightIntrinsic: false,\r\n  _directionIsRTL: false,\r\n};\r\n\r\nexport const createStructureSetup = (\r\n  target: OSTarget,\r\n  options: ReadonlyOSOptions\r\n): Setup<StructureSetupState, StructureSetupStaticState> => {\r\n  const checkOptionsFallback = createOptionCheck(options, {});\r\n  const state = createState(initialStructureSetupUpdateState);\r\n  const onUpdatedListeners = new Set<OnUpdatedListener>();\r\n  const [getState] = state;\r\n  const runOnUpdatedListeners = (\r\n    updateHints: StructureSetupUpdateHints,\r\n    changedOptions?: PartialOptions<OSOptions>,\r\n    force?: boolean\r\n  ) => {\r\n    runEach(onUpdatedListeners, [updateHints, changedOptions || {}, !!force]);\r\n  };\r\n\r\n  const [elements, destroyElements] = createStructureSetupElements(target);\r\n  const updateStructure = createStructureSetupUpdate(elements, state);\r\n  const [updateObservers, destroyObservers] = createStructureSetupObservers(\r\n    elements,\r\n    state,\r\n    (updateHints) => {\r\n      runOnUpdatedListeners(updateStructure(checkOptionsFallback, updateHints));\r\n    }\r\n  );\r\n\r\n  const structureSetupState = getState.bind(0) as (() => StructureSetupState) &\r\n    StructureSetupStaticState;\r\n  structureSetupState._addOnUpdatedListener = (listener) => {\r\n    onUpdatedListeners.add(listener);\r\n  };\r\n  structureSetupState._elements = elements;\r\n\r\n  return [\r\n    (changedOptions, force?) => {\r\n      const checkOption = createOptionCheck(options, changedOptions, force);\r\n      updateObservers(checkOption);\r\n      runOnUpdatedListeners(updateStructure(checkOption, {}, force));\r\n    },\r\n    structureSetupState,\r\n    () => {\r\n      onUpdatedListeners.clear();\r\n      destroyObservers();\r\n      destroyElements();\r\n    },\r\n  ];\r\n};\r\n","import { appendChildren, createDiv, removeElements, isFunction } from 'support';\r\nimport {\r\n  classNameScrollbar,\r\n  classNameScrollbarHorizontal,\r\n  classNameScrollbarVertical,\r\n  classNameScrollbarTrack,\r\n  classNameScrollbarHandle,\r\n} from 'classnames';\r\nimport { getEnvironment, ScrollbarsInitializationStrategy } from 'environment';\r\nimport { OSTarget, ScrollbarsInitialization } from 'typings';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\n\r\nexport interface ScrollbarStructure {\r\n  _scrollbar: HTMLElement;\r\n  _track: HTMLElement;\r\n  _handle: HTMLElement;\r\n}\r\n\r\nexport interface ScrollbarsSetupElementsObj {\r\n  _horizontalScrollbarStructure: ScrollbarStructure;\r\n  _verticalScrollbarStructure: ScrollbarStructure;\r\n}\r\n\r\nexport type ScrollbarsSetupElements = [elements: ScrollbarsSetupElementsObj, destroy: () => void];\r\n\r\nconst generateScrollbarDOM = (scrollbarClassName: string): ScrollbarStructure => {\r\n  const scrollbar = createDiv(`${classNameScrollbar} ${scrollbarClassName}`);\r\n  const track = createDiv(classNameScrollbarTrack);\r\n  const handle = createDiv(classNameScrollbarHandle);\r\n\r\n  appendChildren(scrollbar, track);\r\n  appendChildren(track, handle);\r\n\r\n  return {\r\n    _scrollbar: scrollbar,\r\n    _track: track,\r\n    _handle: handle,\r\n  };\r\n};\r\n\r\nexport const createScrollbarsSetupElements = (\r\n  target: OSTarget,\r\n  structureSetupElements: StructureSetupElementsObj\r\n): ScrollbarsSetupElements => {\r\n  const { _getInitializationStrategy } = getEnvironment();\r\n  const { _scrollbarsSlot: environmentScrollbarSlot } =\r\n    _getInitializationStrategy() as ScrollbarsInitializationStrategy;\r\n  const { _target, _host, _viewport, _targetIsElm } = structureSetupElements;\r\n  const initializationScrollbarSlot =\r\n    !_targetIsElm && (target as ScrollbarsInitialization).scrollbarsSlot;\r\n  const initializationScrollbarSlotResult = isFunction(initializationScrollbarSlot)\r\n    ? initializationScrollbarSlot(_target, _host, _viewport)\r\n    : initializationScrollbarSlot;\r\n  const evaluatedScrollbarSlot =\r\n    initializationScrollbarSlotResult ||\r\n    (isFunction(environmentScrollbarSlot)\r\n      ? environmentScrollbarSlot(_target, _host, _viewport)\r\n      : environmentScrollbarSlot) ||\r\n    _host;\r\n\r\n  const horizontalScrollbarStructure = generateScrollbarDOM(classNameScrollbarHorizontal);\r\n  const verticalScrollbarStructure = generateScrollbarDOM(classNameScrollbarVertical);\r\n\r\n  const { _scrollbar: horizontalScrollbar } = horizontalScrollbarStructure;\r\n  const { _scrollbar: verticalScrollbar } = verticalScrollbarStructure;\r\n\r\n  appendChildren(evaluatedScrollbarSlot, horizontalScrollbar);\r\n  appendChildren(evaluatedScrollbarSlot, verticalScrollbar);\r\n\r\n  return [\r\n    {\r\n      _horizontalScrollbarStructure: horizontalScrollbarStructure,\r\n      _verticalScrollbarStructure: verticalScrollbarStructure,\r\n    },\r\n    removeElements.bind(0, [horizontalScrollbar, verticalScrollbar]),\r\n  ];\r\n};\r\n","import { createState, createOptionCheck } from 'setups/setups';\r\nimport {\r\n  createScrollbarsSetupElements,\r\n  ScrollbarsSetupElementsObj,\r\n} from 'setups/scrollbarsSetup/scrollbarsSetup.elements';\r\nimport type { StructureSetupElementsObj } from 'setups/structureSetup/structureSetup.elements';\r\nimport type { ReadonlyOSOptions } from 'options';\r\nimport type { Setup } from 'setups';\r\nimport type { OSTarget } from 'typings';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface ScrollbarsSetupState {}\r\n\r\nexport interface ScrollbarsSetupStaticState {\r\n  _elements: ScrollbarsSetupElementsObj;\r\n}\r\n\r\nexport const createScrollbarsSetup = (\r\n  target: OSTarget,\r\n  options: ReadonlyOSOptions,\r\n  structureSetupElements: StructureSetupElementsObj\r\n): Setup<ScrollbarsSetupState, ScrollbarsSetupStaticState> => {\r\n  const state = createState({});\r\n  const [getState] = state;\r\n\r\n  const [elements, destroyElements] = createScrollbarsSetupElements(target, structureSetupElements);\r\n\r\n  const scrollbarsSetupState = getState.bind(0) as (() => ScrollbarsSetupState) &\r\n    ScrollbarsSetupStaticState;\r\n  scrollbarsSetupState._elements = elements;\r\n\r\n  return [\r\n    (changedOptions, force?) => {\r\n      const checkOption = createOptionCheck(options, changedOptions, force);\r\n      // eslint-disable-next-line no-console\r\n      console.log(checkOption);\r\n    },\r\n    scrollbarsSetupState,\r\n    () => {\r\n      destroyElements();\r\n    },\r\n  ];\r\n};\r\n","import { assignDeep, each, isArray } from 'support';\r\nimport { OverlayScrollbars, OverlayScrollbarsStatic } from 'overlayscrollbars';\r\n\r\nexport type OSPluginInstance =\r\n  | Record<string, unknown>\r\n  | ((staticObj: OverlayScrollbarsStatic, instanceObj: OverlayScrollbars) => void);\r\nexport type OSPlugin<T extends OSPluginInstance = OSPluginInstance> = [string, T];\r\n\r\nconst pluginRegistry: Record<string, OSPluginInstance> = {};\r\n\r\nexport const getPlugins = () => assignDeep({}, pluginRegistry);\r\n\r\nexport const addPlugin = (addedPlugin: OSPlugin | OSPlugin[]) =>\r\n  each((isArray(addedPlugin) ? addedPlugin : [addedPlugin]) as OSPlugin[], (plugin) => {\r\n    pluginRegistry[plugin[0]] = plugin[1];\r\n  });\r\n","import { OSPlugin } from 'plugins';\r\nimport { OSOptions, OverflowBehavior, VisibilityBehavior, AutoHideBehavior } from 'options';\r\nimport {\r\n  validateOptions,\r\n  OptionsTemplate,\r\n  OptionsTemplateValue,\r\n  optionsTemplateTypes as oTypes,\r\n} from 'plugins/optionsValidation/validation';\r\nimport { PartialOptions } from 'typings';\r\n\r\nconst numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\nconst booleanAllowedValues: OptionsTemplateValue<boolean> = oTypes.boolean;\r\nconst arrayNullValues: OptionsTemplateValue<Array<unknown> | null> = [oTypes.array, oTypes.null];\r\nconst overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> =\r\n  'hidden scroll visible visible-hidden';\r\nconst scrollbarsVisibilityAllowedValues: OptionsTemplateValue<VisibilityBehavior> =\r\n  'visible hidden auto';\r\nconst scrollbarsAutoHideAllowedValues: OptionsTemplateValue<AutoHideBehavior> =\r\n  'never scroll leavemove';\r\n\r\nconst optionsTemplate: OptionsTemplate<OSOptions> = {\r\n  // resize: resizeAllowedValues, // none || both  || horizontal || vertical || n || b ||\r\n  paddingAbsolute: booleanAllowedValues, // true || false\r\n  updating: {\r\n    elementEvents: arrayNullValues, // array of tuples || null\r\n    attributes: arrayNullValues,\r\n    debounce: [oTypes.number, oTypes.array, oTypes.null], // number || number array || null\r\n    ignoreMutation: [oTypes.function, oTypes.null], // function || null\r\n  },\r\n  overflow: {\r\n    x: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n    y: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n  },\r\n  scrollbars: {\r\n    visibility: scrollbarsVisibilityAllowedValues, // visible || hidden || auto || v ||\r\n    autoHide: scrollbarsAutoHideAllowedValues, // never || scroll || leave || move ||\r\n    autoHideDelay: numberAllowedValues, // number\r\n    dragScroll: booleanAllowedValues, // true || false\r\n    clickScroll: booleanAllowedValues, // true || false\r\n    touch: booleanAllowedValues, // true || false\r\n  },\r\n  /*\r\n  textarea: {\r\n    dynWidth: booleanAllowedValues, // true || false\r\n    dynHeight: booleanAllowedValues, // true || false\r\n    inheritedAttrs: stringArrayNullAllowedValues, // string || array || nul\r\n  },\r\n  */\r\n  nativeScrollbarsOverlaid: {\r\n    show: booleanAllowedValues, // true || false\r\n    initialize: booleanAllowedValues, // true || false\r\n  },\r\n};\r\n\r\nexport type OptionsValidationPluginInstance = {\r\n  _: (options: PartialOptions<OSOptions>, doWriteErrors?: boolean) => PartialOptions<OSOptions>;\r\n};\r\n\r\nexport const optionsValidationPluginName = '__osOptionsValidationPlugin';\r\n\r\nexport const optionsValidationPlugin: OSPlugin<OptionsValidationPluginInstance> = [\r\n  optionsValidationPluginName,\r\n  {\r\n    _: (options: PartialOptions<OSOptions>, doWriteErrors?: boolean) => {\r\n      const [validated, foreign] = validateOptions(optionsTemplate, options, doWriteErrors);\r\n      return { ...foreign, ...validated };\r\n    },\r\n  },\r\n];\r\n","import { OverlayScrollbars } from 'overlayscrollbars';\r\n\r\nconst targets: Set<Element> = new Set();\r\nconst targetInstanceMap: WeakMap<Element, OverlayScrollbars> = new WeakMap();\r\n\r\n/**\r\n * Adds the given OverlayScrollbars instance to the given element.\r\n * @param target The element which is the target of the OverlayScrollbars instance.\r\n * @param osInstance The OverlayScrollbars instance.\r\n */\r\nexport const addInstance = (target: Element, osInstance: OverlayScrollbars): void => {\r\n  targetInstanceMap.set(target, osInstance);\r\n  targets.add(target);\r\n};\r\n\r\n/**\r\n * Removes a OverlayScrollbars instance from the given element.\r\n * @param target The element from which its OverlayScrollbars instance shall be removed.\r\n */\r\nexport const removeInstance = (target: Element): void => {\r\n  targetInstanceMap.delete(target);\r\n  targets.delete(target);\r\n};\r\n\r\n/**\r\n * Gets the OverlayScrollbars from the given element or undefined if it doesn't have one.\r\n * @param target The element of which its OverlayScrollbars instance shall be get.\r\n */\r\nexport const getInstance = (target: Element): OverlayScrollbars | undefined =>\r\n  targetInstanceMap.get(target);\r\n\r\n/**\r\n * Gets a Map which represents all active OverayScrollbars instances.\r\n * The Key is the element and the value is the instance.\r\n */\r\nexport const allInstances = (): ReadonlyMap<Element, OverlayScrollbars> => {\r\n  const validTargetInstanceMap: Map<Element, OverlayScrollbars> = new Map();\r\n\r\n  targets.forEach((target: Element) => {\r\n    /* istanbul ignore else */\r\n    if (targetInstanceMap.has(target)) {\r\n      validTargetInstanceMap.set(target, targetInstanceMap.get(target)!);\r\n    }\r\n  });\r\n\r\n  targets.clear();\r\n\r\n  validTargetInstanceMap.forEach((instance: OverlayScrollbars, validTarget: Element) => {\r\n    targets.add(validTarget);\r\n  });\r\n\r\n  return validTargetInstanceMap;\r\n};\r\n","import { OSOptions } from 'options';\r\nimport { createEventListenerHub } from 'support';\r\nimport { PartialOptions } from 'typings';\r\nimport type {\r\n  InitialEventListeners,\r\n  AddEventListener,\r\n  RemoveEventListener,\r\n  TriggerEventListener,\r\n  EventListener,\r\n} from 'support/eventListeners';\r\n/*\r\nonScrollStart               : null,\r\nonScroll                    : null,\r\nonScrollStop                : null,\r\nonOverflowChanged           : null,\r\nonOverflowAmountChanged     : null, // fusion with onOverflowChanged\r\nonDirectionChanged          : null, // gone\r\nonContentSizeChanged        : null, // gone\r\nonHostSizeChanged           : null, // gone\r\n*/\r\n\r\nexport interface OnUpdatedEventListenerArgs {\r\n  updateHints: {\r\n    sizeChanged: boolean;\r\n    directionChanged: boolean;\r\n    heightIntrinsicChanged: boolean;\r\n    overflowAmountChanged: boolean;\r\n    overflowStyleChanged: boolean;\r\n    hostMutation: boolean;\r\n    contentMutation: boolean;\r\n  };\r\n  changedOptions: PartialOptions<OSOptions>;\r\n  force: boolean;\r\n}\r\n\r\nexport interface OSEventListenersNameArgsMap {\r\n  initialized: undefined;\r\n  initializationWithdrawn: undefined;\r\n  updated: OnUpdatedEventListenerArgs;\r\n  destroyed: undefined;\r\n}\r\n\r\nexport type OSEventListener<\r\n  N extends Extract<keyof OSEventListenersNameArgsMap, string> = Extract<\r\n    keyof OSEventListenersNameArgsMap,\r\n    string\r\n  >\r\n> = EventListener<OSEventListenersNameArgsMap, N>;\r\n\r\nexport type AddOSEventListener = AddEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type RemoveOSEventListener = RemoveEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type TriggerOSEventListener = TriggerEventListener<OSEventListenersNameArgsMap>;\r\n\r\nexport type InitialOSEventListeners = InitialEventListeners<OSEventListenersNameArgsMap>;\r\n\r\nexport const createOSEventListenerHub = (initialEventListeners?: InitialOSEventListeners) =>\r\n  createEventListenerHub(initialEventListeners);\r\n","import { OSTarget, OSInitializationObject, PartialOptions, OverflowStyle } from 'typings';\r\nimport {\r\n  assignDeep,\r\n  isEmptyObject,\r\n  each,\r\n  isFunction,\r\n  keys,\r\n  isHTMLElement,\r\n  XY,\r\n  TRBL,\r\n} from 'support';\r\nimport { createStructureSetup, createScrollbarsSetup } from 'setups';\r\nimport { getOptionsDiff, OSOptions, ReadonlyOSOptions } from 'options';\r\nimport { DefaultInitializationStrategy, getEnvironment, InitializationStrategy } from 'environment';\r\nimport {\r\n  getPlugins,\r\n  addPlugin,\r\n  optionsValidationPluginName,\r\n  OSPlugin,\r\n  OptionsValidationPluginInstance,\r\n} from 'plugins';\r\nimport { addInstance, getInstance, removeInstance } from 'instances';\r\nimport {\r\n  createOSEventListenerHub,\r\n  InitialOSEventListeners,\r\n  AddOSEventListener,\r\n  RemoveOSEventListener,\r\n} from 'eventListeners';\r\n\r\nexport interface OverlayScrollbarsStatic {\r\n  (\r\n    target: OSTarget | OSInitializationObject,\r\n    options?: PartialOptions<OSOptions>,\r\n    eventListeners?: InitialOSEventListeners\r\n  ): OverlayScrollbars;\r\n\r\n  plugin(osPlugin: OSPlugin | OSPlugin[]): void;\r\n  env(): OverlayScrollbarsEnv;\r\n}\r\n\r\nexport interface OverlayScrollbarsEnv {\r\n  scrollbarSize: XY<number>;\r\n  scrollbarIsOverlaid: XY<boolean>;\r\n  scrollbarStyling: boolean;\r\n  rtlScrollBehavior: { n: boolean; i: boolean };\r\n  flexboxGlue: boolean;\r\n  cssCustomProperties: boolean;\r\n  defaultInitializationStrategy: DefaultInitializationStrategy;\r\n  defaultDefaultOptions: OSOptions;\r\n\r\n  getInitializationStrategy(): InitializationStrategy;\r\n  setInitializationStrategy(newInitializationStrategy: Partial<InitializationStrategy>): void;\r\n  getDefaultOptions(): OSOptions;\r\n  setDefaultOptions(newDefaultOptions: PartialOptions<OSOptions>): void;\r\n}\r\n\r\nexport interface OverlayScrollbarsState {\r\n  padding: TRBL;\r\n  paddingAbsolute: boolean;\r\n  overflowAmount: XY<number>;\r\n  overflowStyle: XY<OverflowStyle>;\r\n  hasOverflow: XY<boolean>;\r\n}\r\n\r\nexport interface OverlayScrollbarsElements {\r\n  target: HTMLElement;\r\n  host: HTMLElement;\r\n  padding: HTMLElement;\r\n  viewport: HTMLElement;\r\n  content: HTMLElement;\r\n}\r\n\r\nexport interface OverlayScrollbars {\r\n  options(): OSOptions;\r\n  options(newOptions?: PartialOptions<OSOptions>): OSOptions;\r\n\r\n  update(force?: boolean): void;\r\n  destroy(): void;\r\n\r\n  state(): OverlayScrollbarsState;\r\n  elements(): OverlayScrollbarsElements;\r\n\r\n  on: AddOSEventListener;\r\n  off: RemoveOSEventListener;\r\n}\r\n\r\n/**\r\n * Notes:\r\n * Height intrinsic detection use \"content: true\" init strategy - or open ticket for custom height intrinsic observer\r\n */\r\n\r\nexport const OverlayScrollbars: OverlayScrollbarsStatic = (\r\n  target,\r\n  options?,\r\n  eventListeners?\r\n): OverlayScrollbars => {\r\n  const {\r\n    _getDefaultOptions,\r\n    _nativeScrollbarIsOverlaid,\r\n    _addListener: addEnvListener,\r\n  } = getEnvironment();\r\n  const plugins = getPlugins();\r\n  const instanceTarget = isHTMLElement(target) ? target : target.target;\r\n  const potentialInstance = getInstance(instanceTarget);\r\n  if (potentialInstance) {\r\n    return potentialInstance;\r\n  }\r\n\r\n  const optionsValidationPlugin = plugins[\r\n    optionsValidationPluginName\r\n  ] as OptionsValidationPluginInstance;\r\n  const validateOptions = (newOptions?: PartialOptions<OSOptions>) => {\r\n    const opts = newOptions || {};\r\n    const validate = optionsValidationPlugin && optionsValidationPlugin._;\r\n    return validate ? validate(opts, true) : opts;\r\n  };\r\n  const currentOptions: ReadonlyOSOptions = assignDeep(\r\n    {},\r\n    _getDefaultOptions(),\r\n    validateOptions(options)\r\n  );\r\n  const [addEvent, removeEvent, triggerEvent] = createOSEventListenerHub(eventListeners);\r\n\r\n  if (\r\n    _nativeScrollbarIsOverlaid.x &&\r\n    _nativeScrollbarIsOverlaid.y &&\r\n    !currentOptions.nativeScrollbarsOverlaid.initialize\r\n  ) {\r\n    triggerEvent('initializationWithdrawn');\r\n  }\r\n\r\n  const [updateStructure, structureState, destroyStructure] = createStructureSetup(\r\n    target,\r\n    currentOptions\r\n  );\r\n  const [updateScrollbars, , destroyScrollbars] = createScrollbarsSetup(\r\n    target,\r\n    currentOptions,\r\n    structureState._elements\r\n  );\r\n\r\n  const update = (changedOptions: PartialOptions<OSOptions>, force?: boolean) => {\r\n    updateStructure(changedOptions, force);\r\n    updateScrollbars(changedOptions, force);\r\n  };\r\n\r\n  const removeEnvListener = addEnvListener(update.bind(0, {}, true));\r\n\r\n  structureState._addOnUpdatedListener((updateHints, changedOptions, force) => {\r\n    const {\r\n      _sizeChanged,\r\n      _directionChanged,\r\n      _heightIntrinsicChanged,\r\n      _overflowAmountChanged,\r\n      _overflowStyleChanged,\r\n      _contentMutation,\r\n      _hostMutation,\r\n    } = updateHints;\r\n\r\n    triggerEvent('updated', {\r\n      updateHints: {\r\n        sizeChanged: _sizeChanged,\r\n        directionChanged: _directionChanged,\r\n        heightIntrinsicChanged: _heightIntrinsicChanged,\r\n        overflowAmountChanged: _overflowAmountChanged,\r\n        overflowStyleChanged: _overflowStyleChanged,\r\n        contentMutation: _contentMutation,\r\n        hostMutation: _hostMutation,\r\n      },\r\n      changedOptions,\r\n      force,\r\n    });\r\n  });\r\n\r\n  const instance: OverlayScrollbars = {\r\n    options(newOptions?: PartialOptions<OSOptions>) {\r\n      if (newOptions) {\r\n        const changedOptions = getOptionsDiff(currentOptions, validateOptions(newOptions));\r\n\r\n        if (!isEmptyObject(changedOptions)) {\r\n          assignDeep(currentOptions, changedOptions);\r\n          update(changedOptions);\r\n        }\r\n      }\r\n      return assignDeep({}, currentOptions);\r\n    },\r\n    on: addEvent,\r\n    off: removeEvent,\r\n    state() {\r\n      const { _overflowAmount, _overflowStyle, _hasOverflow, _padding, _paddingAbsolute } =\r\n        structureState();\r\n      return assignDeep(\r\n        {},\r\n        {\r\n          overflowAmount: _overflowAmount,\r\n          overflowStyle: _overflowStyle,\r\n          hasOverflow: _hasOverflow,\r\n          padding: _padding,\r\n          paddingAbsolute: _paddingAbsolute,\r\n        }\r\n      );\r\n    },\r\n    elements() {\r\n      const { _target, _host, _padding, _viewport, _content } = structureState._elements;\r\n      return assignDeep(\r\n        {},\r\n        {\r\n          target: _target,\r\n          host: _host,\r\n          padding: _padding || _viewport,\r\n          viewport: _viewport,\r\n          content: _content || _viewport,\r\n        }\r\n      );\r\n    },\r\n    update(force?: boolean) {\r\n      update({}, force);\r\n    },\r\n    destroy: () => {\r\n      removeInstance(instanceTarget);\r\n      removeEnvListener();\r\n      removeEvent();\r\n\r\n      destroyScrollbars();\r\n      destroyStructure();\r\n\r\n      triggerEvent('destroyed');\r\n    },\r\n  };\r\n\r\n  each(keys(plugins), (pluginName) => {\r\n    const pluginInstance = plugins[pluginName];\r\n    if (isFunction(pluginInstance)) {\r\n      pluginInstance(OverlayScrollbars, instance);\r\n    }\r\n  });\r\n\r\n  instance.update(true);\r\n\r\n  addInstance(instanceTarget, instance);\r\n\r\n  triggerEvent('initialized');\r\n\r\n  return instance;\r\n};\r\n\r\nOverlayScrollbars.plugin = addPlugin;\r\nOverlayScrollbars.env = () => {\r\n  const {\r\n    _nativeScrollbarSize,\r\n    _nativeScrollbarIsOverlaid,\r\n    _nativeScrollbarStyling,\r\n    _rtlScrollBehavior,\r\n    _flexboxGlue,\r\n    _cssCustomProperties,\r\n    _defaultInitializationStrategy,\r\n    _defaultDefaultOptions,\r\n    _getInitializationStrategy,\r\n    _setInitializationStrategy,\r\n    _getDefaultOptions,\r\n    _setDefaultOptions,\r\n  } = getEnvironment();\r\n  return assignDeep(\r\n    {},\r\n    {\r\n      scrollbarSize: _nativeScrollbarSize,\r\n      scrollbarIsOverlaid: _nativeScrollbarIsOverlaid,\r\n      scrollbarStyling: _nativeScrollbarStyling,\r\n      rtlScrollBehavior: _rtlScrollBehavior,\r\n      flexboxGlue: _flexboxGlue,\r\n      cssCustomProperties: _cssCustomProperties,\r\n      defaultInitializationStrategy: _defaultInitializationStrategy,\r\n      defaultDefaultOptions: _defaultDefaultOptions,\r\n\r\n      getInitializationStrategy: _getInitializationStrategy,\r\n      setInitializationStrategy: _setInitializationStrategy,\r\n      getDefaultOptions: _getDefaultOptions,\r\n      setDefaultOptions: _setDefaultOptions,\r\n    }\r\n  );\r\n};\r\n"],"names":["hasOwnProperty","zeroObj"],"mappings":"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"}